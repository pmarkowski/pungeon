{"version":3,"sources":["app/reducers/editorActionType.js","app/reducers/editorActions.js","app/utils/constants.js","app/dungeonObjects/BaseDungeonObjectOperations.js","app/dungeonObjects/DoorOperations.js","app/dungeonObjects/LabelOperations.js","app/dungeonObjects/WallOperations.js","app/dungeonObjects/SpaceOperations.js","app/dungeonObjects/TokenOperations.js","app/dungeonObjects/DungeonObjectOperations.js","app/utils/createArrayWithUpdatedObject.js","app/reducers/dungeonActionType.js","app/reducers/dungeonReducer.js","app/tools/toolType.js","app/reducers/editorReducer.js","app/reducers/index.js","app/store.js","app/reducers/dungeonActions.js","app/utils/geometry.js","app/tools/AddDoorTool.js","app/tools/AddLabelTool.js","app/tools/AddSpaceRectangleTool.js","app/tools/AddWallTool.js","app/tools/SelectTool.js","app/tools/AddSpacePolygonTool.js","app/tools/AddTokenTool.js","app/tools/ToolRouter.js","app/utils/download.js","app/rendering/DungeonRenderer.js","app/utils/keyboardEventHandlers.js","app/utils/mouseEventHandlers.js","app/components/DungeonEditor.js","app/components/StateEditorCard.js","app/components/PositionEditor.js","app/components/SizeEditor.js","app/components/StateEditor.js","app/components/ToolbarButton.js","app/components/Toolbar.js","app/App.js","serviceWorker.js","index.js"],"names":["EDITOR_ACTION_TYPE","PNG_EXPORTED","EXPORT_TO_PNG_CLICKED","CLEAR_ONGOING_SPACE_POLYGON","ADD_ONGOING_SPACE_POLYGON","MOVE_VIEWPORT","SET_CURRENT_MOUSE_POSITION","SCROLL_EVENT","MOUSE_DOWN","MOUSE_UP","SET_SCROLL_MOVES_VIEWPORT","SELECT_TOOL","SELECT_OBJECT","SELECT_OBJECTS","SELECT_AT_POINT","SELECT_IN_BOUNDING_BOX","KEY_PRESSED","KEY_RELEASED","selectObjects","objectIds","shouldMultiSelect","type","setCurrentMousePosition","x","y","GRID_TILE_SIZE","createDungeonObject","dungeonObjectType","id","uuid","BaseDungeonObjectOperations","object","PIXI","displayObject","isObjectSelected","DOOR_TYPE","DoorOperations","start","end","graphics","door","objectIsSelected","zIndex","clear","beginFill","lineStyle","moveTo","lineTo","half","endFill","tint","hitArea","LABEL_TYPE","LabelOperations","position","label","children","length","labelText","style","fontFamily","fontSize","addChild","fill","text","set","WALL_TYPE","WallOperations","wall","drawCircle","this","createWallHitArea","startPoint","endPoint","rise","run","slope","inverseSlope","Math","min","abs","getOffsetAlongSlope","xOffset","yOffset","polygonXOffset","polygonYOffset","distanceTravelledAlongSlope","slopeAngle","atan","cos","sin","SPACE_TYPE","createSpace","points","startX","startY","endX","endY","size","width","height","SpaceOperations","forEach","point","space","drawRect","firstPoint","index","TOKEN_TYPE","TokenOperations","sprite","token","objectSelectionGraphics","texture","from","process","textureUrl","angle","getChildAt","drawShape","getLocalBounds","removeChildAt","objectOperations","translate","dungeonObject","filter","operation","map","createArrayWithUpdatedObject","array","update","createArrayWithUpdatedObjects","ids","includes","objectCopy","DUNGEON_ACTION_TYPE","NEW_DUNGEON","SET_DUNGEON_SIZE","MOVE_SELECTED_OBJECT","SET_SELECTED_OBJECT_TEXTURE_PATH","SET_SELECTED_OBJECT_ANGLE","SET_SELECTED_OBJECT_LABEL","SET_SELECTED_OBJECT_POSITION","SET_SELECTED_OBJECT_SIZE","SET_SELECTED_OBJECT_START","SET_SELECTED_OBJECT_END","ADD_OBJECT","DELETE_OBJECTS","dungeonReducer","state","action","objects","arrayWithUpdatedObject","selectedObjectIds","deltaX","deltaY","selectedObject","texturePath","objectArray","slice","newObject","newObjectArray","TOOL_TYPE","SELECT","NEW_WALL","NEW_SPACE_RECTANGLE","NEW_SPACE_POLYGON","NEW_DOOR","NEW_LABEL","NEW_TOKEN","defaultEditorState","scrollMovesViewport","selectedTool","scale","mouse","mouseDown","startPosition","currentPosition","keyboard","heldKeys","selectingAtPoint","selectingInBoundingBox","combineReducers","editor","newHeldKeys","key","exportToPngClicked","ongoingSpacePolygon","newPolygonArray","holdingCtrl","scaleDelta","scrollY","minimumScale","maximumScale","newScale","max","scrollX","newSelectedObjectIds","objectId","Set","dungeon","store","createStore","reducer","window","__REDUX_DEVTOOLS_EXTENSION__","addObject","deleteObjects","moveObjects","setSelectedObjectAngle","square","lineLength","v","w","sqrt","getClosestPointOnLine","p","a","b","atob","len","dot","t","AddDoorTool","getState","mousePoint","minDistance","snapPoint","minWallId","scaledStart","scaledEnd","closestPoint","distance","doorWall","find","dispatch","AddLabelTool","dungeonSpaceX","dungeonSpaceY","AddSpaceRectangleTool","floor","ceil","snappedX","snappedY","AddWallTool","round","createWall","hoverX","hoverY","isDragging","endPosition","createRectangle","SelectTool","shouldAddToSelection","boundingRectangle","selectAtPoint","AddSpacePolygonTool","pointArray","addOngoingSpacePolygonPoint","AddTokenTool","tokenTextureUrl","toolMap","download","data","filename","downloadLink","document","createElement","href","target","click","render","app","stage","handlePanning","fractionalScale","handleScaling","globalPosition","worldTransform","apply","renderer","plugins","interaction","hitTest","objectIdsToSelect","child","rect1","rect2","num1","num2","doRectanglesIntersect","push","handleSelecting","drawDungeonObjects","drawGrid","exportTexture","generateTexture","extract","base64","exportImage","handleExporting","mouseOverRenderer","renderTool","ToolRouter","mousePosition","getLocalPosition","container","objectIdMap","reduce","containerObjectIds","Object","keys","has","newChildGraphics","createRenderObject","interactive","renderObject","DungeonObjectOperations","removeChild","gridWidth","gridHeight","i","j","handleKeyPressed","keyboardEvent","repeat","handleKeyReleased","handleMouseDown","mouseEvent","buttons","handleMouseUp","onMouseUp","handleMouseMove","movementX","movementY","handleWheelEvent","wheelEvent","getModifierState","DungeonEditor","tabIndex","ref","element","canvasDiv","backgroundColor","sharedLoader","sharedTicker","antialias","appendChild","view","resizeTo","resize","Number","MAX_SAFE_INTEGER","sortableChildren","setupInteractions","ticker","add","renderDungeon","addEventListener","MouseEventHandler","preventDefault","event","pointerEvent","React","Component","StateEditorCard","title","className","PositionEditor","onUpdate","value","onChange","changeEvent","parseInt","SizeEditor","StateEditor","selectedObjectId","dungeonSize","scrollPansViewport","Fragment","undefined","DungeonActions","step","direction","onClick","class","checked","connect","ToolbarButton","toolName","toolId","Toolbar","dispatchSelectedTool","role","App","Boolean","location","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.2a066e5e.chunk.js","sourcesContent":["const EDITOR_ACTION_TYPE = {\n    PNG_EXPORTED: 'PNG_EXPORTED',\n    EXPORT_TO_PNG_CLICKED: 'EXPORT_TO_PNG_CLICKED',\n    CLEAR_ONGOING_SPACE_POLYGON: 'CLEAR_ONGOING_SPACE_POLYGON',\n    ADD_ONGOING_SPACE_POLYGON: 'ADD_ONGOING_SPACE_POLYGON',\n    MOVE_VIEWPORT: 'MOVE_VIEWPORT',\n    SET_CURRENT_MOUSE_POSITION: 'SET_CURRENT_MOUSE_POSITION',\n    SCROLL_EVENT: 'SCROLL_EVENT',\n    MOUSE_DOWN: 'MOUSE_DOWN',\n    MOUSE_UP: 'MOUSE_UP',\n    SET_SCROLL_MOVES_VIEWPORT: 'SET_SCROLL_MOVES_VIEWPORT',\n    SELECT_TOOL: 'SELECT_TOOL',\n    SELECT_OBJECT: 'SELECT_OBJECT',\n    SELECT_OBJECTS: 'SELECT_OBJECTS',\n    SELECT_AT_POINT: 'SELECT_AT_POINT',\n    SELECT_IN_BOUNDING_BOX: 'SELECT_IN_BOUNDING_BOX',\n    KEY_PRESSED: 'KEY_PRESSED',\n    KEY_RELEASED: 'KEY_RELEASED'\n}\n\nexport default EDITOR_ACTION_TYPE;\n","import EDITOR_ACTION_TYPE from \"./editorActionType\"\n\nexport const keyPressed = (key) => ({\n    type: EDITOR_ACTION_TYPE.KEY_PRESSED,\n    key\n})\n\nexport const keyReleased = (key) => ({\n    type: EDITOR_ACTION_TYPE.KEY_RELEASED,\n    key\n})\n\nexport const mouseDown = () => ({\n    type: EDITOR_ACTION_TYPE.MOUSE_DOWN\n})\n\nexport const mouseUp = () => ({\n    type: EDITOR_ACTION_TYPE.MOUSE_UP\n})\n\nexport const pngExported = () => ({\n    type: EDITOR_ACTION_TYPE.PNG_EXPORTED\n})\n\nexport const exportToPngClicked = () => ({\n    type: EDITOR_ACTION_TYPE.EXPORT_TO_PNG_CLICKED\n})\n\nexport const clearOngoingSpacePolygonPoint = () => ({\n    type: EDITOR_ACTION_TYPE.CLEAR_ONGOING_SPACE_POLYGON\n})\n\nexport const addOngoingSpacePolygonPoint = (x, y) => ({\n    type: EDITOR_ACTION_TYPE.ADD_ONGOING_SPACE_POLYGON,\n    position: {\n        x: x,\n        y: y\n    }\n})\n\nexport const scroll = (deltaX, deltaY, holdingCtrl) => ({\n    type: EDITOR_ACTION_TYPE.SCROLL_EVENT,\n    scrollX: deltaX,\n    scrollY: deltaY,\n    holdingCtrl: holdingCtrl\n})\n\nexport const moveViewport = (deltaX, deltaY) => ({\n    type: EDITOR_ACTION_TYPE.MOVE_VIEWPORT,\n    deltaX: deltaX,\n    deltaY: deltaY\n})\n\nexport const selectTool = (toolName) => ({\n    type: EDITOR_ACTION_TYPE.SELECT_TOOL,\n    selectedTool: toolName\n})\n\nexport const selectAtPoint = (x, y, shouldMultiSelect) => ({\n    type: EDITOR_ACTION_TYPE.SELECT_AT_POINT,\n    x,\n    y,\n    shouldMultiSelect\n})\n\nexport const selectInBoundingBox = (x, y, width, height, shouldMultiSelect) => ({\n    type: EDITOR_ACTION_TYPE.SELECT_IN_BOUNDING_BOX,\n    x,\n    y,\n    width,\n    height,\n    shouldMultiSelect\n})\n\nexport const selectObject = (objectId, shouldMultiSelect) => ({\n    type: EDITOR_ACTION_TYPE.SELECT_OBJECT,\n    objectId,\n    shouldMultiSelect\n})\n\nexport const selectObjects = (objectIds, shouldMultiSelect) => ({\n    type: EDITOR_ACTION_TYPE.SELECT_OBJECTS,\n    objectIds,\n    shouldMultiSelect\n})\n\nexport const setScrollMovesViewport = (scrollMovesViewport) => ({\n    type: EDITOR_ACTION_TYPE.SET_SCROLL_MOVES_VIEWPORT,\n    scrollMovesViewport: scrollMovesViewport\n})\n\nexport const setCurrentMousePosition = (x, y) => ({\n    type: EDITOR_ACTION_TYPE.SET_CURRENT_MOUSE_POSITION,\n    x: x,\n    y: y\n})\n","export const GRID_TILE_SIZE = 70;","import * as PIXI from 'pixi.js';\nimport { v4 as uuid } from 'uuid';\n\n/**\n * @typedef {{ type: string, id: string }} BaseDungeonObject\n */\n\n/**\n * @returns {BaseDungeonObject}\n */\nexport const createDungeonObject = (dungeonObjectType) => ({\n    id: uuid(),\n    type: dungeonObjectType\n})\n\nexport class BaseDungeonObjectOperations {\n    get dungeonObjectType() { return null; }\n\n    /**\n     * @param {BaseDungeonObject} object\n     * @param {number} x\n     * @param {number} y\n     */\n    translate(object, x, y) {}\n\n    createRenderObject() {\n        return new PIXI.Graphics();\n    }\n\n    /**\n     * @param {PIXI.DisplayObject} graphics\n     * @param {BaseDungeonObject} object\n     * @param {boolean} objectIsSelected\n     */\n    renderObject(displayObject, object, isObjectSelected) {}\n}\n","import * as PIXI from 'pixi.js';\nimport { GRID_TILE_SIZE } from \"../utils/constants\";\nimport { createDungeonObject, BaseDungeonObjectOperations } from './BaseDungeonObjectOperations';\n\n/**\n * @typedef {{\n *  start: {x: number, y: number},\n *  end: {x: number, y: number}\n * } & import('./BaseDungeonObjectOperations').BaseDungeonObject} Door\n */\n\nexport const DOOR_TYPE = \"door\"\n\n/**\n * @returns {Door}\n */\nexport const createDoor = (startX, startY, endX, endY) => {\n    return {\n        ...createDungeonObject(DOOR_TYPE),\n        start: {\n            x: startX,\n            y: startY\n        },\n        end: {\n            x: endX,\n            y: endY\n        }\n    }\n}\n\nexport class DoorOperations extends BaseDungeonObjectOperations {\n    get dungeonObjectType(){ return DOOR_TYPE; }\n\n    translate(object, x, y) {\n        object.start.x += x;\n        object.start.y += y;\n        object.end.x += x;\n        object.end.y += y;\n    }\n\n    renderObject(graphics, door, objectIsSelected) {\n        graphics.zIndex = 3;\n        graphics.clear();\n        graphics.beginFill(0x002b56, 1);\n        graphics.lineStyle(20, 0x002b56, 1, 0.5);\n        graphics.moveTo(door.start.x * GRID_TILE_SIZE, door.start.y * GRID_TILE_SIZE);\n        graphics.lineTo(door.end.x * GRID_TILE_SIZE, door.end.y * GRID_TILE_SIZE);\n        graphics.lineStyle();\n        let half = 20 / 2;\n        graphics.endFill();\n\n        if (objectIsSelected) {\n            graphics.tint = 0xffff33;\n        }\n        else {\n            graphics.tint = 0xffffff;\n        }\n        graphics.hitArea = new PIXI.Polygon([\n            door.start.x * GRID_TILE_SIZE - half, door.start.y * GRID_TILE_SIZE - half,\n            door.start.x * GRID_TILE_SIZE + half, door.start.y * GRID_TILE_SIZE + half,\n            door.end.x * GRID_TILE_SIZE + half, door.end.y * GRID_TILE_SIZE + half,\n            door.end.x * GRID_TILE_SIZE - half, door.end.y * GRID_TILE_SIZE - half,\n        ]);\n    }\n}\n","import * as PIXI from 'pixi.js';\nimport { GRID_TILE_SIZE } from '../utils/constants';\nimport { createDungeonObject, BaseDungeonObjectOperations } from './BaseDungeonObjectOperations';\n\n/**\n * @typedef {{\n *  position: {x: number, y: number},\n *  label: string\n * } & import('./BaseDungeonObjectOperations').BaseDungeonObject} Label\n */\n\nexport const LABEL_TYPE = \"label\"\n\n/**\n * @returns {Label}\n */\nexport const createLabel = (x, y, label) => {\n    return {\n        ...createDungeonObject(LABEL_TYPE),\n        label,\n        position: {\n            x,\n            y\n        }\n    }\n}\n\nexport class LabelOperations extends BaseDungeonObjectOperations {\n    get dungeonObjectType(){ return LABEL_TYPE; }\n\n    translate(object, x, y) {\n        object.position.x += x;\n        object.position.y += y;\n    }\n\n    renderObject(graphics, label, objectIsSelected) {\n        graphics.zIndex = 4;\n        graphics.clear();\n        if (graphics.children.length === 0) {\n            let labelText = new PIXI.Text(label.label);\n            labelText.style.fontFamily = 'Serif';\n            labelText.style.fontSize = 36;\n            graphics.addChild(labelText);\n        }\n\n        let labelText = graphics.children[0];\n\n        if (objectIsSelected) {\n            labelText.style.fill = 0xffff33;\n        }\n        else {\n            labelText.style.fill = 0x000000;\n        }\n\n        labelText.text = label.label;\n        labelText.position.set(\n            label.position.x * GRID_TILE_SIZE,\n            label.position.y * GRID_TILE_SIZE);\n    }\n}\n","import * as PIXI from 'pixi.js';\nimport { GRID_TILE_SIZE } from \"../utils/constants\";\nimport { createDungeonObject, BaseDungeonObjectOperations } from './BaseDungeonObjectOperations';\n\n/**\n * @typedef {{\n *  start: {x: number, y: number},\n *  end: {x: number, y: number}\n * } & import('./BaseDungeonObjectOperations').BaseDungeonObject} Wall\n */\n\n export const WALL_TYPE = \"wall\"\n\n/**\n * @returns {Wall}\n */\nexport const createWall = (startX, startY, endX, endY) => {\n    return {\n        ...createDungeonObject(WALL_TYPE),\n        start: {\n            x: startX,\n            y: startY\n        },\n        end: {\n            x: endX,\n            y: endY\n        }\n    }\n}\n\nexport class WallOperations extends BaseDungeonObjectOperations {\n    get dungeonObjectType(){ return WALL_TYPE; }\n\n    translate(object, x, y) {\n        object.start.x += x;\n        object.start.y += y;\n        object.end.x += x;\n        object.end.y += y;\n    }\n\n    renderObject(graphics, wall, objectIsSelected) {\n        graphics.zIndex = 2;\n        graphics.clear();\n        graphics.beginFill(0x0266e6, 1);\n        graphics.lineStyle(10, 0x0266e6, 1, 0.5);\n        graphics.moveTo(wall.start.x * GRID_TILE_SIZE, wall.start.y * GRID_TILE_SIZE);\n        graphics.lineTo(wall.end.x * GRID_TILE_SIZE, wall.end.y * GRID_TILE_SIZE);\n        graphics.lineStyle();\n        graphics.drawCircle(wall.start.x * GRID_TILE_SIZE, wall.start.y * GRID_TILE_SIZE, 5);\n        graphics.drawCircle(wall.end.x * GRID_TILE_SIZE, wall.end.y * GRID_TILE_SIZE, 5);\n        let half = 10 / 2;\n        graphics.endFill();\n\n        if (objectIsSelected) {\n            graphics.tint = 0xffff33;\n        }\n        else {\n            graphics.tint = 0xffffff;\n        }\n        graphics.hitArea = this.createWallHitArea(wall, half);\n    }\n\n    createWallHitArea(wall, half) {\n        if (wall.start.x === wall.end.x && wall.start.y === wall.end.y) {\n            return new PIXI.Circle(\n                wall.start.x * GRID_TILE_SIZE,\n                wall.start.y * GRID_TILE_SIZE,\n                half);\n        }\n        else {\n            let startPoint = wall.start.x <= wall.end.x ? wall.start : wall.end;\n            let endPoint = wall.start.x > wall.end.x ? wall.start : wall.end;\n\n            let rise = endPoint.y - startPoint.y;\n            let run = endPoint.x - startPoint.x;\n            let slope = rise / run;\n            let inverseSlope = -1 / slope;\n\n            if (slope === 0 || inverseSlope === 0) {\n                return new PIXI.Rectangle(\n                    startPoint.x * GRID_TILE_SIZE - half,\n                    Math.min(startPoint.y, endPoint.y) * GRID_TILE_SIZE - half,\n                    run * GRID_TILE_SIZE + half * 2,\n                    Math.abs(rise) * GRID_TILE_SIZE + half * 2\n                )\n            }\n\n            let { xOffset, yOffset} = this.getOffsetAlongSlope(slope, half);\n            let { xOffset: polygonXOffset, yOffset: polygonYOffset } = this.getOffsetAlongSlope(inverseSlope, half);\n\n            return new PIXI.Polygon([\n                startPoint.x * GRID_TILE_SIZE - xOffset - polygonXOffset, startPoint.y * GRID_TILE_SIZE - yOffset - polygonYOffset,\n                startPoint.x * GRID_TILE_SIZE - xOffset + polygonXOffset, startPoint.y * GRID_TILE_SIZE - yOffset + polygonYOffset,\n                endPoint.x   * GRID_TILE_SIZE + xOffset + polygonXOffset, endPoint.y   * GRID_TILE_SIZE + yOffset + polygonYOffset,\n                endPoint.x   * GRID_TILE_SIZE + xOffset - polygonXOffset, endPoint.y   * GRID_TILE_SIZE + yOffset - polygonYOffset,\n            ]);\n        }\n    }\n\n    getOffsetAlongSlope(slope, distanceTravelledAlongSlope) {\n        let slopeAngle = Math.atan(slope);\n        let xOffset = Math.cos(slopeAngle) * distanceTravelledAlongSlope;\n        let yOffset = Math.sin(slopeAngle) * distanceTravelledAlongSlope;\n        return {\n            xOffset: xOffset,\n            yOffset: yOffset\n        };\n    }\n}\n","import { GRID_TILE_SIZE } from \"../utils/constants\";\nimport { createDungeonObject, BaseDungeonObjectOperations } from './BaseDungeonObjectOperations';\n\n/**\n * @typedef {{\n *  position: {x: number, y: number},\n *  size: {width: number, height: number }\n * } & import(\"./BaseDungeonObjectOperations\").BaseDungeonObject} RectangularSpace\n * @typedef {{\n *  points: {x: number, y: number}[]\n * } & import(\"./BaseDungeonObjectOperations\").BaseDungeonObject} PolygonalSpace\n * @typedef {RectangularSpace | PolygonalSpace} Space\n */\n\nexport const SPACE_TYPE = \"space\"\n\n/**\n * @returns {Space}\n */\nexport const createSpace = ({points, startX, startY, endX, endY}) => {\n    if (points) {\n        return {\n            ...createDungeonObject(SPACE_TYPE),\n            points\n        }\n    }\n    else {\n        return {\n            ...createDungeonObject(SPACE_TYPE),\n            position: {\n                x: startX,\n                y: startY\n            },\n            size: {\n                width: endX - startX,\n                height: endY - startY\n            }\n        }\n    }\n}\n\nexport class SpaceOperations extends BaseDungeonObjectOperations {\n    get dungeonObjectType() { return SPACE_TYPE; }\n\n    translate(object, x, y) {\n        if (object.position) {\n            object.position.x += x;\n            object.position.y += y;\n        }\n        else {\n            object.points.forEach(point => {\n                point.x += x;\n                point.y += y;\n            });\n        }\n    }\n\n    renderObject(graphics, space, objectIsSelected) {\n        graphics.clear();\n        graphics.beginFill(0xd6d5d5);\n        if (space.position && space.size) {\n            graphics.drawRect(\n                space.position.x * GRID_TILE_SIZE,\n                space.position.y * GRID_TILE_SIZE,\n                space.size.width * GRID_TILE_SIZE,\n                space.size.height * GRID_TILE_SIZE);\n            graphics.endFill();\n        }\n        else {\n            let firstPoint = space.points[0];\n            graphics.moveTo(firstPoint.x * GRID_TILE_SIZE, firstPoint.y * GRID_TILE_SIZE);\n            for (let index = 0; index < space.points.length; index++) {\n                const point = space.points[index];\n                graphics.lineTo(point.x * GRID_TILE_SIZE, point.y * GRID_TILE_SIZE);\n            }\n            graphics.endFill();\n        }\n\n        if (objectIsSelected) {\n            graphics.tint = 0xffffcc;\n        }\n        else {\n            graphics.tint = 0xffffff;\n        }\n    }\n}\n","import * as PIXI from 'pixi.js'\nimport { GRID_TILE_SIZE } from '../utils/constants';\nimport { BaseDungeonObjectOperations, createDungeonObject } from './BaseDungeonObjectOperations';\n\n/**\n * @typedef {{\n *  textureUrl: string,\n *  position: {x: number, y: number},\n *  size: {width: number, height: number}\n *  angle: number\n * } & import('./BaseDungeonObjectOperations').BaseDungeonObject} Token\n */\n\nexport const TOKEN_TYPE = \"token\"\n\n/**\n * @returns {Token}\n */\nexport const createToken = (textureUrl, x, y, width, height, angle) => {\n    return {\n        ...createDungeonObject(TOKEN_TYPE),\n        textureUrl,\n        position: {\n            x,\n            y\n        },\n        size: {\n            width,\n            height\n        },\n        angle\n    };\n}\n\nexport class TokenOperations extends BaseDungeonObjectOperations {\n    get dungeonObjectType(){ return TOKEN_TYPE; }\n\n    translate(object, x, y) {\n        object.position.x += x;\n        object.position.y += y;\n    }\n\n    createRenderObject() {\n        return new PIXI.Sprite();\n    }\n\n    renderObject(sprite, token, objectIsSelected) {\n        sprite.zIndex = 4;\n        sprite.texture = PIXI.Texture.from(process.env.PUBLIC_URL + token.textureUrl);\n        sprite.x = token.position.x * GRID_TILE_SIZE;\n        sprite.y = token.position.y * GRID_TILE_SIZE;\n        sprite.width = token.size.width * GRID_TILE_SIZE;\n        sprite.height = token.size.height * GRID_TILE_SIZE;\n        sprite.angle = token.angle;\n\n        if (objectIsSelected) {\n            let objectSelectionGraphics;\n            if (sprite.children.length === 0) {\n                objectSelectionGraphics = new PIXI.Graphics();\n                sprite.addChild(objectSelectionGraphics);\n            } else {\n                objectSelectionGraphics = sprite.getChildAt(0);\n            }\n            objectSelectionGraphics.clear();\n            objectSelectionGraphics.lineStyle(5, 0xfffd00);\n            objectSelectionGraphics.drawShape(sprite.getLocalBounds());\n        }\n        else {\n            if (sprite.children.length > 0) {\n                sprite.removeChildAt(0);\n            }\n        }\n    }\n}\n","import { DoorOperations } from \"./DoorOperations\";\nimport { LabelOperations } from \"./LabelOperations\";\nimport { WallOperations } from \"./WallOperations\";\nimport { SpaceOperations } from \"./SpaceOperations\";\nimport { TokenOperations } from \"./TokenOperations\";\n\n/**\n * @typedef { import(\"./DoorOperations\").Door\n * | import(\"./LabelOperations\").Label\n * | import(\"./WallOperations\").Wall\n * | import(\"./SpaceOperations\").Space\n * | import(\"./TokenOperations\").Token} DungeonObject\n */\n\nconst objectOperations = [\n    new DoorOperations(),\n    new LabelOperations(),\n    new WallOperations(),\n    new SpaceOperations(),\n    new TokenOperations()\n]\n\nexport const renderObject = (graphics, dungeonObject, objectIsSelected) =>\n    objectOperations.filter(operation => operation.dungeonObjectType === dungeonObject.type).map(operation => operation.renderObject(graphics, dungeonObject, objectIsSelected))\n\nexport const createRenderObject = (dungeonObject) => {\n    return objectOperations.filter(operation => operation.dungeonObjectType === dungeonObject.type).map(operation => operation.createRenderObject())[0]\n}\n\nexport const translate = (dungeonObject, x, y) =>\n    objectOperations.filter(operation => operation.dungeonObjectType === dungeonObject.type).map(operation => operation.translate(dungeonObject, x, y))\n","export const createArrayWithUpdatedObject = (array, id, update) => {\n    return createArrayWithUpdatedObjects(array, [id], update);\n}\n\n/**\n * @param {import(\"../dungeonObjects/DungeonObject\").BaseDungeonObject[]} array\n * @param {string[]} ids\n * @param {function(object: import(\"../dungeonObjects/DungeonObject\").BaseDungeonObject) : void} update\n */\nexport const createArrayWithUpdatedObjects = (array, ids, update) => {\n    return array.map(object => {\n        if (ids.includes(object.id)) {\n            let objectCopy = {...object};\n            update(objectCopy);\n            return objectCopy;\n        }\n        else {\n            return object;\n        }\n    })\n}\n","const DUNGEON_ACTION_TYPE = {\n    NEW_DUNGEON: 'NEW_DUNGEON',\n    SET_DUNGEON_SIZE: 'SET_DUNGEON_SIZE',\n    MOVE_SELECTED_OBJECT: 'MOVE_SELECTED_OBJECT',\n    SET_SELECTED_OBJECT_TEXTURE_PATH: 'SET_SELECTED_OBJECT_TEXTURE_PATH',\n    SET_SELECTED_OBJECT_ANGLE: 'SET_SELECTED_OBJECT_ANGLE',\n    SET_SELECTED_OBJECT_LABEL: 'SET_SELECTED_OBJECT_LABEL',\n    SET_SELECTED_OBJECT_POSITION: 'SET_SELECTED_OBJECT_POSITION',\n    SET_SELECTED_OBJECT_SIZE: 'SET_SELECTED_OBJECT_SIZE',\n    SET_SELECTED_OBJECT_START: 'SET_SELECTED_OBJECT_START',\n    SET_SELECTED_OBJECT_END: 'SET_SELECTED_OBJECT_END',\n    ADD_OBJECT: 'ADD_OBJECT',\n    DELETE_OBJECTS: 'DELETE_OBJECTS'\n}\n\nexport default DUNGEON_ACTION_TYPE;\n","import { translate } from '../dungeonObjects/DungeonObjectOperations';\nimport { createArrayWithUpdatedObject, createArrayWithUpdatedObjects } from '../utils/createArrayWithUpdatedObject'\nimport DUNGEON_ACTION_TYPE from './dungeonActionType'\n\nexport const dungeonReducer = (state = {}, action) => {\n    switch (action.type) {\n        case DUNGEON_ACTION_TYPE.NEW_DUNGEON: {\n            return {\n                size: {\n                    width: 24,\n                    height: 32\n                },\n                objects: []\n            }\n        }\n        case DUNGEON_ACTION_TYPE.SET_DUNGEON_SIZE: {\n            return {\n                ...state,\n                size: {\n                    width: action.width,\n                    height: action.height\n                }\n            }\n        }\n        case DUNGEON_ACTION_TYPE.MOVE_SELECTED_OBJECT: {\n            let arrayWithUpdatedObject = createArrayWithUpdatedObjects(\n                state.objects,\n                action.selectedObjectIds,\n                (object) => translate(object, action.deltaX, action.deltaY));\n            return {\n                ...state,\n                objects: arrayWithUpdatedObject\n            };\n        }\n        case DUNGEON_ACTION_TYPE.SET_SELECTED_OBJECT_TEXTURE_PATH: {\n            let arrayWithUpdatedObject = createArrayWithUpdatedObject(\n                state.objects,\n                action.selectedObject,\n                (object) => object.textureUrl = action.texturePath);\n            return {\n                ...state,\n                objects: arrayWithUpdatedObject\n            };\n        }\n        case DUNGEON_ACTION_TYPE.SET_SELECTED_OBJECT_ANGLE: {\n            let arrayWithUpdatedObject = createArrayWithUpdatedObject(\n                state.objects,\n                action.selectedObject,\n                (object) => object.angle = action.angle);\n            return {\n                ...state,\n                objects: arrayWithUpdatedObject\n            };\n        }\n        case DUNGEON_ACTION_TYPE.SET_SELECTED_OBJECT_LABEL: {\n            let arrayWithUpdatedObject = createArrayWithUpdatedObject(\n                state.objects,\n                action.selectedObject,\n                (object) => object.label = action.label);\n            return {\n                ...state,\n                objects: arrayWithUpdatedObject\n            };\n        }\n        case DUNGEON_ACTION_TYPE.SET_SELECTED_OBJECT_POSITION: {\n            let arrayWithUpdatedObject = createArrayWithUpdatedObject(\n                state.objects,\n                action.selectedObject,\n                (object) => object.position = {\n                    x: action.x,\n                    y: action.y\n                });\n            return {\n                ...state,\n                objects: arrayWithUpdatedObject\n            };\n        }\n        case DUNGEON_ACTION_TYPE.SET_SELECTED_OBJECT_SIZE: {\n            let arrayWithUpdatedObject = createArrayWithUpdatedObject(\n                state.objects,\n                action.selectedObject,\n                (object) => object.size = {\n                    width: action.width,\n                    height: action.height\n                });\n            return {\n                ...state,\n                objects: arrayWithUpdatedObject\n            };\n        }\n        case DUNGEON_ACTION_TYPE.SET_SELECTED_OBJECT_START: {\n            let arrayWithUpdatedObject = createArrayWithUpdatedObject(\n                state.objects,\n                action.selectedObject,\n                (object) => object.start = {\n                    x: action.x,\n                    y: action.y\n                });\n            return {\n                ...state,\n                objects: arrayWithUpdatedObject\n            };\n        }\n        case DUNGEON_ACTION_TYPE.SET_SELECTED_OBJECT_END: {\n            let arrayWithUpdatedObject = createArrayWithUpdatedObject(\n                state.objects,\n                action.selectedObject,\n                (object) => object.end = {\n                    x: action.x,\n                    y: action.y\n                });\n            return {\n                ...state,\n                objects: arrayWithUpdatedObject,\n            };\n\n        }\n        case DUNGEON_ACTION_TYPE.ADD_OBJECT: {\n            let objectArray = state.objects.slice();\n            objectArray = [...objectArray, action.newObject];\n            return {\n                ...state,\n                objects: objectArray\n            };\n        }\n        case DUNGEON_ACTION_TYPE.DELETE_OBJECTS: {\n            let objectIds = action.objectIds;\n            if (objectIds) {\n                let newObjectArray = state.objects\n                    .filter(object => !objectIds.includes(object.id));\n                return {\n                    ...state,\n                    objects: newObjectArray\n                }\n            }\n            else {\n                return state;\n            }\n        }\n        default:\n            return state\n    }\n};\n\nexport default dungeonReducer\n","const TOOL_TYPE = {\n    SELECT: \"select\",\n    NEW_WALL: \"new_wall\",\n    NEW_SPACE_RECTANGLE: \"new_space_rectangle\",\n    NEW_SPACE_POLYGON: \"new_space_polygon\",\n    NEW_DOOR: \"new_door\",\n    NEW_LABEL: \"new_label\",\n    NEW_TOKEN: \"new_token\"\n};\n\nexport default TOOL_TYPE;\n","import TOOL_TYPE from \"../tools/toolType\";\nimport DUNGEON_ACTION_TYPE from \"./dungeonActionType\";\nimport EDITOR_ACTION_TYPE from \"./editorActionType\";\n\n/**\n * @typedef {defaultEditorState} EditorState\n */\nexport const defaultEditorState = {\n    scrollMovesViewport: false,\n    selectedTool: TOOL_TYPE.NEW_SPACE_RECTANGLE,\n    scale: 100,\n    position: {\n        x: 0,\n        y: 0\n    },\n    mouse: {\n        mouseDown: false,\n        startPosition: {\n            x: 0,\n            y: 0\n        },\n        currentPosition: {\n            x: 0,\n            y: 0\n        }\n    },\n    keyboard: {\n        heldKeys: {}\n    },\n    /** @type {string[]} */\n    selectedObjectIds: [],\n    /** @type {?{x: number, y: number, shouldMultiSelect: boolean}} */\n    selectingAtPoint: null,\n    /** @type {?{x: number, y: number, width: number, height: number, shouldMultiSelect: boolean}} */\n    selectingInBoundingBox: null\n};\n\nexport const editorReducer = (state = defaultEditorState, action) => {\n    switch (action.type) {\n        case EDITOR_ACTION_TYPE.KEY_PRESSED: {\n            let newHeldKeys = {...state.keyboard.heldKeys};\n            newHeldKeys[action.key] = true;\n            return {\n                ...state,\n                keyboard: {\n                    ...state.keyboard,\n                    heldKeys: newHeldKeys\n                }\n            }\n        }\n        case EDITOR_ACTION_TYPE.KEY_RELEASED: {\n            let newHeldKeys = {...state.keyboard.heldKeys};\n            delete newHeldKeys[action.key];\n            return {\n                ...state,\n                keyboard: {\n                    ...state.keyboard,\n                    heldKeys: newHeldKeys\n                }\n            }\n        }\n        case EDITOR_ACTION_TYPE.PNG_EXPORTED: {\n            return {\n                ...state,\n                exportToPngClicked: null\n            }\n        }\n        case EDITOR_ACTION_TYPE.EXPORT_TO_PNG_CLICKED: {\n            return {\n                ...state,\n                exportToPngClicked: true\n            }\n        }\n        case EDITOR_ACTION_TYPE.CLEAR_ONGOING_SPACE_POLYGON: {\n            return {\n                ...state,\n                ongoingSpacePolygon: null\n            }\n        }\n        case EDITOR_ACTION_TYPE.ADD_ONGOING_SPACE_POLYGON: {\n            let newPolygonArray = [...(state.ongoingSpacePolygon ?? []), action.position]\n            return {\n                ...state,\n                ongoingSpacePolygon: newPolygonArray\n            }\n        }\n        case EDITOR_ACTION_TYPE.MOVE_VIEWPORT: {\n            return {\n                ...state,\n                position: {\n                    x: state.position.x + action.deltaX,\n                    y: state.position.y + action.deltaY\n                }\n            }\n        }\n        case EDITOR_ACTION_TYPE.SET_CURRENT_MOUSE_POSITION: {\n            return {\n                ...state,\n                mouse: {\n                    ...state.mouse,\n                    currentPosition: {\n                        x: action.x,\n                        y: action.y\n                    }\n                }\n            }\n        }\n        case EDITOR_ACTION_TYPE.SCROLL_EVENT: {\n            if (!state.scrollMovesViewport || action.holdingCtrl) {\n                let scaleDelta = 10\n                if (action.scrollY > 0) {\n                    scaleDelta *= -1\n                }\n                let minimumScale = 10;\n                let maximumScale = 200;\n                let newScale = Math.min(Math.max(state.scale + scaleDelta, minimumScale), maximumScale)\n                if (state.scale !== newScale) {\n                    return {\n                        ...state,\n                        scale: newScale,\n                        position: {\n                            x: state.position.x - (state.mouse.currentPosition.x * (scaleDelta / 100)),\n                            y: state.position.y - (state.mouse.currentPosition.y * (scaleDelta / 100)),\n                        }\n                    };\n                }\n                else {\n                    return state;\n                }\n            }\n            else {\n                let scaleDelta = 0.5;\n                return {\n                    ...state,\n                    position: {\n                        x: state.position.x - action.scrollX * scaleDelta,\n                        y: state.position.y - action.scrollY * scaleDelta\n                    }\n                };\n            }\n        }\n        case EDITOR_ACTION_TYPE.MOUSE_DOWN: {\n            return {\n                ...state,\n                mouse: {\n                    ...state.mouse,\n                    mouseDown: true,\n                    startPosition: {\n                      x: state.mouse.currentPosition.x,\n                      y: state.mouse.currentPosition.y\n                    }\n                }\n            };\n        }\n        case EDITOR_ACTION_TYPE.MOUSE_UP: {\n            return {\n                ...state,\n                mouse: {\n                    ...state.mouse,\n                    mouseDown: false\n                }\n            };\n        }\n        case EDITOR_ACTION_TYPE.SET_SCROLL_MOVES_VIEWPORT: {\n            return {\n                ...state,\n                scrollMovesViewport: action.scrollMovesViewport\n            }\n        }\n        case EDITOR_ACTION_TYPE.SELECT_TOOL: {\n            let newSelectedObjectIds = state.selectedObjectIds;\n            if (action.selectedTool !== TOOL_TYPE.SELECT) {\n                newSelectedObjectIds = [];\n            }\n            return {\n                ...state,\n                selectedTool: action.selectedTool,\n                selectedObjectIds: newSelectedObjectIds\n            };\n        }\n        case EDITOR_ACTION_TYPE.SELECT_AT_POINT: {\n            return {\n                ...state,\n                selectingAtPoint: {\n                    x: action.x,\n                    y: action.y,\n                    shouldMultiSelect: action.shouldMultiSelect\n                }\n            }\n        }\n        case EDITOR_ACTION_TYPE.SELECT_IN_BOUNDING_BOX: {\n            return {\n                ...state,\n                selectingInBoundingBox: {\n                    x: action.x,\n                    y: action.y,\n                    width: action.width,\n                    height: action.height,\n                    shouldMultiSelect: action.shouldMultiSelect\n                }\n            }\n        }\n        case EDITOR_ACTION_TYPE.SELECT_OBJECT: {\n            let newSelectedObjectIds;\n            if (action.shouldMultiSelect && state.selectedObjectIds.includes(action.objectId)) {\n                newSelectedObjectIds = state.selectedObjectIds.filter(objectId => objectId !== action.objectId);\n            }\n            else if (action.shouldMultiSelect) {\n                newSelectedObjectIds = [...state.selectedObjectIds, action.objectId];\n            }\n            else {\n                newSelectedObjectIds = [action.objectId];\n            }\n            return {\n                ...state,\n                selectedObjectIds: newSelectedObjectIds,\n                selectingAtPoint: null,\n                selectingInBoundingBox: null\n            }\n        }\n        case EDITOR_ACTION_TYPE.SELECT_OBJECTS: {\n            let newSelectedObjectIds;\n            if (action.shouldMultiSelect) {\n                newSelectedObjectIds = [...new Set([...state.selectedObjectIds, ...action.objectIds])];\n            }\n            else {\n                newSelectedObjectIds = action.objectIds;\n            }\n            return {\n                ...state,\n                selectedObjectIds: newSelectedObjectIds,\n                selectingAtPoint: null,\n                selectingInBoundingBox: null\n            };\n        }\n        case DUNGEON_ACTION_TYPE.DELETE_OBJECTS: {\n            return {\n                ...state,\n                selectedObjectIds: []\n            }\n        }\n        default: {\n            return {\n                ...state\n            }\n        }\n    }\n}\n","import { combineReducers } from 'redux'\nimport dungeonReducer from './dungeonReducer'\nimport { editorReducer } from './editorReducer'\n\n/**\n * @typedef {{\n *  editor: import('./editorReducer').EditorState,\n *  dungeon: Object\n * }} State\n */\n\nexport default combineReducers({\n    editor: editorReducer,\n    dungeon: dungeonReducer\n})\n","import { createStore } from 'redux';\nimport reducer from './reducers/index'\n\nconst store = createStore(reducer,\n  {\n    dungeon: {\n      size: {\n        width: 28,\n        height: 32\n      },\n      objects: [\n        {\n          id: \"423894382\",\n          type: \"token\",\n          position: {\n            x: 2,\n            y: 4\n          },\n          size: {\n            width: 1,\n            height: 2\n          },\n          textureUrl: \"/assets/stairs.png\",\n          angle: 0\n        },\n        {\n          id: \"01f998f7-3ad4-43c6-b498-3249ab470b05\",\n          type: \"space\",\n          position: {\n            x: 1,\n            y: 1\n          },\n          size: {\n            width: 5,\n            height: 5\n          }\n        },\n        {\n          id: \"79178d8c-3a3e-42ee-b1ec-00dc37a045fc\",\n          type: \"space\",\n          position: {\n            x: 6,\n            y: 4\n          },\n          size: {\n            width: 7,\n            height: 9\n          }\n        },\n        {\n          id: \"6ce25fdc-9fd4-46c0-a924-74f5f9174193\",\n          type: \"space\",\n          position: {\n            x: 15,\n            y: 15\n          },\n          size: {\n            width: 6,\n            height: 7\n          }\n        },\n        {\n          id: \"e211fbd3-a817-47a5-bb47-481ba330e46d\",\n          type: \"space\",\n          position: {\n            x: 21,\n            y: 19\n          },\n          size: {\n            width: 4,\n            height: 9\n          }\n        },\n        {\n          id: '4abe3330-4a95-4c29-b71d-8ea768da1ee6',\n          type: \"wall\",\n          start: {\n            x: 1,\n            y: 1\n          },\n          end: {\n            x: 1,\n            y: 6\n          }\n        },\n        {\n          id: 'ad3c6f9b-f3f0-4025-8073-daacc68483ec',\n          type: \"wall\",\n          start: {\n            x: 6,\n            y: 6\n          },\n          end: {\n            x: 1,\n            y: 6\n          }\n        },\n        {\n          id: '68365136-d12f-4e54-8f7b-4cbd3ab424eb',\n          type: \"wall\",\n          start: {\n            x: 6,\n            y: 13\n          },\n          end: {\n            x: 6,\n            y: 6\n          }\n        },\n        {\n          id: '3d6435e5-8d67-4405-87d0-72c4e8f4dfaa',\n          type: \"wall\",\n          start: {\n            x: 13,\n            y: 13\n          },\n          end: {\n            x: 6,\n            y: 13\n          }\n        },\n        {\n          id: '384ac23d-f5fc-4cd1-9ad7-b528b62fa732',\n          type: \"wall\",\n          start: {\n            x: 13,\n            y: 4\n          },\n          end: {\n            x: 13,\n            y: 13\n          }\n        },\n        {\n          id: '161e3147-ca11-4dc4-a26b-ca8295c5abaa',\n          type: \"wall\",\n          start: {\n            x: 6,\n            y: 4\n          },\n          end: {\n            x: 13,\n            y: 4\n          }\n        },\n        {\n          id: 'e8092d63-e7e2-4cd2-8c80-8cd6030980f1',\n          type: \"wall\",\n          start: {\n            x: 6,\n            y: 1\n          },\n          end: {\n            x: 6,\n            y: 4\n          }\n        },\n        {\n          id: '71ed94d3-177b-428b-a8e5-fe25eb79a4ea',\n          type: \"wall\",\n          start: {\n            x: 1,\n            y: 1\n          },\n          end: {\n            x: 6,\n            y: 1\n          }\n        },\n        {\n          id: '0ea47a6f-af9f-4ec6-a7f3-881332643e2a',\n          type: \"wall\",\n          start: {\n            x: 15,\n            y: 15\n          },\n          end: {\n            x: 15,\n            y: 22\n          }\n        },\n        {\n          id: 'f7ec5579-7966-4ba4-b8ee-fdaad6372842',\n          type: \"wall\",\n          start: {\n            x: 21,\n            y: 22\n          },\n          end: {\n            x: 15,\n            y: 22\n          }\n        },\n        {\n          id: '1e587060-37cc-4b87-a88a-852c8055cabb',\n          type: \"wall\",\n          start: {\n            x: 21,\n            y: 15\n          },\n          end: {\n            x: 15,\n            y: 15\n          }\n        },\n        {\n          id: '79e1f702-6d60-435b-ba1e-584077a7d479',\n          type: \"wall\",\n          start: {\n            x: 21,\n            y: 19\n          },\n          end: {\n            x: 21,\n            y: 15\n          }\n        },\n        {\n          id: '231997d1-1453-4573-a2c0-0571428d7ac9',\n          type: \"wall\",\n          start: {\n            x: 25,\n            y: 19\n          },\n          end: {\n            x: 21,\n            y: 19\n          }\n        },\n        {\n          id: '85033454-8145-4d36-9b58-5e891f731f25',\n          type: \"wall\",\n          start: {\n            x: 21,\n            y: 22\n          },\n          end: {\n            x: 21,\n            y: 28\n          }\n        },\n        {\n          id: '2c6b4f88-4163-4847-ba05-c4ce865dfd87',\n          type: \"wall\",\n          start: {\n            x: 21,\n            y: 28\n          },\n          end: {\n            x: 25,\n            y: 28\n          }\n        },\n        {\n          id: '57013c9b-609f-4e59-ae1a-fd94a49bac80',\n          type: \"wall\",\n          start: {\n            x: 25,\n            y: 19\n          },\n          end: {\n            x: 25,\n            y: 28\n          }\n        }\n      ]\n    }\n  },\n  typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nexport default store;\n","import DUNGEON_ACTION_TYPE from \"./dungeonActionType\";\n\nexport const clearDungeon = () => ({\n    type: DUNGEON_ACTION_TYPE.NEW_DUNGEON\n})\n\n/**\n * @param {import('../dungeonObjects/DungeonObjectOperations').DungeonObject} object\n */\nexport const addObject = (object) => ({\n    type: DUNGEON_ACTION_TYPE.ADD_OBJECT,\n    newObject: object\n})\n\nexport const deleteObjects = (objectIds) => ({\n    type: DUNGEON_ACTION_TYPE.DELETE_OBJECTS,\n    objectIds\n})\n\nexport const moveObjects = (selectedObjectIds, deltaX, deltaY) => ({\n    type: DUNGEON_ACTION_TYPE.MOVE_SELECTED_OBJECT,\n    selectedObjectIds,\n    deltaX: deltaX,\n    deltaY: deltaY\n})\n\nexport const setSelectedObjectTextureUrl = (selectedObject, texturePath) => ({\n    type: DUNGEON_ACTION_TYPE.SET_SELECTED_OBJECT_TEXTURE_PATH,\n    selectedObject,\n    texturePath: texturePath\n})\n\nexport const setSelectedObjectLabel = (selectedObject, label) => ({\n    type: DUNGEON_ACTION_TYPE.SET_SELECTED_OBJECT_LABEL,\n    selectedObject,\n    label: label\n})\n\nexport const setSelectedObjectPosition = (selectedObject, x, y) => ({\n    type: DUNGEON_ACTION_TYPE.SET_SELECTED_OBJECT_POSITION,\n    selectedObject,\n    x: x,\n    y: y\n})\n\nexport const setSelectedObjectSize = (selectedObject, width, height) => ({\n    type: DUNGEON_ACTION_TYPE.SET_SELECTED_OBJECT_SIZE,\n    selectedObject,\n    width: width,\n    height: height\n})\n\nexport const setSelectedObjectStart = (selectedObject, x, y) => ({\n    type: DUNGEON_ACTION_TYPE.SET_SELECTED_OBJECT_START,\n    selectedObject,\n    x: x,\n    y: y\n})\n\nexport const setSelectedObjectEnd = (selectedObject, x, y) => ({\n    type: DUNGEON_ACTION_TYPE.SET_SELECTED_OBJECT_END,\n    selectedObject,\n    x: x,\n    y: y\n})\n\nexport const setSelectedObjectAngle = (selectedObject, angle) => ({\n    type: DUNGEON_ACTION_TYPE.SET_SELECTED_OBJECT_ANGLE,\n    selectedObject,\n    angle: angle\n})\n\nexport const setDungeonSize = (width, height) => ({\n    type: DUNGEON_ACTION_TYPE.SET_DUNGEON_SIZE,\n    width: width,\n    height: height\n})\n","const square = (x) => x * x;\n\nexport const lineLength = (v, w) => Math.sqrt(square(v.x - w.x) + square(v.y - w.y));\n\nexport const getClosestPointOnLine = (p, a, b) => {\n\n    var atob = { x: b.x - a.x, y: b.y - a.y };\n    var atop = { x: p.x - a.x, y: p.y - a.y };\n    var len = atob.x * atob.x + atob.y * atob.y;\n    var dot = atop.x * atob.x + atop.y * atob.y;\n    var t = Math.min( 1, Math.max( 0, dot / len ) );\n    return {\n        x: a.x + atob.x * t,\n        y: a.y + atob.y * t\n    };\n}\n\n/**\n * @typedef {{x: number, y: number, width: number, height: number}} Rectangle\n * @param {Rectangle} rect1\n * @param {Rectangle} rect2\n */\nexport const doRectanglesIntersect = (rect1, rect2) => {\n    let x = Math.max(rect1.x, rect2.x);\n    let num1 = Math.min(rect1.x + rect1.width, rect2.x + rect2.width);\n    let y = Math.max(rect1.y, rect2.y);\n    let num2 = Math.min(rect1.y + rect1.height, rect2.y + rect2.height);\n    if (num1 >= x && num2 >= y)\n      return true;\n    else\n      return false;\n}\n","import { addObject } from \"../reducers/dungeonActions\";\nimport { GRID_TILE_SIZE } from \"../utils/constants\";\nimport { lineLength, getClosestPointOnLine } from \"../utils/geometry\";\nimport { createDoor } from \"../dungeonObjects/DoorOperations\";\nimport { WALL_TYPE } from \"../dungeonObjects/WallOperations\";\n\nexport default class AddDoorTool {\n    onMouseUp(store) {\n        let state = store.getState();\n        let mousePoint = state.editor.mouse.currentPosition;\n        let minDistance = 25;\n        let snapPoint = null;\n        let minWallId = null;\n        state.dungeon.objects\n            .filter(object => object.type === WALL_TYPE)\n            .forEach(wall =>{\n                // try each point and get the shortest distance\n                let scaledStart = {\n                    x: wall.start.x * GRID_TILE_SIZE,\n                    y: wall.start.y * GRID_TILE_SIZE\n                };\n                let scaledEnd = {\n                    x: wall.end.x * GRID_TILE_SIZE,\n                    y: wall.end.y * GRID_TILE_SIZE\n                }\n                let closestPoint = getClosestPointOnLine({\n                        x: state.editor.mouse.startPosition.x,\n                        y: state.editor.mouse.startPosition.y\n                    }, scaledStart, scaledEnd);\n                // if the shortest distance of one is < snapping threshold, snap to it\n                let distance = lineLength(closestPoint, {\n                    x: state.editor.mouse.startPosition.x,\n                    y: state.editor.mouse.startPosition.y\n                });\n                if (!minDistance || distance < minDistance) {\n                    minDistance = distance;\n                    snapPoint = closestPoint;\n                    minWallId = wall.id;\n                }\n            });\n\n        let doorWall = state.dungeon.objects.find(wall => wall.id === minWallId);\n\n        if (!doorWall) {\n            return;\n        }\n\n        let scaledStart = {\n            x: doorWall.start.x * GRID_TILE_SIZE,\n            y: doorWall.start.y * GRID_TILE_SIZE\n        };\n        let scaledEnd = {\n            x: doorWall.end.x * GRID_TILE_SIZE,\n            y: doorWall.end.y * GRID_TILE_SIZE\n        }\n        let endPoint = getClosestPointOnLine(mousePoint, scaledStart, scaledEnd);\n        store.dispatch(addObject(createDoor(\n            snapPoint.x / GRID_TILE_SIZE,\n            snapPoint.y / GRID_TILE_SIZE,\n            endPoint.x / GRID_TILE_SIZE,\n            endPoint.y / GRID_TILE_SIZE)));\n    }\n\n    renderTool(state, graphics) {\n        let mousePoint = state.editor.mouse.currentPosition;\n        if (!state.editor.mouse.mouseDown) {\n            // try to snap to the nearest line:\n            // for each line, get the nearest point on the line\n            let minDistance = 25;\n            let snapPoint = null;\n            state.dungeon.objects\n                .filter(object => object.type === WALL_TYPE)\n                .forEach(wall => {\n                    // try each point and get the shortest distance\n                    let scaledStart = {\n                        x: wall.start.x * GRID_TILE_SIZE,\n                        y: wall.start.y * GRID_TILE_SIZE\n                    };\n                    let scaledEnd = {\n                        x: wall.end.x * GRID_TILE_SIZE,\n                        y: wall.end.y * GRID_TILE_SIZE\n                    }\n                    let closestPoint = getClosestPointOnLine(mousePoint, scaledStart, scaledEnd);\n                    // if the shortest distance of one is < snapping threshold, snap to it\n                    let distance = lineLength(closestPoint, mousePoint);\n                    if (!minDistance || distance < minDistance) {\n                        minDistance = distance;\n                        snapPoint = closestPoint;\n                    }\n                });\n            if (snapPoint) {\n                graphics.lineStyle();\n                graphics.beginFill(0xfffd00);\n                graphics.drawCircle(snapPoint.x, snapPoint.y, 2.5);\n                graphics.endFill();\n            }\n        }\n        else {\n            let minDistance = 25;\n            let snapPoint = null;\n            let minWallId = null;\n            state.dungeon.objects\n                .filter(object => object.type === WALL_TYPE)\n                .forEach(wall => {\n                    // try each point and get the shortest distance\n                    let scaledStart = {\n                        x: wall.start.x * GRID_TILE_SIZE,\n                        y: wall.start.y * GRID_TILE_SIZE\n                    };\n                    let scaledEnd = {\n                        x: wall.end.x * GRID_TILE_SIZE,\n                        y: wall.end.y * GRID_TILE_SIZE\n                    }\n                    let closestPoint = getClosestPointOnLine({\n                            x: state.editor.mouse.startPosition.x,\n                            y: state.editor.mouse.startPosition.y\n                        }, scaledStart, scaledEnd);\n                    // if the shortest distance of one is < snapping threshold, snap to it\n                    let distance = lineLength(closestPoint, {\n                        x: state.editor.mouse.startPosition.x,\n                        y: state.editor.mouse.startPosition.y\n                    });\n                    if (!minDistance || distance < minDistance) {\n                        minDistance = distance;\n                        snapPoint = closestPoint;\n                        minWallId = wall.id;\n                    }\n                });\n            // draw a line from the start point\n            if (!snapPoint) {\n                return;\n            }\n\n            let startX = snapPoint.x;\n            let startY = snapPoint.y;\n\n            let doorWall = state.dungeon.objects.find(wall => wall.id === minWallId);\n            let scaledStart = {\n                x: doorWall.start.x * GRID_TILE_SIZE,\n                y: doorWall.start.y * GRID_TILE_SIZE\n            };\n            let scaledEnd = {\n                x: doorWall.end.x * GRID_TILE_SIZE,\n                y: doorWall.end.y * GRID_TILE_SIZE\n            }\n            let endPoint = getClosestPointOnLine(mousePoint, scaledStart, scaledEnd);\n\n            let endX = endPoint.x;\n            let endY = endPoint.y;\n\n            graphics.lineStyle(5, 0xfffd00);\n            graphics.moveTo(startX, startY);\n            graphics.lineTo(endX, endY);\n            graphics.lineStyle();\n            graphics.beginFill(0xfffd00);\n            graphics.drawCircle(startX, startY, 2.5);\n            graphics.drawCircle(endX, endY, 2.5);\n            graphics.endFill();\n        }\n    }\n}\n","import { GRID_TILE_SIZE } from \"../utils/constants\";\nimport { addObject } from \"../reducers/dungeonActions\";\nimport { createLabel } from \"../dungeonObjects/LabelOperations\";\n\nexport default class AddLabelTool {\n    onMouseUp(store) {\n        let state = store.getState();\n        let mousePoint = state.editor.mouse.currentPosition;\n        let dungeonSpaceX = mousePoint.x / GRID_TILE_SIZE;\n        let dungeonSpaceY = mousePoint.y / GRID_TILE_SIZE;\n        store.dispatch(addObject(createLabel(dungeonSpaceX, dungeonSpaceY, \"Text Label\")));\n    }\n\n    renderTool(state, graphics) {\n    }\n}\n","import { GRID_TILE_SIZE } from \"../utils/constants\";\nimport { addObject } from \"../reducers/dungeonActions\";\nimport { createSpace } from \"../dungeonObjects/SpaceOperations\";\n\nexport default class AddSpaceRectangleTool {\n\n    onMouseUp(store) {\n        let state = store.getState();\n        let mousePoint = state.editor.mouse.currentPosition;\n        let startX = Math.floor(Math.min(state.editor.mouse.startPosition.x, mousePoint.x) / GRID_TILE_SIZE);\n        let startY = Math.floor(Math.min(state.editor.mouse.startPosition.y, mousePoint.y) / GRID_TILE_SIZE);\n        let endX = Math.ceil(Math.max(state.editor.mouse.startPosition.x, mousePoint.x) / GRID_TILE_SIZE);\n        let endY = Math.ceil(Math.max(state.editor.mouse.startPosition.y, mousePoint.y) / GRID_TILE_SIZE);\n        store.dispatch(addObject(createSpace({ startX, startY, endX, endY})));\n    }\n\n    renderTool(state, graphics) {\n        let mousePoint = state.editor.mouse.currentPosition;\n        let snappedX, snappedY, width, height;\n        if (state.editor.mouse.mouseDown) {\n            let startX = Math.min(state.editor.mouse.startPosition.x, mousePoint.x);\n            let startY = Math.min(state.editor.mouse.startPosition.y, mousePoint.y);\n            let endX = Math.max(state.editor.mouse.startPosition.x, mousePoint.x);\n            let endY = Math.max(state.editor.mouse.startPosition.y, mousePoint.y);\n            snappedX = Math.floor(startX / GRID_TILE_SIZE) * GRID_TILE_SIZE;\n            snappedY = Math.floor(startY / GRID_TILE_SIZE) * GRID_TILE_SIZE;\n            endX = Math.floor(endX / GRID_TILE_SIZE) * GRID_TILE_SIZE + GRID_TILE_SIZE;\n            endY = Math.floor(endY / GRID_TILE_SIZE) * GRID_TILE_SIZE + GRID_TILE_SIZE;\n            width = endX - snappedX;\n            height = endY - snappedY;\n        }\n        else {\n            // snap to nearest grid point\n            // for now for simplicity let's say top left\n            snappedX = Math.floor(mousePoint.x / GRID_TILE_SIZE) * GRID_TILE_SIZE;\n            snappedY = Math.floor(mousePoint.y / GRID_TILE_SIZE) * GRID_TILE_SIZE;\n            width = GRID_TILE_SIZE;\n            height = GRID_TILE_SIZE;\n        }\n        // draw a hover rect\n        graphics.beginFill(0, 0);\n        graphics.lineStyle(1, 0xfffd00);\n        graphics.drawRect(snappedX, snappedY, width, height);\n        graphics.endFill();\n    }\n}\n","import { GRID_TILE_SIZE } from \"../utils/constants\";\nimport { addObject } from \"../reducers/dungeonActions\";\nimport { createWall } from \"../dungeonObjects/WallOperations\";\n\nexport default class AddWallTool {\n    onMouseUp(store) {\n        let state = store.getState();\n        let mousePoint = state.editor.mouse.currentPosition;\n        let startX = Math.round(state.editor.mouse.startPosition.x / GRID_TILE_SIZE);\n        let startY = Math.round(state.editor.mouse.startPosition.y / GRID_TILE_SIZE);\n        let endX = Math.round(mousePoint.x / GRID_TILE_SIZE);\n        let endY = Math.round(mousePoint.y / GRID_TILE_SIZE);\n        store.dispatch(addObject(createWall(startX, startY, endX, endY)));\n    }\n\n    renderTool(state, graphics) {\n        let mousePoint = state.editor.mouse.currentPosition;\n        if (state.editor.mouse.mouseDown) {\n            let startX = Math.round(state.editor.mouse.startPosition.x / GRID_TILE_SIZE) * GRID_TILE_SIZE;\n            let startY = Math.round(state.editor.mouse.startPosition.y / GRID_TILE_SIZE) * GRID_TILE_SIZE;\n            let endX = Math.round(mousePoint.x / GRID_TILE_SIZE) * GRID_TILE_SIZE;\n            let endY = Math.round(mousePoint.y / GRID_TILE_SIZE) * GRID_TILE_SIZE;\n            graphics.lineStyle(5, 0xfffd00);\n            graphics.moveTo(startX, startY);\n            graphics.lineTo(endX, endY);\n            graphics.lineStyle();\n            graphics.beginFill(0xfffd00);\n            graphics.drawCircle(startX, startY, 2.5);\n            graphics.drawCircle(endX, endY, 2.5);\n            graphics.endFill();\n        }\n        else {\n            // get nearest center point\n            let hoverX = Math.round(mousePoint.x / GRID_TILE_SIZE) * GRID_TILE_SIZE;\n            let hoverY = Math.round(mousePoint.y / GRID_TILE_SIZE) * GRID_TILE_SIZE;\n\n            graphics.lineStyle();\n            graphics.beginFill(0xfffd00);\n            graphics.drawCircle(hoverX, hoverY, 2.5);\n            graphics.endFill();\n        }\n    }\n}\n","import { selectAtPoint, selectInBoundingBox } from \"../reducers/editorActions\";\n\nconst DRAG_THRESHOLD = 5;\n\nconst isDragging = (startPosition, endPosition) => {\n    return Math.abs(endPosition.x - startPosition.x) > DRAG_THRESHOLD ||\n        Math.abs(endPosition.y - startPosition.y) > DRAG_THRESHOLD;\n}\n\nconst createRectangle = (startPosition, endPosition) => ({\n    x: Math.min(startPosition.x, endPosition.x),\n    y: Math.min(startPosition.y, endPosition.y),\n    width: Math.abs(endPosition.x - startPosition.x),\n    height: Math.abs(endPosition.y - startPosition.y)\n})\n\nexport default class SelectTool {\n    onMouseUp(store) {\n        /** @type {import(\"../reducers\").State} */\n        let state = store.getState();\n\n        const startPosition = state.editor.mouse.startPosition;\n        const endPosition = state.editor.mouse.currentPosition;\n        const shouldAddToSelection = state.editor.keyboard.heldKeys[\"Shift\"];\n\n        if (isDragging(startPosition, endPosition)) {\n            let boundingRectangle = createRectangle(startPosition, endPosition);\n            store.dispatch(selectInBoundingBox(\n                boundingRectangle.x,\n                boundingRectangle.y,\n                boundingRectangle.width,\n                boundingRectangle.height,\n                shouldAddToSelection))\n        }\n        else {\n            store.dispatch(selectAtPoint(endPosition.x, endPosition.y, shouldAddToSelection))\n        }\n    }\n\n    /**\n     * @param {import(\"../reducers\").State} state\n     * @param {PIXI.Graphics} graphics\n     */\n    renderTool(state, graphics) {\n        const startPosition = state.editor.mouse.startPosition;\n        const endPosition = state.editor.mouse.currentPosition;\n\n        if (state.editor.mouse.mouseDown && isDragging(startPosition, endPosition)) {\n            let boundingRectangle = createRectangle(startPosition, endPosition);\n            graphics.lineStyle(1, 0xfffd00)\n                .drawRect(boundingRectangle.x, boundingRectangle.y, boundingRectangle.width, boundingRectangle.height)\n                .lineStyle();\n        }\n    }\n}\n","import { GRID_TILE_SIZE } from \"../utils/constants\";\nimport { addObject } from \"../reducers/dungeonActions\";\nimport { addOngoingSpacePolygonPoint, clearOngoingSpacePolygonPoint } from '../reducers/editorActions'\nimport { createSpace } from \"../dungeonObjects/SpaceOperations\";\n\nexport default class AddSpacePolygonTool {\n\n    onMouseUp(store) {\n        let state = store.getState();\n        let mousePoint = state.editor.mouse.currentPosition;\n        let x = Math.round(mousePoint.x / GRID_TILE_SIZE);\n        let y = Math.round(mousePoint.y / GRID_TILE_SIZE);\n\n        let firstPoint = state.editor.ongoingSpacePolygon?.[0];\n        if (firstPoint && firstPoint.x === x && firstPoint.y === y ) {\n            // close it out\n            let pointArray = state.editor.ongoingSpacePolygon;\n            store.dispatch(clearOngoingSpacePolygonPoint());\n            store.dispatch(addObject(createSpace({points: pointArray})));\n        }\n        else {\n            store.dispatch(addOngoingSpacePolygonPoint(x, y));\n        }\n    }\n\n    renderTool(state, graphics) {\n        // if there's no ongoing polygon, just snap to a corner\n        let mousePoint = state.editor.mouse.currentPosition;\n        // get nearest center point\n        let hoverX = Math.round(mousePoint.x / GRID_TILE_SIZE) * GRID_TILE_SIZE;\n        let hoverY = Math.round(mousePoint.y / GRID_TILE_SIZE) * GRID_TILE_SIZE;\n\n        if (!state.editor.ongoingSpacePolygon) {\n            graphics.lineStyle();\n            graphics.beginFill(0xfffd00);\n            graphics.drawCircle(hoverX, hoverY, 2.5);\n            graphics.endFill();\n        }\n        else {\n            graphics.lineStyle(2, 0xfffd00);\n            let firstPoint = state.editor.ongoingSpacePolygon[0];\n            graphics.moveTo(\n                firstPoint.x * GRID_TILE_SIZE,\n                firstPoint.y * GRID_TILE_SIZE);\n            for (let index = 1; index < state.editor.ongoingSpacePolygon.length; index++) {\n                const point = state.editor.ongoingSpacePolygon[index];\n                graphics.lineTo(point.x * GRID_TILE_SIZE, point.y * GRID_TILE_SIZE);\n            }\n            graphics.lineTo(hoverX, hoverY);\n            // then draw to where mouse is hovering over\n            graphics.lineStyle();\n        }\n    }\n}\n","import { GRID_TILE_SIZE } from '../utils/constants';\nimport { addObject } from '../reducers/dungeonActions';\nimport { createToken } from '../dungeonObjects/TokenOperations';\n\nexport default class AddTokenTool {\n    // TODO: Make this configurable based on the currently selected token or something along those lines\n    tokenTextureUrl = '/assets/stairs.png';\n    height = 2;\n    width = 1;\n\n    onMouseUp(store) {\n        let state = store.getState();\n        let mousePoint = state.editor.mouse.currentPosition;\n        let snappedX, snappedY;\n\n        // snap to nearest grid point\n        // for now for simplicity let's say top left\n        snappedX = Math.floor(mousePoint.x / GRID_TILE_SIZE);\n        snappedY = Math.floor(mousePoint.y / GRID_TILE_SIZE);\n\n        store.dispatch(addObject(createToken(\n            this.tokenTextureUrl,\n            snappedX,\n            snappedY,\n            this.width,\n            this.height,\n            0\n        )));\n    }\n\n    renderTool(state, graphics) {\n        // preview the sprite in the current location\n        let mousePoint = state.editor.mouse.currentPosition;\n        let snappedX, snappedY;\n\n        // snap to nearest grid point\n        // for now for simplicity let's say top left\n        snappedX = Math.floor(mousePoint.x / GRID_TILE_SIZE) * GRID_TILE_SIZE;\n        snappedY = Math.floor(mousePoint.y / GRID_TILE_SIZE) * GRID_TILE_SIZE;\n\n        // draw a hover rect\n        graphics.beginFill(0, 0);\n        graphics.lineStyle(1, 0xfffd00);\n        graphics.drawRect(snappedX, snappedY, this.width * GRID_TILE_SIZE, this.height * GRID_TILE_SIZE);\n        graphics.endFill();\n    }\n}\n","import AddDoorTool from \"./AddDoorTool\";\nimport AddLabelTool from \"./AddLabelTool\";\nimport AddSpaceRectangleTool from \"./AddSpaceRectangleTool\";\nimport AddWallTool from \"./AddWallTool\";\nimport SelectTool from \"./SelectTool\";\nimport TOOL_TYPE from \"./toolType\";\nimport AddSpacePolygonTool from \"./AddSpacePolygonTool\";\nimport AddTokenTool from \"./AddTokenTool\";\n\nconst toolMap = {\n    [TOOL_TYPE.NEW_DOOR]: new AddDoorTool(),\n    [TOOL_TYPE.NEW_SPACE_RECTANGLE]: new AddSpaceRectangleTool(),\n    [TOOL_TYPE.NEW_SPACE_POLYGON]: new AddSpacePolygonTool(),\n    [TOOL_TYPE.NEW_WALL]: new AddWallTool(),\n    [TOOL_TYPE.SELECT]: new SelectTool(),\n    [TOOL_TYPE.NEW_LABEL]: new AddLabelTool(),\n    [TOOL_TYPE.NEW_TOKEN]: new AddTokenTool()\n}\n\nexport const onMouseUp = (store) => {\n    let state = store.getState();\n    toolMap[state.editor.selectedTool].onMouseUp(store);\n}\n\nexport const renderTool = (state, graphics) => {\n    toolMap[state.editor.selectedTool].renderTool(state, graphics);\n}\n","let download = (data, filename) => {\n    let downloadLink = document.createElement(\"a\");\n    downloadLink.href = data;\n    downloadLink.download = filename;\n    downloadLink.target = \"_blank\"\n    downloadLink.click();\n}\n\nexport default download;\n","import { pngExported, selectObject, selectObjects, setCurrentMousePosition } from \"../reducers/editorActions\";\nimport store from '../store.js';\nimport { GRID_TILE_SIZE } from '../utils/constants';\nimport * as ToolRouter from '../tools/ToolRouter';\nimport * as DungeonObjectOperations from '../dungeonObjects/DungeonObjectOperations'\nimport download from \"../utils/download\";\nimport * as PIXI from 'pixi.js'\nimport { doRectanglesIntersect } from \"../utils/geometry\";\n\n/**\n * @param {PIXI.Application} app\n * @param {PIXI.Graphics} graphics\n */\nexport const render = (app, graphics) => {\n    /**\n     * @type {import(\"../reducers\").State}\n     */\n    let state = store.getState();\n\n    handlePanning(app, state);\n    handleScaling(state, app);\n\n    handleSelecting(state, app);\n\n    graphics.clear();\n\n    drawDungeonObjects(app.stage, state);\n    drawGrid(graphics, state.dungeon.size.width, state.dungeon.size.height);\n\n    handleExporting(state, app);\n\n    if (app.renderer.plugins.interaction.mouseOverRenderer) {\n        ToolRouter.renderTool(state, graphics);\n\n        let mousePosition = app.renderer.plugins.interaction.mouse.getLocalPosition(app.stage);\n        store.dispatch(setCurrentMousePosition(mousePosition.x, mousePosition.y));\n    }\n    else {\n        store.dispatch(setCurrentMousePosition(null, null));\n    }\n}\nexport default render;\n\nconst drawDungeonObjects = (container, state) => {\n    let objectIdMap = state.dungeon.objects.reduce((map, object) => {\n        map[object.id] = object;\n        return map;\n    }, {});\n\n    let containerObjectIds = new Set(container.children.map(child => child.id));\n    let stateObjectIds = Object.keys(objectIdMap);\n    stateObjectIds.forEach(objectId => {\n        if (!containerObjectIds.has(objectId)) {\n            let newChildGraphics = DungeonObjectOperations.createRenderObject(objectIdMap[objectId]);\n            newChildGraphics.id = objectId;\n            newChildGraphics.interactive = true;\n            container.addChild(newChildGraphics);\n        }\n    });\n\n    // Sync all child graphics with state\n    container.children.forEach(graphics => {\n        if (graphics.id) {\n            let object = objectIdMap[graphics.id];\n            if (object) {\n                DungeonObjectOperations.renderObject(graphics, object, state.editor.selectedObjectIds.includes(graphics.id))\n            }\n            else {\n                container.removeChild(graphics);\n            }\n        }\n    });\n}\n\nconst drawGrid = (graphics, gridWidth, gridHeight) => {\n    graphics.lineStyle(1, 0x444444, 1, 0.5);\n    for (let i = 0; i <= gridWidth; i++) {\n        graphics.moveTo(i * GRID_TILE_SIZE, 0);\n        graphics.lineTo(i * GRID_TILE_SIZE, gridHeight * GRID_TILE_SIZE);\n    }\n\n    for (let j = 0; j <= gridHeight; j++) {\n        graphics.moveTo(0, j * GRID_TILE_SIZE);\n        graphics.lineTo(gridWidth * GRID_TILE_SIZE, j * GRID_TILE_SIZE);\n    }\n}\n\nfunction handleExporting(state, app) {\n    if (state.editor.exportToPngClicked) {\n        exportImage(app);\n    }\n}\n\nfunction handleSelecting(state, app) {\n    if (state.editor.selectingAtPoint) {\n        let mousePoint = new PIXI.Point(\n            state.editor.selectingAtPoint.x,\n            state.editor.selectingAtPoint.y);\n        let globalPosition = app.stage.worldTransform.apply(mousePoint);\n        let selectedObject = app.renderer.plugins.interaction.hitTest(\n            globalPosition);\n\n        if (selectedObject) {\n            store.dispatch(selectObject(selectedObject.id, state.editor.selectingAtPoint.shouldMultiSelect));\n        }\n        else {\n            store.dispatch(selectObjects([], false));\n        }\n    }\n    else if (state.editor.selectingInBoundingBox) {\n        let objectIdsToSelect = [];\n        app.stage.children.forEach(child => {\n            if (doRectanglesIntersect(child.getLocalBounds(), state.editor.selectingInBoundingBox)) {\n                objectIdsToSelect.push(child.id);\n            }\n        });\n        if (objectIdsToSelect.length > 0) {\n            store.dispatch(selectObjects(objectIdsToSelect, state.editor.selectingInBoundingBox.shouldMultiSelect));\n        }\n        else {\n            store.dispatch(selectObjects([], false));\n        }\n    }\n}\n\nfunction handleScaling(state, app) {\n    let fractionalScale = state.editor.scale / 100;\n    if (app.stage.scale.x !== fractionalScale) {\n        app.stage.scale.set(fractionalScale);\n    }\n}\n\nfunction handlePanning(app, state) {\n    app.stage.position.set(state.editor.position.x, state.editor.position.y);\n}\n\nfunction exportImage(app) {\n    let exportTexture = app.renderer.generateTexture(app.stage,\n        null,\n        1.0 / app.stage.scale.x,\n        new PIXI.Rectangle(\n            app.stage.position.x - 1,\n            app.stage.position.y - 1,\n            app.stage.width,\n            app.stage.height\n        ));\n    download(app.renderer.extract.base64(exportTexture), \"dungeon.png\");\n    store.dispatch(pngExported());\n}\n","import { deleteObjects, moveObjects } from \"../reducers/dungeonActions\"\nimport { keyPressed, keyReleased } from \"../reducers/editorActions\";\n\n/**\n * @param {KeyboardEvent} keyboardEvent\n * @param {import(\"redux\").Store} store\n */\nexport const handleKeyPressed = (keyboardEvent, store) => {\n    if (!keyboardEvent.repeat) {\n        store.dispatch(keyPressed(keyboardEvent.key));\n    }\n    let state = store.getState();\n    switch (keyboardEvent.key) {\n        case 'Delete':\n            return store.dispatch(deleteObjects(state.editor.selectedObjectIds));\n        case 'ArrowLeft':\n            return store.dispatch(moveObjects(state.editor.selectedObjectIds, -1, 0));\n        case 'ArrowRight':\n            return store.dispatch(moveObjects(state.editor.selectedObjectIds, 1, 0));\n        case 'ArrowDown':\n            return store.dispatch(moveObjects(state.editor.selectedObjectIds, 0, 1));\n        case 'ArrowUp':\n            return store.dispatch(moveObjects(state.editor.selectedObjectIds, 0, -1));\n        default:\n            return;\n    }\n}\n\n/**\n * @param {KeyboardEvent} keyboardEvent\n * @param {import(\"redux\").Store} store\n */\nexport const handleKeyReleased = (keyboardEvent, store) => {\n    store.dispatch(keyReleased(keyboardEvent.key));\n}\n","import { mouseDown, mouseUp, moveViewport, scroll } from \"../reducers/editorActions\";\nimport * as ToolRouter from '../tools/ToolRouter';\n\nexport const handleMouseDown = (mouseEvent, store) => {\n    if (mouseEvent.buttons === 1) {\n        store.dispatch(mouseDown());\n    }\n}\n\nexport const handleMouseUp = (mouseEvent, store) => {\n    let state = store.getState();\n    if (state.editor.mouse.mouseDown) {\n        store.dispatch(mouseUp());\n        ToolRouter.onMouseUp(store);\n    }\n}\n\nexport const handleMouseMove = (mouseEvent, store) => {\n    if (mouseEvent.buttons === 2) {\n        store.dispatch(moveViewport(mouseEvent.movementX, mouseEvent.movementY));\n    }\n}\n\nexport const handleWheelEvent = (wheelEvent, store) => {\n    store.dispatch(scroll(\n        wheelEvent.deltaX,\n        wheelEvent.deltaY,\n        wheelEvent.getModifierState('Control')));\n}\n","import * as PIXI from 'pixi.js';\nimport React from 'react';\nimport { render as renderDungeon } from '../rendering/DungeonRenderer';\nimport store from '../store.js';\nimport { handleKeyPressed, handleKeyReleased } from '../utils/keyboardEventHandlers.js';\nimport * as MouseEventHandler from '../utils/mouseEventHandlers.js';\n\nexport default class DungeonEditor extends React.Component {\n    render() {\n        return <div\n            style={{ height: \"85vh\" }}\n            tabIndex={-1}\n            ref={(element) => this.canvasDiv = element}>\n        </div>\n    }\n\n    componentDidMount() {\n        const app = new PIXI.Application({\n            backgroundColor: 0x5f5f5f,\n            sharedLoader: true,\n            sharedTicker: true,\n            antialias: true\n        });\n        this.app = app;\n        this.canvasDiv.appendChild(app.view);\n        this.app.resizeTo = this.canvasDiv;\n        this.app.resize();\n\n        let graphics = new PIXI.Graphics();\n        graphics.zIndex = Number.MAX_SAFE_INTEGER;\n        app.stage.sortableChildren = true;\n        app.stage.addChild(graphics);\n\n        this.setupInteractions()\n\n        app.ticker.add(() => {\n            renderDungeon(app, graphics);\n        });\n    }\n\n    setupInteractions() {\n        this.canvasDiv.addEventListener(\"wheel\", (wheelEvent) => {\n            MouseEventHandler.handleWheelEvent(wheelEvent, store);\n            wheelEvent.preventDefault();\n        });\n        this.canvasDiv.addEventListener('contextmenu', (event) => {\n            event.preventDefault();\n        });\n        this.canvasDiv.addEventListener('pointerdown', (event) => {\n            MouseEventHandler.handleMouseDown(event, store);\n        });\n        this.canvasDiv.addEventListener('pointerup', (event) => {\n            MouseEventHandler.handleMouseUp(event, store);\n        });\n        this.canvasDiv.addEventListener('pointermove', (pointerEvent) => {\n            MouseEventHandler.handleMouseMove(pointerEvent, store);\n        });\n        this.canvasDiv.addEventListener('keydown', (event) => {\n            handleKeyPressed(event, store);\n        });\n        this.canvasDiv.addEventListener('keyup', (event) => {\n            handleKeyReleased(event, store);\n        })\n    }\n}\n","import React from 'react'\n\nconst StateEditorCard = ({title, children}) =>\n    <div className=\"card bg-dark text-light border-secondary mb-3\">\n        <div className=\"card-header border-secondary\">\n            <h5>{title}</h5>\n        </div>\n        <div className=\"card-body\">\n            <div className=\"form-group\">\n                {children}\n            </div>\n        </div>\n    </div>\n\nexport default StateEditorCard\n","import React from 'react'\nimport StateEditorCard from './StateEditorCard'\n\nconst PositionEditor = ({ title, x, y, onUpdate }) =>\n    <StateEditorCard title={title ?? 'Position'}>\n        <label>\n            X:\n            <input\n                className=\"form-control bg-secondary text-light\"\n                type=\"number\"\n                value={x}\n                onChange={(changeEvent) => onUpdate(\n                    parseInt(changeEvent.target.value),\n                    y\n                )}>\n            </input>\n        </label>\n        <label>\n            Y:\n            <input\n                className=\"form-control bg-secondary text-light\"\n                type=\"number\"\n                value={y}\n                onChange={(changeEvent) => onUpdate(\n                    x,\n                    parseInt(changeEvent.target.value)\n                )}>\n            </input>\n        </label>\n    </StateEditorCard>\n\nexport default PositionEditor","import React from 'react'\nimport StateEditorCard from './StateEditorCard'\n\nconst SizeEditor = ({ title, width, height, onUpdate }) =>\n    <StateEditorCard title={title ?? 'Size'}>\n        <label>\n            Width:\n            <input\n                className=\"form-control bg-secondary text-light\"\n                type=\"number\"\n                value={width}\n                onChange={(changeEvent) => onUpdate(\n                    parseInt(changeEvent.target.value),\n                    height\n                )}>\n            </input>\n        </label>\n        <label>\n            Height:\n            <input\n                className=\"form-control bg-secondary text-light\"\n                type=\"number\"\n                value={height}\n                onChange={(changeEvent) => onUpdate(\n                    width,\n                    parseInt(changeEvent.target.value)\n                )}>\n            </input>\n        </label>\n    </StateEditorCard>\n\nexport default SizeEditor","import React from \"react\"\nimport { connect } from 'react-redux'\nimport * as DungeonActions from '../reducers/dungeonActions'\nimport * as EditorActions from '../reducers/editorActions'\nimport PositionEditor from \"./PositionEditor\"\nimport SizeEditor from \"./SizeEditor\"\nimport StateEditorCard from \"./StateEditorCard\"\n\nlet StateEditor = ({ dispatch, selectedObjectId, selectedObject, dungeonSize, scrollPansViewport }) => {\n    if (selectedObjectId) {\n        return <React.Fragment>\n            {selectedObject.label !== undefined &&\n                <StateEditorCard title='Label'>\n                    <label>\n                        Label:\n                        <input\n                            className=\"form-control bg-secondary text-light\"\n                            type=\"text\"\n                            value={selectedObject.label}\n                            onChange={(changeEvent) => dispatch(DungeonActions.setSelectedObjectLabel(selectedObjectId, changeEvent.target.value))}>\n                        </input>\n                    </label>\n                </StateEditorCard>}\n            {selectedObject.textureUrl !== undefined &&\n                <StateEditorCard title=\"Texture Path\">\n                    <label>\n                        Path:\n                        <input\n                            className=\"form-control bg-secondary text-light\"\n                            value={selectedObject.textureUrl}\n                            onChange={(changeEvent) => {dispatch(DungeonActions.setSelectedObjectTextureUrl(selectedObjectId, changeEvent.target.value))}}></input>\n                    </label>\n                </StateEditorCard>\n            }\n            {selectedObject.position &&\n                <PositionEditor\n                    x={selectedObject.position.x}\n                    y={selectedObject.position.y}\n                    onUpdate={(x, y) => dispatch(DungeonActions.setSelectedObjectPosition(selectedObjectId, x, y))} />\n            }\n            {selectedObject.size &&\n                <SizeEditor\n                    width={selectedObject.size.width}\n                    height={selectedObject.size.height}\n                    onUpdate={(width, height) => dispatch(DungeonActions.setSelectedObjectSize(selectedObjectId, width, height))} />\n            }\n            {selectedObject.start &&\n                <PositionEditor\n                    title=\"Start\"\n                    x={selectedObject.start.x}\n                    y={selectedObject.start.y}\n                    onUpdate={(x,y) => dispatch(DungeonActions.setSelectedObjectStart(selectedObjectId, x, y))} />\n            }\n            {selectedObject.end &&\n                <PositionEditor\n                    title=\"End\"\n                    x={selectedObject.end.x}\n                    y={selectedObject.end.y}\n                    onUpdate={(x,y) => dispatch(DungeonActions.setSelectedObjectEnd(selectedObjectId, x, y))} />\n            }\n            {selectedObject.angle !== undefined &&\n                <StateEditorCard title=\"Angle\">\n                    <label>\n                        Angle:\n                        <input\n                            className=\"form-control bg-secondary text-light\"\n                            type=\"number\"\n                            step=\"45\"\n                            min=\"-360\"\n                            max=\"360\"\n                            value={selectedObject.angle}\n                            onChange={(changeEvent) => {dispatch(DungeonActions.setSelectedObjectAngle(selectedObjectId, changeEvent.target.value))}}></input>\n                        <input\n                            className=\"form-control bg-secondary text-light\"\n                            type=\"range\"\n                            step=\"45\"\n                            min=\"-360\"\n                            max=\"360\"\n                            style={{direction: \"rtl\"}}\n                            value={selectedObject.angle}\n                            onChange={(changeEvent) => {dispatch(DungeonActions.setSelectedObjectAngle(selectedObjectId, changeEvent.target.value))}}></input>\n                    </label>\n                </StateEditorCard>\n            }\n            {selectedObjectId &&\n                <StateEditorCard title=\"Actions\">\n                    <button\n                        className=\"btn btn-outline-danger\"\n                        onClick={() => dispatch(DungeonActions.deleteObjects([selectedObjectId]))}>\n                            Delete Object\n                    </button>\n                </StateEditorCard>\n            }\n        </React.Fragment>\n    }\n    else {\n        return <React.Fragment>\n            <StateEditorCard title=\"Instructions\">\n                <p><i>Right click</i> to pan the view.</p>\n                <p><i>Scroll</i> to zoom in and out.</p>\n                <p><i>Left click and drag</i> to create new spaces with the New Space tool.</p>\n                <p><i>Left click</i> to select spaces with the Select tool.</p>\n                <p><i>Arrow keys</i> will move the currently selected space.</p>\n                <p><i>Delete</i> will delete the currently selected space.</p>\n            </StateEditorCard>\n            <StateEditorCard title=\"Actions\">\n                <button\n                    className=\"btn btn-primary form-control mb-2\"\n                    onClick={() => dispatch(EditorActions.exportToPngClicked())}>\n                        Download Dungeon as PNG\n                </button>\n                <button\n                    className=\"btn btn-outline-danger form-control mb-2\"\n                    onClick={() => dispatch(DungeonActions.clearDungeon())}>\n                        New Dungeon\n                </button>\n            </StateEditorCard>\n            <SizeEditor\n                title=\"Dungeon Size\"\n                width={dungeonSize.width}\n                height={dungeonSize.height}\n                onUpdate={(width, height) => dispatch(DungeonActions.setDungeonSize(width, height))} />\n            <StateEditorCard title=\"Editor Options\">\n                <div class=\"form-check\">\n                    <label class=\"form-check-label\">\n                        <input\n                            class=\"form-check-input\"\n                            type='checkbox'\n                            value={scrollPansViewport}\n                            onChange={(event) => dispatch(EditorActions.setScrollMovesViewport(event.target.checked))} />\n                        Scroll to pan\n                    </label>\n                </div>\n            </StateEditorCard>\n        </React.Fragment>\n    }\n}\n\nconst mapStateToProps = state => {\n    let selectedObjectId = state.editor.selectedObjectIds.length === 1 ? state.editor.selectedObjectIds[0] : null;\n    let selectedObject = selectedObjectId ? state.dungeon.objects.find(object => object.id === selectedObjectId) : null;\n    return {\n        selectedObjectId: selectedObjectId,\n        selectedObject: selectedObject,\n        dungeonSize: state.dungeon.size,\n        scrollMovesViewport: state.editor.scrollMovesViewport\n    }\n}\n\nStateEditor = connect(mapStateToProps)(StateEditor)\n\nexport default StateEditor\n","import React from \"react\"\n\nconst ToolbarButton = ({toolName, toolId, selectedTool, onClick}) =>\n    <button\n        className={\"btn btn-secondary\" +\n            (selectedTool === toolId ? ' active' : '')}\n        onClick={() => onClick(toolId)}>\n            {toolName}\n    </button>\n\nexport default ToolbarButton;","import React from \"react\"\nimport { connect } from 'react-redux'\nimport { selectTool } from '../reducers/editorActions'\nimport ToolbarButton from \"./ToolbarButton\"\nimport TOOL_TYPE from \"../tools/toolType\"\n\nlet Toolbar = ({ dispatch, selectedTool }) => {\n    const dispatchSelectedTool = (toolId) => dispatch(selectTool(toolId))\n\n    return (\n        <div className=\"btn-group\" role=\"group\">\n            <ToolbarButton\n                toolName='Select'\n                toolId={TOOL_TYPE.SELECT}\n                selectedTool={selectedTool}\n                onClick={dispatchSelectedTool} />\n            <ToolbarButton\n                toolName='New Rectangular Space'\n                toolId={TOOL_TYPE.NEW_SPACE_RECTANGLE}\n                selectedTool={selectedTool}\n                onClick={dispatchSelectedTool} />\n            <ToolbarButton\n                toolName='New Polygonal Space'\n                toolId={TOOL_TYPE.NEW_SPACE_POLYGON}\n                selectedTool={selectedTool}\n                onClick={dispatchSelectedTool} />\n            <ToolbarButton\n                toolName='New Wall'\n                toolId={TOOL_TYPE.NEW_WALL}\n                selectedTool={selectedTool}\n                onClick={dispatchSelectedTool} />\n            <ToolbarButton\n                toolName='New Door'\n                toolId={TOOL_TYPE.NEW_DOOR}\n                selectedTool={selectedTool}\n                onClick={dispatchSelectedTool} />\n            <ToolbarButton\n                toolName='New Label'\n                toolId={TOOL_TYPE.NEW_LABEL}\n                selectedTool={selectedTool}\n                onClick={dispatchSelectedTool} />\n            <ToolbarButton\n                toolName='New Token'\n                toolId={TOOL_TYPE.NEW_TOKEN}\n                selectedTool={selectedTool}\n                onClick={dispatchSelectedTool} />\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    selectedTool: state.editor.selectedTool\n})\n\nToolbar = connect(mapStateToProps)(Toolbar)\n\nexport default Toolbar\n","import React from 'react';\nimport DungeonEditor from \"./components/DungeonEditor.js\";\nimport StateEditor from './components/StateEditor';\nimport Toolbar from './components/Toolbar';\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <nav className=\"navbar navbar-dark bg-secondary\">\n        <span className=\"navbar-brand\">\n          Pungeon\n        </span>\n      </nav>\n      <div className=\"px-5\">\n        <div className=\"py-2\">\n          <Toolbar />\n        </div>\n        <div className=\"row\">\n          <div className=\"col-md-9\">\n            <DungeonEditor />\n          </div>\n          <div className=\"col-md-3\">\n            <StateEditor />\n          </div>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app/App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './app/store.js'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}