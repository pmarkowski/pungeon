{"version":3,"sources":["app/utils/createArrayWithUpdatedObject.js","app/tools/toolType.js","app/utils/dungeonObjectTypes.js","app/reducers/dungeonReducer.js","app/store.js","app/utils/geometry.js","app/tools/AddDoorTool.js","app/utils/constants.js","app/tools/AddLabelTool.js","app/tools/AddSpaceRectangleTool.js","app/tools/AddWallTool.js","app/tools/SelectTool.js","app/tools/AddSpacePolygonTool.js","app/tools/ToolRouter.js","app/rendering/DoorRenderer.js","app/rendering/LabelRenderer.js","app/rendering/WallRenderer.js","app/rendering/SpaceRenderer.js","app/rendering/RenderRouter.js","app/rendering/DungeonRenderer.js","app/utils/keyboardEventHandlers.js","app/utils/mouseEventHandlers.js","app/components/DungeonEditor.js","app/components/StateEditorCard.js","app/components/PositionEditor.js","app/components/SizeEditor.js","app/components/StateEditor.js","app/components/ToolbarButton.js","app/components/Toolbar.js","app/App.js","serviceWorker.js","index.js"],"names":["createArrayWithUpdatedObject","array","id","update","map","object","objectCopy","TOOL_TYPE","SELECT","NEW_WALL","NEW_SPACE_RECTANGLE","NEW_SPACE_POLYGON","NEW_DOOR","NEW_LABEL","DUNGEON_OBJECT_TYPE","SPACE","WALL","DOOR","LABEL","moveSelectedObject","deltaX","deltaY","type","setMouseDungeonPosition","x","y","dungeonReducer","state","action","editor","ongoingSpacePolygon","newPolygonArray","position","mouse","dungeonPosition","scrollMovesViewport","holdingCtrl","scaleDelta","scrollY","newScale","Math","min","max","scale","scrollX","mouseDown","mouseStartX","mouseStartY","dungeon","size","width","height","arrayWithUpdatedObject","objects","selectedObject","label","start","end","objectArray","slice","newObject","selectedTool","objectId","selectedObjectId","newObjectArray","filter","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","square","lineLength","v","w","sqrt","getClosestPointOnLine","p","a","b","atob","len","dot","t","AddDoorTool","getState","mousePoint","minDistance","snapPoint","minWallId","forEach","wall","scaledStart","scaledEnd","closestPoint","distance","doorWall","find","startX","startY","endX","endY","endPoint","dispatch","uuid","graphics","lineStyle","moveTo","lineTo","beginFill","drawCircle","endFill","AddLabelTool","labelText","dungeonSpaceX","dungeonSpaceY","AddSpaceRectangleTool","floor","ceil","addSpace","snappedX","snappedY","drawRect","AddWallTool","round","addWall","hoverX","hoverY","SelectTool","AddSpacePolygonTool","positionArray","firstPoint","pointArray","points","addOngoingSpacePolygonPoint","index","length","point","toolMap","DoorRenderer","door","objectIsSelected","zIndex","clear","tint","hitArea","PIXI","LabelRenderer","children","style","fontFamily","fontSize","addChild","fill","text","set","WallRenderer","SpaceRenderer","space","rendererMap","render","app","stage","drawDungeonObjects","drawGrid","renderer","plugins","interaction","mouseOverRenderer","renderTool","ToolRouter","mousePosition","getLocalPosition","container","objectIdMap","reduce","containerObjectIds","Set","child","Object","keys","spaceId","has","newChildGraphics","interactive","mouseup","this","dungeonObject","renderObject","RenderRouter","removeChild","gridWidth","gridHeight","i","j","handleKeyboardEvent","keyboardEvent","key","handleMouseUp","mouseEvent","onMouseUp","DungeonEditor","tabIndex","ref","element","canvasDiv","backgroundColor","sharedLoader","sharedTicker","antialias","appendChild","view","resizeTo","resize","Number","MAX_SAFE_INTEGER","sortableChildren","setupInteractions","ticker","add","renderDungeon","addEventListener","wheelEvent","getModifierState","scroll","MouseEventHandler","preventDefault","event","buttons","pointerEvent","movementX","movementY","React","Component","StateEditorCard","title","className","PositionEditor","onUpdate","value","onChange","changeEvent","parseInt","target","SizeEditor","StateEditor","dungeonSize","scrollPansViewport","Fragment","undefined","DungeonActions","onClick","checked","connect","ToolbarButton","toolName","toolId","Toolbar","dispatchSelectedTool","role","App","Boolean","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3f019a4c.chunk.js","sourcesContent":["export const createArrayWithUpdatedObject = (array, id, update) => {\r\n    return array.map(object => {\r\n        if (object.id === id) {\r\n            let objectCopy = {...object};\r\n            update(objectCopy);\r\n            return objectCopy;\r\n        }\r\n        else {\r\n            return object;\r\n        }\r\n    })\r\n}\r\n","const TOOL_TYPE  = {\r\n    SELECT: \"select\",\r\n    NEW_WALL: \"new_wall\",\r\n    NEW_SPACE_RECTANGLE: \"new_space_rectangle\",\r\n    NEW_SPACE_POLYGON: \"new_space_polygon\",\r\n    NEW_DOOR: \"new_door\",\r\n    NEW_LABEL: \"new_label\"\r\n};\r\n\r\nexport default TOOL_TYPE;\r\n","const DUNGEON_OBJECT_TYPE  = {\r\n    SPACE: \"space\",\r\n    WALL: \"wall\",\r\n    DOOR: \"door\",\r\n    LABEL: \"label\"\r\n};\r\n\r\nexport default DUNGEON_OBJECT_TYPE;\r\n","import { createArrayWithUpdatedObject } from '../utils/createArrayWithUpdatedObject'\r\nimport TOOL_TYPE from '../tools/toolType'\r\nimport DUNGEON_OBJECT_TYPE from '../utils/dungeonObjectTypes';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nexport const clearOngoingSpacePolygonPoint = () => ({\r\n    type: 'CLEAR_ONGOING_SPACE_POLYGON'\r\n})\r\n\r\nexport const addSpacePolygon = (positionArray) => ({\r\n    type: 'ADD_OBJECT',\r\n    newObject: {\r\n        id: uuid(),\r\n        type: DUNGEON_OBJECT_TYPE.SPACE,\r\n        points: positionArray,\r\n    }\r\n})\r\n\r\nexport const addOngoingSpacePolygonPoint = (x, y) => ({\r\n    type: 'ADD_ONGOING_SPACE_POLYGON',\r\n    position: {\r\n        x: x,\r\n        y: y\r\n    }\r\n})\r\n\r\nexport const addLabel = (x, y, labelText) => ({\r\n    type: 'ADD_OBJECT',\r\n    newObject: {\r\n        id: uuid(),\r\n        type: DUNGEON_OBJECT_TYPE.LABEL,\r\n        position: {\r\n            x: x,\r\n            y: y\r\n        },\r\n        label: labelText\r\n    }\r\n})\r\n\r\nexport const addDoor = (startX, startY, endX, endY) => ({\r\n    type: 'ADD_OBJECT',\r\n    newObject: {\r\n        id: uuid(),\r\n        type: DUNGEON_OBJECT_TYPE.DOOR,\r\n        start: {\r\n            x: startX,\r\n            y: startY\r\n        },\r\n        end: {\r\n            x: endX,\r\n            y: endY\r\n        }\r\n    }\r\n});\r\n\r\nexport const addWall = (startX, startY, endX, endY) => ({\r\n    type: 'ADD_OBJECT',\r\n    newObject: {\r\n        id: uuid(),\r\n        type: DUNGEON_OBJECT_TYPE.WALL,\r\n        start: {\r\n            x: startX,\r\n            y: startY\r\n        },\r\n        end: {\r\n            x: endX,\r\n            y: endY\r\n        }\r\n    }\r\n});\r\n\r\nexport const addSpace = (startX, startY, endX, endY) => ({\r\n    type: 'ADD_OBJECT',\r\n    newObject: {\r\n        id: uuid(),\r\n        type: DUNGEON_OBJECT_TYPE.SPACE,\r\n        position: {\r\n            x: startX,\r\n            y: startY\r\n        },\r\n        size: {\r\n            width: endX - startX,\r\n            height: endY - startY\r\n        }\r\n    }\r\n});\r\n\r\nexport const scroll = (wheelEvent) => ({\r\n    type: 'SCROLL_EVENT',\r\n    scrollX: wheelEvent.deltaX,\r\n    scrollY: wheelEvent.deltaY,\r\n    holdingCtrl: wheelEvent.getModifierState(\"Control\")\r\n})\r\n\r\nexport const moveViewport = (deltaX, deltaY) => ({\r\n    type: 'MOVE_VIEWPORT',\r\n    deltaX: deltaX,\r\n    deltaY: deltaY\r\n})\r\n\r\nexport const selectTool = (toolName) => ({\r\n    type: 'SELECT_TOOL',\r\n    selectedTool: toolName\r\n})\r\n\r\nexport const selectObject = (objectId) => ({\r\n    type: 'SELECT_OBJECT',\r\n    objectId: objectId\r\n})\r\n\r\nexport const deleteSelectedObject = () => ({\r\n    type: 'DELETE_OBJECT'\r\n})\r\n\r\nexport const moveSelectedObject = (deltaX, deltaY) => ({\r\n    type: 'MOVE_SELECTED_OBJECT',\r\n    deltaX: deltaX,\r\n    deltaY: deltaY\r\n})\r\n\r\nexport const setSelectedObjectLabel = (label) => ({\r\n    type: 'SET_SELECTED_OBJECT_LABEL',\r\n    label: label\r\n})\r\n\r\nexport const setSelectedObjectPosition = (x, y) => ({\r\n    type: 'SET_SELECTED_OBJECT_POSITION',\r\n    x: x,\r\n    y: y\r\n})\r\n\r\nexport const setSelectedObjectSize = (width, height) => ({\r\n    type: 'SET_SELECTED_OBJECT_SIZE',\r\n    width: width,\r\n    height: height\r\n})\r\n\r\nexport const setSelectedObjectStart = (x, y) => ({\r\n    type: 'SET_SELECTED_OBJECT_START',\r\n    x: x,\r\n    y: y\r\n})\r\n\r\nexport const setSelectedObjectEnd = (x, y) => ({\r\n    type: 'SET_SELECTED_OBJECT_END',\r\n    x: x,\r\n    y: y\r\n})\r\n\r\nexport const setDungeonSize = (width, height) => ({\r\n    type: 'SET_DUNGEON_SIZE',\r\n    width: width,\r\n    height: height\r\n})\r\n\r\nexport const setScrollMovesViewport = (scrollMovesViewport) => ({\r\n    type: 'SET_SCROLL_MOVES_VIEWPORT',\r\n    scrollMovesViewport: scrollMovesViewport\r\n})\r\n\r\nexport const setMouseDungeonPosition = (x, y) => ({\r\n    type: 'SET_MOUSE_DUNGEON_POSITION',\r\n    x: x,\r\n    y: y\r\n})\r\n\r\nexport const dungeonReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case 'CLEAR_ONGOING_SPACE_POLYGON': {\r\n            return {\r\n                ...state,\r\n                editor: {\r\n                    ...state.editor,\r\n                    ongoingSpacePolygon: null\r\n                }\r\n            }\r\n        }\r\n        case 'ADD_ONGOING_SPACE_POLYGON': {\r\n            let newPolygonArray = [...(state.editor.ongoingSpacePolygon ?? []), action.position]\r\n            return {\r\n                ...state,\r\n                editor: {\r\n                    ...state.editor,\r\n                    ongoingSpacePolygon: newPolygonArray\r\n                }\r\n            }\r\n        }\r\n        case 'MOVE_VIEWPORT': {\r\n            return {\r\n                ...state,\r\n                editor: {\r\n                    ...state.editor,\r\n                    position: {\r\n                        x: state.editor.position.x + action.deltaX,\r\n                        y: state.editor.position.y + action.deltaY\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        case 'SET_MOUSE_DUNGEON_POSITION': {\r\n            return {\r\n                ...state,\r\n                editor: {\r\n                    ...state.editor,\r\n                    mouse: {\r\n                        ...state.editor.mouse,\r\n                        dungeonPosition: {\r\n                            x: action.x,\r\n                            y: action.y\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        case 'SCROLL_EVENT': {\r\n            if (!state.scrollMovesViewport || action.holdingCtrl) {\r\n                let scaleDelta = 0.1\r\n                if (action.scrollY > 0) {\r\n                    scaleDelta *= -1\r\n                }\r\n                let newScale = Math.min(Math.max(state.editor.scale + scaleDelta, 0.1), 2)\r\n                if (state.editor.scale !== newScale) {\r\n                    return {\r\n                        ...state,\r\n                        editor: {\r\n                            ...state.editor,\r\n                            scale: newScale,\r\n                            position: {\r\n                                x: state.editor.position.x - (state.editor.mouse.dungeonPosition.x * scaleDelta),\r\n                                y: state.editor.position.y - (state.editor.mouse.dungeonPosition.y * scaleDelta),\r\n                            }\r\n                        }\r\n                    };\r\n                }\r\n                else {\r\n                    return state;\r\n                }\r\n            }\r\n            else {\r\n                let scaleDelta = 0.5;\r\n                return {\r\n                    ...state,\r\n                    editor: {\r\n                        ...state.editor,\r\n                        position: {\r\n                           x: state.editor.position.x - action.scrollX * scaleDelta,\r\n                           y: state.editor.position.y - action.scrollY * scaleDelta\r\n                        }\r\n                    }\r\n                };\r\n            }\r\n        }\r\n        case 'MOUSE_DOWN': {\r\n            return {\r\n                ...state,\r\n                mouseDown: true,\r\n                mouseStartX: state.editor.mouse.dungeonPosition.x,\r\n                mouseStartY: state.editor.mouse.dungeonPosition.y\r\n            };\r\n        }\r\n        case 'MOUSE_UP': {\r\n            return {\r\n                ...state,\r\n                mouseDown: false\r\n            };\r\n        }\r\n        case 'SET_DUNGEON_SIZE': {\r\n            return {\r\n                ...state,\r\n                dungeon: {\r\n                    ...state.dungeon,\r\n                    size: {\r\n                        width: action.width,\r\n                        height: action.height\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        case 'SET_SCROLL_MOVES_VIEWPORT': {\r\n            return {\r\n                ...state,\r\n                scrollMovesViewport: action.scrollMovesViewport\r\n            }\r\n        }\r\n        case 'MOVE_SELECTED_OBJECT': {\r\n            let arrayWithUpdatedObject = createArrayWithUpdatedObject(\r\n                state.dungeon.objects,\r\n                state.selectedObject,\r\n                (object) => object.position = {\r\n                    x: object.position.x + action.deltaX,\r\n                    y: object.position.y + action.deltaY\r\n                });\r\n            return {\r\n                ...state,\r\n                dungeon: {\r\n                    ...state.dungeon,\r\n                    objects: arrayWithUpdatedObject\r\n                }\r\n            };\r\n        }\r\n        case 'SET_SELECTED_OBJECT_LABEL': {\r\n            let arrayWithUpdatedObject = createArrayWithUpdatedObject(\r\n                state.dungeon.objects,\r\n                state.selectedObject,\r\n                (object) => object.label = action.label);\r\n            return {\r\n                ...state,\r\n                dungeon: {\r\n                    ...state.dungeon,\r\n                    objects: arrayWithUpdatedObject\r\n                }\r\n            };\r\n        }\r\n        case 'SET_SELECTED_OBJECT_POSITION': {\r\n            let arrayWithUpdatedObject = createArrayWithUpdatedObject(\r\n                state.dungeon.objects,\r\n                state.selectedObject,\r\n                (object) => object.position = {\r\n                    x: action.x,\r\n                    y: action.y\r\n                });\r\n            return {\r\n                ...state,\r\n                dungeon: {\r\n                    ...state.dungeon,\r\n                    objects: arrayWithUpdatedObject\r\n                }\r\n            };\r\n        }\r\n        case 'SET_SELECTED_OBJECT_SIZE': {\r\n            let arrayWithUpdatedObject = createArrayWithUpdatedObject(\r\n                state.dungeon.objects,\r\n                state.selectedObject,\r\n                (object) => object.size = {\r\n                    width: action.width,\r\n                    height: action.height\r\n                });\r\n            return {\r\n                ...state,\r\n                dungeon: {\r\n                    ...state.dungeon,\r\n                    objects: arrayWithUpdatedObject\r\n                }\r\n            };\r\n        }\r\n        case 'SET_SELECTED_OBJECT_START': {\r\n            let arrayWithUpdatedObject = createArrayWithUpdatedObject(\r\n                state.dungeon.objects,\r\n                state.selectedObject,\r\n                (object) => object.start = {\r\n                    x: action.x,\r\n                    y: action.y\r\n                });\r\n            return {\r\n                ...state,\r\n                dungeon: {\r\n                    ...state.dungeon,\r\n                    objects: arrayWithUpdatedObject\r\n                }\r\n            };\r\n        }\r\n        case 'SET_SELECTED_OBJECT_END': {\r\n            let arrayWithUpdatedObject = createArrayWithUpdatedObject(\r\n                state.dungeon.objects,\r\n                state.selectedObject,\r\n                (object) => object.end = {\r\n                    x: action.x,\r\n                    y: action.y\r\n                });\r\n            return {\r\n                ...state,\r\n                dungeon: {\r\n                    ...state.dungeon,\r\n                    objects: arrayWithUpdatedObject,\r\n                }\r\n            };\r\n\r\n        }\r\n        case 'ADD_OBJECT': {\r\n            let objectArray = state.dungeon.objects.slice();\r\n            objectArray = [...objectArray, action.newObject];\r\n            return {\r\n                ...state,\r\n                dungeon: {\r\n                    ...state.dungeon,\r\n                    objects: objectArray\r\n                }\r\n            };\r\n        }\r\n        case 'SELECT_TOOL': {\r\n            let selectedObject = state.selectedObject;\r\n            if (action.selectedTool !== TOOL_TYPE.SELECT) {\r\n                selectedObject = null;\r\n            }\r\n            return {\r\n                ...state,\r\n                selectedTool: action.selectedTool,\r\n                selectedObject: selectedObject\r\n            };\r\n        }\r\n        case 'SELECT_OBJECT': {\r\n            if (state.selectedTool === TOOL_TYPE.SELECT) {\r\n                return {\r\n                    ...state,\r\n                    selectedObject: action.objectId\r\n                };\r\n            }\r\n            else {\r\n                return state;\r\n            }\r\n        }\r\n        case 'DELETE_OBJECT': {\r\n            let selectedObjectId = state.selectedObject;\r\n            if (selectedObjectId) {\r\n                let newObjectArray = state.dungeon.objects\r\n                    .filter(object => object.id !== selectedObjectId);\r\n                return {\r\n                    ...state,\r\n                    selectedObject: null,\r\n                    dungeon: {\r\n                        ...state.dungeon,\r\n                        objects: newObjectArray\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                return state;\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport default dungeonReducer\r\n","import { createStore } from 'redux';\r\nimport dungeonReducer from './reducers/dungeonReducer.js'\r\nimport TOOL_TYPE from './tools/toolType.js';\r\n\r\nconst store = createStore(dungeonReducer,\r\n  {\r\n    scrollMovesViewport: false,\r\n    mouseDown: false,\r\n    mouseStartX: 0,\r\n    mouseStartY: 0,\r\n    selectedTool: TOOL_TYPE.NEW_SPACE_RECTANGLE,\r\n    editor: {\r\n      scale: 1,\r\n      position: {\r\n        x: 0,\r\n        y: 0\r\n      },\r\n      mouse: {\r\n        dungeonPosition: {\r\n          x: 0,\r\n          y: 0\r\n        }\r\n      }\r\n    },\r\n    dungeon: {\r\n      size: {\r\n        width: 28,\r\n        height: 32\r\n      },\r\n      objects: [\r\n          {\r\n            id: \"01f998f7-3ad4-43c6-b498-3249ab470b05\",\r\n            type: \"space\",\r\n            position: {\r\n              x: 1,\r\n              y: 1\r\n            },\r\n            size: {\r\n              width: 5,\r\n              height: 5\r\n            }\r\n          },\r\n          {\r\n            id: \"79178d8c-3a3e-42ee-b1ec-00dc37a045fc\",\r\n            type: \"space\",\r\n            position: {\r\n              x: 6,\r\n              y: 4\r\n            },\r\n            size: {\r\n              width: 7,\r\n              height: 9\r\n            }\r\n          },\r\n          {\r\n            id: \"6ce25fdc-9fd4-46c0-a924-74f5f9174193\",\r\n            type: \"space\",\r\n            position: {\r\n              x: 15,\r\n              y: 15\r\n            },\r\n            size: {\r\n              width: 6,\r\n              height: 7\r\n            }\r\n          },\r\n          {\r\n            id: \"e211fbd3-a817-47a5-bb47-481ba330e46d\",\r\n            type: \"space\",\r\n            position: {\r\n              x: 21,\r\n              y: 19\r\n            },\r\n            size: {\r\n              width: 4,\r\n              height: 9\r\n            }\r\n          },\r\n          {\r\n            id: '4abe3330-4a95-4c29-b71d-8ea768da1ee6',\r\n            type: \"wall\",\r\n            start: {\r\n              x: 1,\r\n              y: 1\r\n            },\r\n            end: {\r\n              x: 1,\r\n              y: 6\r\n            }\r\n          },\r\n          {\r\n            id: 'ad3c6f9b-f3f0-4025-8073-daacc68483ec',\r\n            type: \"wall\",\r\n            start: {\r\n              x: 6,\r\n              y: 6\r\n            },\r\n            end: {\r\n              x: 1,\r\n              y: 6\r\n            }\r\n          },\r\n          {\r\n            id: '68365136-d12f-4e54-8f7b-4cbd3ab424eb',\r\n            type: \"wall\",\r\n            start: {\r\n              x: 6,\r\n              y: 13\r\n            },\r\n            end: {\r\n              x: 6,\r\n              y: 6\r\n            }\r\n          },\r\n          {\r\n            id: '3d6435e5-8d67-4405-87d0-72c4e8f4dfaa',\r\n            type: \"wall\",\r\n            start: {\r\n              x: 13,\r\n              y: 13\r\n            },\r\n            end: {\r\n              x: 6,\r\n              y: 13\r\n            }\r\n          },\r\n          {\r\n            id: '384ac23d-f5fc-4cd1-9ad7-b528b62fa732',\r\n            type: \"wall\",\r\n            start: {\r\n              x: 13,\r\n              y: 4\r\n            },\r\n            end: {\r\n              x: 13,\r\n              y: 13\r\n            }\r\n          },\r\n          {\r\n            id: '161e3147-ca11-4dc4-a26b-ca8295c5abaa',\r\n            type: \"wall\",\r\n            start: {\r\n              x: 6,\r\n              y: 4\r\n            },\r\n            end: {\r\n              x: 13,\r\n              y: 4\r\n            }\r\n          },\r\n          {\r\n            id: 'e8092d63-e7e2-4cd2-8c80-8cd6030980f1',\r\n            type: \"wall\",\r\n            start: {\r\n              x: 6,\r\n              y: 1\r\n            },\r\n            end: {\r\n              x: 6,\r\n              y: 4\r\n            }\r\n          },\r\n          {\r\n            id: '71ed94d3-177b-428b-a8e5-fe25eb79a4ea',\r\n            type: \"wall\",\r\n            start: {\r\n              x: 1,\r\n              y: 1\r\n            },\r\n            end: {\r\n              x: 6,\r\n              y: 1\r\n            }\r\n          },\r\n          {\r\n            id: '0ea47a6f-af9f-4ec6-a7f3-881332643e2a',\r\n            type: \"wall\",\r\n            start: {\r\n              x: 15,\r\n              y: 15\r\n            },\r\n            end: {\r\n              x: 15,\r\n              y: 22\r\n            }\r\n          },\r\n          {\r\n            id: 'f7ec5579-7966-4ba4-b8ee-fdaad6372842',\r\n            type: \"wall\",\r\n            start: {\r\n              x: 21,\r\n              y: 22\r\n            },\r\n            end: {\r\n              x: 15,\r\n              y: 22\r\n            }\r\n          },\r\n          {\r\n            id: '1e587060-37cc-4b87-a88a-852c8055cabb',\r\n            type: \"wall\",\r\n            start: {\r\n              x: 21,\r\n              y: 15\r\n            },\r\n            end: {\r\n              x: 15,\r\n              y: 15\r\n            }\r\n          },\r\n          {\r\n            id: '79e1f702-6d60-435b-ba1e-584077a7d479',\r\n            type: \"wall\",\r\n            start: {\r\n              x: 21,\r\n              y: 19\r\n            },\r\n            end: {\r\n              x: 21,\r\n              y: 15\r\n            }\r\n          },\r\n          {\r\n            id: '231997d1-1453-4573-a2c0-0571428d7ac9',\r\n            type: \"wall\",\r\n            start: {\r\n              x: 25,\r\n              y: 19\r\n            },\r\n            end: {\r\n              x: 21,\r\n              y: 19\r\n            }\r\n          },\r\n          {\r\n            id: '85033454-8145-4d36-9b58-5e891f731f25',\r\n            type: \"wall\",\r\n            start: {\r\n              x: 21,\r\n              y: 22\r\n            },\r\n            end: {\r\n              x: 21,\r\n              y: 28\r\n            }\r\n          },\r\n          {\r\n            id: '2c6b4f88-4163-4847-ba05-c4ce865dfd87',\r\n            type: \"wall\",\r\n            start: {\r\n              x: 21,\r\n              y: 28\r\n            },\r\n            end: {\r\n              x: 25,\r\n              y: 28\r\n            }\r\n          },\r\n          {\r\n            id: '57013c9b-609f-4e59-ae1a-fd94a49bac80',\r\n            type: \"wall\",\r\n            start: {\r\n              x: 25,\r\n              y: 19\r\n            },\r\n            end: {\r\n              x: 25,\r\n              y: 28\r\n            }\r\n          }\r\n      ]\r\n    }\r\n  },\r\n  typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n\r\nexport default store;\r\n","const square = (x) => x * x;\r\n\r\nexport const lineLength = (v, w) => Math.sqrt(square(v.x - w.x) + square(v.y - w.y));\r\n\r\nexport const getClosestPointOnLine = (p, a, b) => {\r\n    \r\n    var atob = { x: b.x - a.x, y: b.y - a.y };\r\n    var atop = { x: p.x - a.x, y: p.y - a.y };\r\n    var len = atob.x * atob.x + atob.y * atob.y;\r\n    var dot = atop.x * atob.x + atop.y * atob.y;\r\n    var t = Math.min( 1, Math.max( 0, dot / len ) );\r\n    return {\r\n        x: a.x + atob.x * t,\r\n        y: a.y + atob.y * t\r\n    };\r\n}","import { addDoor } from \"../reducers/dungeonReducer\";\r\nimport { GRID_TILE_SIZE } from \"../utils/constants\";\r\nimport DUNGEON_OBJECT_TYPE from \"../utils/dungeonObjectTypes\";\r\nimport { lineLength, getClosestPointOnLine } from \"../utils/geometry\";\r\n\r\nexport default class AddDoorTool {\r\n    onMouseUp(store) {\r\n        let state = store.getState();\r\n        let mousePoint = state.editor.mouse.dungeonPosition;\r\n        let minDistance = 25;\r\n        let snapPoint = null;\r\n        let minWallId = null;\r\n        state.dungeon.objects\r\n            .filter(object => object.type === DUNGEON_OBJECT_TYPE.WALL)\r\n            .forEach(wall =>{\r\n                // try each point and get the shortest distance\r\n                let scaledStart = {\r\n                    x: wall.start.x * GRID_TILE_SIZE,\r\n                    y: wall.start.y * GRID_TILE_SIZE\r\n                };\r\n                let scaledEnd = {\r\n                    x: wall.end.x * GRID_TILE_SIZE,\r\n                    y: wall.end.y * GRID_TILE_SIZE\r\n                }\r\n                let closestPoint = getClosestPointOnLine({\r\n                        x: state.mouseStartX,\r\n                        y: state.mouseStartY\r\n                    }, scaledStart, scaledEnd);\r\n                // if the shortest distance of one is < snapping threshold, snap to it\r\n                let distance = lineLength(closestPoint, {\r\n                    x: state.mouseStartX,\r\n                    y: state.mouseStartY\r\n                });\r\n                if (!minDistance || distance < minDistance) {\r\n                    minDistance = distance;\r\n                    snapPoint = closestPoint;\r\n                    minWallId = wall.id;\r\n                }\r\n            });\r\n\r\n        let doorWall = state.dungeon.objects.find(wall => wall.id === minWallId);\r\n\r\n        if (!doorWall) {\r\n            return;\r\n        }\r\n\r\n        let scaledStart = {\r\n            x: doorWall.start.x * GRID_TILE_SIZE,\r\n            y: doorWall.start.y * GRID_TILE_SIZE\r\n        };\r\n        let scaledEnd = {\r\n            x: doorWall.end.x * GRID_TILE_SIZE,\r\n            y: doorWall.end.y * GRID_TILE_SIZE\r\n        }\r\n        let endPoint = getClosestPointOnLine(mousePoint, scaledStart, scaledEnd);\r\n        store.dispatch(addDoor(\r\n            snapPoint.x / GRID_TILE_SIZE,\r\n            snapPoint.y / GRID_TILE_SIZE,\r\n            endPoint.x / GRID_TILE_SIZE,\r\n            endPoint.y / GRID_TILE_SIZE));\r\n    }\r\n\r\n    renderTool(state, graphics) {\r\n        let mousePoint = state.editor.mouse.dungeonPosition;\r\n        if (!state.mouseDown) {\r\n            // try to snap to the nearest line:\r\n            // for each line, get the nearest point on the line\r\n            let minDistance = 25;\r\n            let snapPoint = null;\r\n            state.dungeon.objects\r\n                .filter(object => object.type === DUNGEON_OBJECT_TYPE.WALL)\r\n                .forEach(wall => {\r\n                    // try each point and get the shortest distance\r\n                    let scaledStart = {\r\n                        x: wall.start.x * GRID_TILE_SIZE,\r\n                        y: wall.start.y * GRID_TILE_SIZE\r\n                    };\r\n                    let scaledEnd = {\r\n                        x: wall.end.x * GRID_TILE_SIZE,\r\n                        y: wall.end.y * GRID_TILE_SIZE\r\n                    }\r\n                    let closestPoint = getClosestPointOnLine(mousePoint, scaledStart, scaledEnd);\r\n                    // if the shortest distance of one is < snapping threshold, snap to it\r\n                    let distance = lineLength(closestPoint, mousePoint);\r\n                    if (!minDistance || distance < minDistance) {\r\n                        minDistance = distance;\r\n                        snapPoint = closestPoint;\r\n                    }\r\n                });\r\n            if (snapPoint) {\r\n                graphics.lineStyle();\r\n                graphics.beginFill(0xfffd00);\r\n                graphics.drawCircle(snapPoint.x, snapPoint.y, 2.5);\r\n                graphics.endFill();\r\n            }\r\n        }\r\n        else {\r\n            let minDistance = 25;\r\n            let snapPoint = null;\r\n            let minWallId = null;\r\n            state.dungeon.objects\r\n                .filter(object => object.type === DUNGEON_OBJECT_TYPE.WALL)\r\n                .forEach(wall => {\r\n                    // try each point and get the shortest distance\r\n                    let scaledStart = {\r\n                        x: wall.start.x * GRID_TILE_SIZE,\r\n                        y: wall.start.y * GRID_TILE_SIZE\r\n                    };\r\n                    let scaledEnd = {\r\n                        x: wall.end.x * GRID_TILE_SIZE,\r\n                        y: wall.end.y * GRID_TILE_SIZE\r\n                    }\r\n                    let closestPoint = getClosestPointOnLine({\r\n                            x: state.mouseStartX,\r\n                            y: state.mouseStartY\r\n                        }, scaledStart, scaledEnd);\r\n                    // if the shortest distance of one is < snapping threshold, snap to it\r\n                    let distance = lineLength(closestPoint, {\r\n                        x: state.mouseStartX,\r\n                        y: state.mouseStartY\r\n                    });\r\n                    if (!minDistance || distance < minDistance) {\r\n                        minDistance = distance;\r\n                        snapPoint = closestPoint;\r\n                        minWallId = wall.id;\r\n                    }\r\n                });\r\n            // draw a line from the start point \r\n            if (!snapPoint) {\r\n                return;\r\n            }\r\n\r\n            let startX = snapPoint.x;\r\n            let startY = snapPoint.y;\r\n\r\n            let doorWall = state.dungeon.objects.find(wall => wall.id === minWallId);\r\n            let scaledStart = {\r\n                x: doorWall.start.x * GRID_TILE_SIZE,\r\n                y: doorWall.start.y * GRID_TILE_SIZE\r\n            };\r\n            let scaledEnd = {\r\n                x: doorWall.end.x * GRID_TILE_SIZE,\r\n                y: doorWall.end.y * GRID_TILE_SIZE\r\n            }\r\n            let endPoint = getClosestPointOnLine(mousePoint, scaledStart, scaledEnd);\r\n\r\n            let endX = endPoint.x;\r\n            let endY = endPoint.y;\r\n\r\n            graphics.lineStyle(5, 0xfffd00);\r\n            graphics.moveTo(startX, startY);\r\n            graphics.lineTo(endX, endY);\r\n            graphics.lineStyle();\r\n            graphics.beginFill(0xfffd00);\r\n            graphics.drawCircle(startX, startY, 2.5);\r\n            graphics.drawCircle(endX, endY, 2.5);\r\n            graphics.endFill();\r\n        }\r\n    }\r\n}","export const GRID_TILE_SIZE = 70;","import { GRID_TILE_SIZE } from \"../utils/constants\";\r\nimport { addLabel } from \"../reducers/dungeonReducer\";\r\n\r\nexport default class AddLabelTool {\r\n    onMouseUp(store) {\r\n        let state = store.getState();\r\n        let mousePoint = state.editor.mouse.dungeonPosition;\r\n        let dungeonSpaceX = mousePoint.x / GRID_TILE_SIZE;\r\n        let dungeonSpaceY = mousePoint.y / GRID_TILE_SIZE;\r\n        store.dispatch(addLabel(dungeonSpaceX, dungeonSpaceY, \"Text Label\"))\r\n    }\r\n\r\n    renderTool(state, graphics) {\r\n    }\r\n}","import { GRID_TILE_SIZE } from \"../utils/constants\";\r\nimport { addSpace } from \"../reducers/dungeonReducer\";\r\n\r\nexport default class AddSpaceRectangleTool {\r\n\r\n    onMouseUp(store) {\r\n        let state = store.getState();\r\n        let mousePoint = state.editor.mouse.dungeonPosition;\r\n        let startX = Math.floor(Math.min(state.mouseStartX, mousePoint.x) / GRID_TILE_SIZE);\r\n        let startY = Math.floor(Math.min(state.mouseStartY, mousePoint.y) / GRID_TILE_SIZE);\r\n        let endX = Math.ceil(Math.max(state.mouseStartX, mousePoint.x) / GRID_TILE_SIZE);\r\n        let endY = Math.ceil(Math.max(state.mouseStartY, mousePoint.y) / GRID_TILE_SIZE);\r\n        store.dispatch(addSpace(startX, startY, endX, endY));\r\n    }\r\n\r\n    renderTool(state, graphics) {\r\n        let mousePoint = state.editor.mouse.dungeonPosition;\r\n        let snappedX, snappedY, width, height;\r\n        if (state.mouseDown) {\r\n            let startX = Math.min(state.mouseStartX, mousePoint.x);\r\n            let startY = Math.min(state.mouseStartY, mousePoint.y);\r\n            let endX = Math.max(state.mouseStartX, mousePoint.x);\r\n            let endY = Math.max(state.mouseStartY, mousePoint.y);\r\n            snappedX = Math.floor(startX / GRID_TILE_SIZE) * GRID_TILE_SIZE;\r\n            snappedY = Math.floor(startY / GRID_TILE_SIZE) * GRID_TILE_SIZE;\r\n            endX = Math.floor(endX / GRID_TILE_SIZE) * GRID_TILE_SIZE + GRID_TILE_SIZE;\r\n            endY = Math.floor(endY / GRID_TILE_SIZE) * GRID_TILE_SIZE + GRID_TILE_SIZE;\r\n            width = endX - snappedX;\r\n            height = endY - snappedY;\r\n        }\r\n        else {\r\n            // snap to nearest grid point\r\n            // for now for simplicity let's say top left\r\n            snappedX = Math.floor(mousePoint.x / GRID_TILE_SIZE) * GRID_TILE_SIZE;\r\n            snappedY = Math.floor(mousePoint.y / GRID_TILE_SIZE) * GRID_TILE_SIZE;\r\n            width = GRID_TILE_SIZE;\r\n            height = GRID_TILE_SIZE;\r\n        }\r\n        // draw a hover rect\r\n        graphics.beginFill(0, 0);\r\n        graphics.lineStyle(1, 0xfffd00);\r\n        graphics.drawRect(snappedX, snappedY, width, height);\r\n        graphics.endFill();\r\n    }\r\n}\r\n","import { GRID_TILE_SIZE } from \"../utils/constants\";\r\nimport { addWall } from \"../reducers/dungeonReducer\";\r\n\r\nexport default class AddWallTool {\r\n    onMouseUp(store) {\r\n        let state = store.getState();\r\n        let mousePoint = state.editor.mouse.dungeonPosition;\r\n        let startX = Math.round(state.mouseStartX / GRID_TILE_SIZE);\r\n        let startY = Math.round(state.mouseStartY / GRID_TILE_SIZE);\r\n        let endX = Math.round(mousePoint.x / GRID_TILE_SIZE);\r\n        let endY = Math.round(mousePoint.y / GRID_TILE_SIZE);\r\n        store.dispatch(addWall(startX, startY, endX, endY));\r\n    }\r\n\r\n    renderTool(state, graphics) {\r\n        let mousePoint = state.editor.mouse.dungeonPosition;\r\n        if (state.mouseDown) {\r\n            let startX = Math.round(state.mouseStartX / GRID_TILE_SIZE) * GRID_TILE_SIZE;\r\n            let startY = Math.round(state.mouseStartY / GRID_TILE_SIZE) * GRID_TILE_SIZE;\r\n            let endX = Math.round(mousePoint.x / GRID_TILE_SIZE) * GRID_TILE_SIZE;\r\n            let endY = Math.round(mousePoint.y / GRID_TILE_SIZE) * GRID_TILE_SIZE;\r\n            graphics.lineStyle(5, 0xfffd00);\r\n            graphics.moveTo(startX, startY);\r\n            graphics.lineTo(endX, endY);\r\n            graphics.lineStyle();\r\n            graphics.beginFill(0xfffd00);\r\n            graphics.drawCircle(startX, startY, 2.5);\r\n            graphics.drawCircle(endX, endY, 2.5);\r\n            graphics.endFill();\r\n        }\r\n        else {\r\n            // get nearest center point\r\n            let hoverX = Math.round(mousePoint.x / GRID_TILE_SIZE) * GRID_TILE_SIZE;\r\n            let hoverY = Math.round(mousePoint.y / GRID_TILE_SIZE) * GRID_TILE_SIZE;\r\n\r\n            graphics.lineStyle();\r\n            graphics.beginFill(0xfffd00);\r\n            graphics.drawCircle(hoverX, hoverY, 2.5);\r\n            graphics.endFill();\r\n        }\r\n    }\r\n}\r\n","export default class SelectTool {\r\n    onMouseUp(mousePoint, store) {\r\n        // Selecting is handled via interaction events on the render objects themselves\r\n    }\r\n    renderTool(state, graphics) {\r\n        // No need to render differently when selecting\r\n    }\r\n}\r\n","import { GRID_TILE_SIZE } from \"../utils/constants\";\r\nimport { addOngoingSpacePolygonPoint, clearOngoingSpacePolygonPoint, addSpacePolygon } from \"../reducers/dungeonReducer\";\r\n\r\nexport default class AddSpacePolygonTool {\r\n\r\n    onMouseUp(store) {\r\n        let state = store.getState();\r\n        let mousePoint = state.editor.mouse.dungeonPosition;\r\n        let x = Math.round(mousePoint.x / GRID_TILE_SIZE);\r\n        let y = Math.round(mousePoint.y / GRID_TILE_SIZE);\r\n\r\n        let firstPoint = state.editor.ongoingSpacePolygon?.[0];\r\n        if (firstPoint && firstPoint.x === x && firstPoint.y === y ) {\r\n            // close it out\r\n            let pointArray = state.editor.ongoingSpacePolygon;\r\n            store.dispatch(clearOngoingSpacePolygonPoint());\r\n            store.dispatch(addSpacePolygon(pointArray));\r\n        }\r\n        else {\r\n            store.dispatch(addOngoingSpacePolygonPoint(x, y));\r\n        }\r\n    }\r\n\r\n    renderTool(state, graphics) {\r\n        // if there's no ongoing polygon, just snap to a corner\r\n        let mousePoint = state.editor.mouse.dungeonPosition;\r\n        // get nearest center point\r\n        let hoverX = Math.round(mousePoint.x / GRID_TILE_SIZE) * GRID_TILE_SIZE;\r\n        let hoverY = Math.round(mousePoint.y / GRID_TILE_SIZE) * GRID_TILE_SIZE;\r\n\r\n        if (!state.editor.ongoingSpacePolygon) {\r\n            graphics.lineStyle();\r\n            graphics.beginFill(0xfffd00);\r\n            graphics.drawCircle(hoverX, hoverY, 2.5);\r\n            graphics.endFill();\r\n        }\r\n        else {\r\n            graphics.lineStyle(2, 0xfffd00);\r\n            let firstPoint = state.editor.ongoingSpacePolygon[0];\r\n            graphics.moveTo(\r\n                firstPoint.x * GRID_TILE_SIZE,\r\n                firstPoint.y * GRID_TILE_SIZE);\r\n            for (let index = 1; index < state.editor.ongoingSpacePolygon.length; index++) {\r\n                const point = state.editor.ongoingSpacePolygon[index];\r\n                graphics.lineTo(point.x * GRID_TILE_SIZE, point.y * GRID_TILE_SIZE);\r\n            }\r\n            graphics.lineTo(hoverX, hoverY);\r\n            // then draw to where mouse is hovering over\r\n            graphics.lineStyle();\r\n        }\r\n    }\r\n}\r\n","import AddDoorTool from \"./AddDoorTool\";\r\nimport AddLabelTool from \"./AddLabelTool\";\r\nimport AddSpaceRectangleTool from \"./AddSpaceRectangleTool\";\r\nimport AddWallTool from \"./AddWallTool\";\r\nimport SelectTool from \"./SelectTool\";\r\nimport TOOL_TYPE from \"./toolType\";\r\nimport AddSpacePolygonTool from \"./AddSpacePolygonTool\";\r\n\r\nconst toolMap = {\r\n    [TOOL_TYPE.NEW_DOOR]: new AddDoorTool(),\r\n    [TOOL_TYPE.NEW_SPACE_RECTANGLE]: new AddSpaceRectangleTool(),\r\n    [TOOL_TYPE.NEW_SPACE_POLYGON]: new AddSpacePolygonTool(),\r\n    [TOOL_TYPE.NEW_WALL]: new AddWallTool(),\r\n    [TOOL_TYPE.SELECT]: new SelectTool(),\r\n    [TOOL_TYPE.NEW_LABEL]: new AddLabelTool()\r\n}\r\n\r\nexport const onMouseUp = (store) => {\r\n    let state = store.getState();\r\n    toolMap[state.selectedTool].onMouseUp(store);\r\n}\r\n\r\nexport const renderTool = (state, graphics) => {\r\n    toolMap[state.selectedTool].renderTool(state, graphics);\r\n}\r\n","import * as PIXI from 'pixi.js';\r\nimport { GRID_TILE_SIZE } from \"../utils/constants\";\r\n\r\nexport default class DoorRenderer {\r\n    renderObject(graphics, door, objectIsSelected) {\r\n        graphics.zIndex = 3;\r\n        graphics.clear();\r\n        graphics.beginFill(0x002b56, 1);\r\n        graphics.lineStyle(20, 0x002b56, 1, 0.5);\r\n        graphics.moveTo(door.start.x * GRID_TILE_SIZE, door.start.y * GRID_TILE_SIZE);\r\n        graphics.lineTo(door.end.x * GRID_TILE_SIZE, door.end.y * GRID_TILE_SIZE);\r\n        graphics.lineStyle();\r\n        let half = 20 / 2;\r\n        graphics.endFill();\r\n\r\n        if (objectIsSelected) {\r\n            graphics.tint = 0xffff33;\r\n        }\r\n        else {\r\n            graphics.tint = 0xffffff;\r\n        }\r\n        graphics.hitArea = new PIXI.Polygon([\r\n            door.start.x * GRID_TILE_SIZE - half, door.start.y * GRID_TILE_SIZE - half,\r\n            door.start.x * GRID_TILE_SIZE + half, door.start.y * GRID_TILE_SIZE + half,\r\n            door.end.x * GRID_TILE_SIZE + half, door.end.y * GRID_TILE_SIZE + half,\r\n            door.end.x * GRID_TILE_SIZE - half, door.end.y * GRID_TILE_SIZE - half,\r\n        ]);\r\n    }\r\n}\r\n","import * as PIXI from 'pixi.js';\r\nimport { GRID_TILE_SIZE } from '../utils/constants';\r\n\r\nexport default class LabelRenderer {\r\n    renderObject(graphics, label, objectIsSelected) {\r\n        graphics.zIndex = 4;\r\n        graphics.clear();\r\n        if (graphics.children.length === 0) {\r\n            let labelText = new PIXI.Text(label.label);\r\n            labelText.style.fontFamily = 'Serif';\r\n            labelText.style.fontSize = 36;\r\n            graphics.addChild(labelText);\r\n        }\r\n\r\n        let labelText = graphics.children[0];\r\n\r\n        if (objectIsSelected) {\r\n            labelText.style.fill = 0xffff33;\r\n        }\r\n        else {\r\n            labelText.style.fill = 0x000000;\r\n        }\r\n\r\n        labelText.text = label.label;\r\n        labelText.position.set(\r\n            label.position.x * GRID_TILE_SIZE,\r\n            label.position.y * GRID_TILE_SIZE);\r\n    }\r\n}\r\n","import * as PIXI from 'pixi.js';\r\nimport { GRID_TILE_SIZE } from \"../utils/constants\";\r\n\r\nexport default class WallRenderer {\r\n    renderObject(graphics, wall, objectIsSelected) {\r\n        graphics.zIndex = 2;\r\n        graphics.clear();\r\n        graphics.beginFill(0x0266e6, 1);\r\n        graphics.lineStyle(10, 0x0266e6, 1, 0.5);\r\n        graphics.moveTo(wall.start.x * GRID_TILE_SIZE, wall.start.y * GRID_TILE_SIZE);\r\n        graphics.lineTo(wall.end.x * GRID_TILE_SIZE, wall.end.y * GRID_TILE_SIZE);\r\n        graphics.lineStyle();\r\n        graphics.drawCircle(wall.start.x * GRID_TILE_SIZE, wall.start.y * GRID_TILE_SIZE, 5);\r\n        graphics.drawCircle(wall.end.x * GRID_TILE_SIZE, wall.end.y * GRID_TILE_SIZE, 5);\r\n        let half = 10 / 2;\r\n        graphics.endFill();\r\n\r\n        if (objectIsSelected) {\r\n            graphics.tint = 0xffff33;\r\n        }\r\n        else {\r\n            graphics.tint = 0xffffff;\r\n        }\r\n        graphics.hitArea = new PIXI.Polygon([\r\n            wall.start.x * GRID_TILE_SIZE - half, wall.start.y * GRID_TILE_SIZE - half,\r\n            wall.start.x * GRID_TILE_SIZE + half, wall.start.y * GRID_TILE_SIZE + half,\r\n            wall.end.x * GRID_TILE_SIZE + half, wall.end.y * GRID_TILE_SIZE + half,\r\n            wall.end.x * GRID_TILE_SIZE - half, wall.end.y * GRID_TILE_SIZE - half,\r\n        ]);\r\n    }\r\n}\r\n","import { GRID_TILE_SIZE } from \"../utils/constants\";\r\n\r\nexport default class SpaceRenderer {\r\n    renderObject(graphics, space, objectIsSelected) {\r\n        graphics.clear();\r\n        graphics.beginFill(0xd6d5d5);\r\n        if (space.position && space.size) {\r\n            graphics.drawRect(\r\n                space.position.x * GRID_TILE_SIZE,\r\n                space.position.y * GRID_TILE_SIZE,\r\n                space.size.width * GRID_TILE_SIZE,\r\n                space.size.height * GRID_TILE_SIZE);\r\n            graphics.endFill();\r\n        }\r\n        else {\r\n            let firstPoint = space.points[0];\r\n            graphics.moveTo(firstPoint.x * GRID_TILE_SIZE, firstPoint.y * GRID_TILE_SIZE);\r\n            for (let index = 0; index < space.points.length; index++) {\r\n                const point = space.points[index];\r\n                graphics.lineTo(point.x * GRID_TILE_SIZE, point.y * GRID_TILE_SIZE);\r\n            }\r\n            graphics.endFill();\r\n        }\r\n\r\n        if (objectIsSelected) {\r\n            graphics.tint = 0xffffcc;\r\n        }\r\n        else {\r\n            graphics.tint = 0xffffff;\r\n        }\r\n    }\r\n}\r\n","import DUNGEON_OBJECT_TYPE from \"../utils/dungeonObjectTypes\";\r\nimport DoorRenderer from \"./DoorRenderer\";\r\nimport LabelRenderer from \"./LabelRenderer\";\r\nimport WallRenderer from \"./WallRenderer\";\r\nimport SpaceRenderer from \"./SpaceRenderer\";\r\n\r\nconst rendererMap = {\r\n    [DUNGEON_OBJECT_TYPE.DOOR]: new DoorRenderer(),\r\n    [DUNGEON_OBJECT_TYPE.LABEL]: new LabelRenderer(),\r\n    [DUNGEON_OBJECT_TYPE.WALL]: new WallRenderer(),\r\n    [DUNGEON_OBJECT_TYPE.SPACE]: new SpaceRenderer()\r\n}\r\n\r\nexport const renderObject = (graphics, dungeonObject, objectIsSelected) => {\r\n    rendererMap[dungeonObject.type].renderObject(graphics, dungeonObject, objectIsSelected);\r\n}\r\n","import * as PIXI from 'pixi.js';\r\nimport { selectObject, setMouseDungeonPosition } from \"../reducers/dungeonReducer\";\r\nimport store from '../store.js';\r\nimport { GRID_TILE_SIZE } from '../utils/constants';\r\nimport * as ToolRouter from '../tools/ToolRouter';\r\nimport * as RenderRouter from './RenderRouter'\r\n\r\nexport const render = (app, graphics) => {\r\n    var state = store.getState();\r\n\r\n    app.stage.position.set(state.editor.position.x, state.editor.position.y);\r\n    if (app.stage.scale.x !== state.editor.scale) {\r\n        app.stage.scale.set(state.editor.scale);\r\n    }\r\n\r\n    graphics.clear();\r\n\r\n    drawDungeonObjects(app.stage, state);\r\n    drawGrid(graphics, state.dungeon.size.width, state.dungeon.size.height);\r\n\r\n    if (app.renderer.plugins.interaction.mouseOverRenderer) {\r\n        ToolRouter.renderTool(state, graphics);\r\n\r\n        let mousePosition = app.renderer.plugins.interaction.mouse.getLocalPosition(app.stage);\r\n        store.dispatch(setMouseDungeonPosition(mousePosition.x, mousePosition.y));\r\n    }\r\n    else {\r\n        store.dispatch(setMouseDungeonPosition(null, null));\r\n    }\r\n}\r\nexport default render;\r\n\r\nconst drawDungeonObjects = (container, state) => {\r\n    let objectIdMap = state.dungeon.objects.reduce((map, space) => {\r\n        map[space.id] = space;\r\n        return map;\r\n    }, {});\r\n\r\n    let containerObjectIds = new Set(container.children.map(child => child.id));\r\n    let stateObjectIds = Object.keys(objectIdMap);\r\n    stateObjectIds.forEach(spaceId => {\r\n        if (!containerObjectIds.has(spaceId)) {\r\n            let newChildGraphics = new PIXI.Graphics();\r\n            newChildGraphics.id = spaceId;\r\n            newChildGraphics.interactive = true;\r\n            newChildGraphics.mouseup = function () {\r\n                store.dispatch(selectObject(this.id));\r\n            };\r\n            container.addChild(newChildGraphics);\r\n        }\r\n    });\r\n\r\n    // Sync all child graphics with state\r\n    container.children.forEach(graphics => {\r\n        if (graphics.id) {\r\n            let object = objectIdMap[graphics.id];\r\n            if (object) {\r\n                RenderRouter.renderObject(graphics, object, state.selectedObject === graphics.id)\r\n            }\r\n            else {\r\n                container.removeChild(graphics);\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nconst drawGrid = (graphics, gridWidth, gridHeight) => {\r\n    graphics.lineStyle(1, 0x444444, 1, 0.5);\r\n    for (let i = 0; i < gridWidth; i++) {\r\n        graphics.moveTo(i * GRID_TILE_SIZE, 0);\r\n        graphics.lineTo(i * GRID_TILE_SIZE, (gridHeight - 1) * GRID_TILE_SIZE);\r\n    }\r\n    for (let j = 0; j < gridHeight; j++) {\r\n        graphics.moveTo(0, j * GRID_TILE_SIZE);\r\n        graphics.lineTo((gridWidth - 1) * GRID_TILE_SIZE, j * GRID_TILE_SIZE);\r\n    }\r\n}\r\n","import { deleteSelectedObject, moveSelectedObject } from \"../reducers/dungeonReducer\"\r\n\r\nconst handleKeyboardEvent = (keyboardEvent, store) => {\r\n    switch (keyboardEvent.key) {\r\n        case 'Delete':\r\n            return store.dispatch(deleteSelectedObject());\r\n        case 'ArrowLeft':\r\n            return store.dispatch(moveSelectedObject(-1, 0));\r\n        case 'ArrowRight':\r\n            return store.dispatch(moveSelectedObject(1, 0));\r\n        case 'ArrowDown':\r\n            return store.dispatch(moveSelectedObject(0, 1));\r\n        case 'ArrowUp':\r\n            return store.dispatch(moveSelectedObject(0, -1));\r\n        default:\r\n            return;\r\n    }\r\n}\r\n\r\nexport default handleKeyboardEvent","import { moveViewport, scroll } from \"../reducers/dungeonReducer\";\r\nimport * as ToolRouter from '../tools/ToolRouter';\r\n\r\nexport const handleMouseDown = (mouseEvent, store) => {\r\n    if (mouseEvent.buttons === 1) {\r\n        store.dispatch({ type: 'MOUSE_DOWN' });\r\n    }\r\n}\r\n\r\nexport const handleMouseUp = (mouseEvent, store) => {\r\n    let state = store.getState();\r\n    if (state.mouseDown) {\r\n        store.dispatch({ type: 'MOUSE_UP' });\r\n        ToolRouter.onMouseUp(store);\r\n    }\r\n}\r\n\r\nexport const handleMouseMove = (mouseEvent, store) => {\r\n    if (mouseEvent.buttons === 2) {\r\n        store.dispatch(moveViewport(mouseEvent.movementX, mouseEvent.movementY));\r\n    }\r\n}\r\n\r\nexport const handleWheelEvent = (wheelEvent, store) => {\r\n    store.dispatch(scroll(wheelEvent));\r\n}\r\n","import * as PIXI from 'pixi.js';\r\nimport React from 'react';\r\nimport { render as renderDungeon } from '../rendering/DungeonRenderer';\r\nimport store from '../store.js';\r\nimport handleKeyboardEvent from '../utils/keyboardEventHandlers.js';\r\nimport * as MouseEventHandler from '../utils/mouseEventHandlers.js';\r\n\r\nexport default class DungeonEditor extends React.Component {\r\n    render() {\r\n        return <div\r\n            style={{ height: \"85vh\" }}\r\n            tabIndex={-1}\r\n            ref={(element) => this.canvasDiv = element}>\r\n        </div>\r\n    }\r\n\r\n    componentDidMount() {\r\n        const app = new PIXI.Application({\r\n            backgroundColor: 0x5f5f5f,\r\n            sharedLoader: true,\r\n            sharedTicker: true,\r\n            antialias: true\r\n        });\r\n        this.app = app;\r\n        this.canvasDiv.appendChild(app.view);\r\n        this.app.resizeTo = this.canvasDiv;\r\n        this.app.resize();\r\n\r\n        let graphics = new PIXI.Graphics();\r\n        graphics.zIndex = Number.MAX_SAFE_INTEGER;\r\n        app.stage.sortableChildren = true;\r\n        app.stage.addChild(graphics);\r\n\r\n        this.setupInteractions()\r\n\r\n        app.ticker.add(() => {\r\n            renderDungeon(app, graphics);\r\n        });\r\n    }\r\n\r\n    setupInteractions() {\r\n        this.canvasDiv.addEventListener(\"wheel\", (wheelEvent) => {\r\n            MouseEventHandler.handleWheelEvent(wheelEvent, store);\r\n            wheelEvent.preventDefault();\r\n        });\r\n        this.canvasDiv.addEventListener('contextmenu', (event) => {\r\n            event.preventDefault();\r\n        });\r\n        this.canvasDiv.addEventListener('pointerdown', (event) => {\r\n            MouseEventHandler.handleMouseDown(event, store);\r\n        });\r\n        this.canvasDiv.addEventListener('pointerup', (event) => {\r\n            MouseEventHandler.handleMouseUp(event, store);\r\n        });\r\n        this.canvasDiv.addEventListener('pointermove', (pointerEvent) => {\r\n            MouseEventHandler.handleMouseMove(pointerEvent, store);\r\n        });\r\n        this.canvasDiv.addEventListener('keydown', (event) => {\r\n            handleKeyboardEvent(event, store);\r\n        });\r\n    }\r\n}\r\n","import React from 'react'\r\n\r\nconst StateEditorCard = ({title, children}) =>\r\n    <div className=\"card bg-dark text-light border-secondary mb-3\">\r\n        <div className=\"card-header border-secondary\">\r\n            <h5>{title}</h5>\r\n        </div>\r\n        <div className=\"card-body\">\r\n            <div className=\"form-group\">\r\n                {children}\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\nexport default StateEditorCard\r\n","import React from 'react'\r\nimport StateEditorCard from './StateEditorCard'\r\n\r\nconst PositionEditor = ({ title, x, y, onUpdate }) =>\r\n    <StateEditorCard title={title ?? 'Position'}>\r\n        <label>\r\n            X:\r\n            <input\r\n                className=\"form-control bg-secondary text-light\"\r\n                type=\"number\"\r\n                value={x}\r\n                onChange={(changeEvent) => onUpdate(\r\n                    parseInt(changeEvent.target.value),\r\n                    y\r\n                )}>\r\n            </input>\r\n        </label>\r\n        <label>\r\n            Y:\r\n            <input\r\n                className=\"form-control bg-secondary text-light\"\r\n                type=\"number\"\r\n                value={y}\r\n                onChange={(changeEvent) => onUpdate(\r\n                    x,\r\n                    parseInt(changeEvent.target.value)\r\n                )}>\r\n            </input>\r\n        </label>\r\n    </StateEditorCard>\r\n\r\nexport default PositionEditor","import React from 'react'\r\nimport StateEditorCard from './StateEditorCard'\r\n\r\nconst SizeEditor = ({ title, width, height, onUpdate }) =>\r\n    <StateEditorCard title={title ?? 'Size'}>\r\n        <label>\r\n            Width:\r\n            <input\r\n                className=\"form-control bg-secondary text-light\"\r\n                type=\"number\"\r\n                value={width}\r\n                onChange={(changeEvent) => onUpdate(\r\n                    parseInt(changeEvent.target.value),\r\n                    height\r\n                )}>\r\n            </input>\r\n        </label>\r\n        <label>\r\n            Height:\r\n            <input\r\n                className=\"form-control bg-secondary text-light\"\r\n                type=\"number\"\r\n                value={height}\r\n                onChange={(changeEvent) => onUpdate(\r\n                    width,\r\n                    parseInt(changeEvent.target.value)\r\n                )}>\r\n            </input>\r\n        </label>\r\n    </StateEditorCard>\r\n\r\nexport default SizeEditor","import React from \"react\"\r\nimport { connect } from 'react-redux'\r\nimport * as DungeonActions from '../reducers/dungeonReducer'\r\nimport PositionEditor from \"./PositionEditor\"\r\nimport SizeEditor from \"./SizeEditor\"\r\nimport StateEditorCard from \"./StateEditorCard\"\r\n\r\nlet StateEditor = ({ dispatch, selectedObjectId, selectedObject, dungeonSize, scrollPansViewport }) => {\r\n    if (selectedObjectId) {\r\n        return <React.Fragment>\r\n            {selectedObject.label !== undefined &&\r\n                <StateEditorCard title='Label'>\r\n                    <label>\r\n                        Label:\r\n                        <input\r\n                            className=\"form-control bg-secondary text-light\"\r\n                            type=\"text\"\r\n                            value={selectedObject.label}\r\n                            onChange={(changeEvent) => dispatch(DungeonActions.setSelectedObjectLabel(changeEvent.target.value))}>\r\n                        </input>\r\n                    </label>\r\n                </StateEditorCard>}\r\n            {selectedObject.position &&\r\n                <PositionEditor\r\n                    x={selectedObject.position.x}\r\n                    y={selectedObject.position.y}\r\n                    onUpdate={(x, y) => dispatch(DungeonActions.setSelectedObjectPosition(x, y))} />\r\n            }\r\n            {selectedObject.size &&\r\n                <SizeEditor\r\n                    width={selectedObject.size.width}\r\n                    height={selectedObject.size.height}\r\n                    onUpdate={(width, height) => dispatch(DungeonActions.setSelectedObjectSize(width, height))} />\r\n            }\r\n            {selectedObject.start &&\r\n                <PositionEditor\r\n                    title=\"Start\"\r\n                    x={selectedObject.start.x}\r\n                    y={selectedObject.start.y}\r\n                    onUpdate={(x,y) => dispatch(DungeonActions.setSelectedObjectStart(x, y))} />\r\n            }\r\n            {selectedObject.end &&\r\n                <PositionEditor\r\n                    title=\"End\"\r\n                    x={selectedObject.end.x}\r\n                    y={selectedObject.end.y}\r\n                    onUpdate={(x,y) => dispatch(DungeonActions.setSelectedObjectEnd(x, y))} />\r\n            }\r\n            {selectedObjectId &&\r\n                <StateEditorCard title=\"Actions\">\r\n                    <button\r\n                        className=\"btn btn-outline-danger\"\r\n                        onClick={() => dispatch(DungeonActions.deleteSelectedObject())}>\r\n                            Delete Object\r\n                    </button>\r\n                </StateEditorCard>\r\n            }\r\n        </React.Fragment>\r\n    }\r\n    else {\r\n        return <React.Fragment>\r\n            <StateEditorCard title=\"Instructions\">\r\n                <p><i>Right click</i> to pan the view.</p>\r\n                <p><i>Scroll</i> to zoom in and out.</p>\r\n                <p><i>Left click and drag</i> to create new spaces with the New Space tool.</p>\r\n                <p><i>Left click</i> to select spaces with the Select tool.</p>\r\n                <p><i>Arrow keys</i> will move the currently selected space.</p>\r\n                <p><i>Delete</i> will delete the currently selected space.</p>\r\n            </StateEditorCard>\r\n            <SizeEditor\r\n                title=\"Dungeon Size\"\r\n                width={dungeonSize.width}\r\n                height={dungeonSize.height}\r\n                onUpdate={(width, height) => dispatch(DungeonActions.setDungeonSize(width, height))} />\r\n            <StateEditorCard title=\"Editor Options\">\r\n                <label>\r\n                    <input type='checkbox' value={scrollPansViewport} onChange={(event) => dispatch(DungeonActions.setScrollMovesViewport(event.target.checked))}></input>\r\n                    Scroll to pan\r\n                </label>\r\n            </StateEditorCard>\r\n        </React.Fragment>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    selectedObjectId: state.selectedObject,\r\n    selectedObject: state.dungeon.objects.find(object => object.id === state.selectedObject),\r\n    dungeonSize: state.dungeon.size,\r\n    scrollPansViewport: state.scrollPansViewport\r\n})\r\n\r\nStateEditor = connect(mapStateToProps)(StateEditor)\r\n\r\nexport default StateEditor\r\n","import React from \"react\"\r\n\r\nconst ToolbarButton = ({toolName, toolId, selectedTool, onClick}) =>\r\n    <button\r\n        className={\"btn btn-secondary\" +\r\n            (selectedTool === toolId ? ' active' : '')}\r\n        onClick={() => onClick(toolId)}>\r\n            {toolName}\r\n    </button>\r\n\r\nexport default ToolbarButton;","import React from \"react\"\r\nimport { connect } from 'react-redux'\r\nimport { selectTool } from '../reducers/dungeonReducer'\r\nimport ToolbarButton from \"./ToolbarButton\"\r\nimport TOOL_TYPE from \"../tools/toolType\"\r\n\r\nlet Toolbar = ({ dispatch, selectedTool }) => {\r\n    const dispatchSelectedTool = (toolId) => dispatch(selectTool(toolId))\r\n\r\n    return (\r\n        <div className=\"btn-group\" role=\"group\">\r\n            <ToolbarButton\r\n                toolName='Select'\r\n                toolId={TOOL_TYPE.SELECT}\r\n                selectedTool={selectedTool}\r\n                onClick={dispatchSelectedTool} />\r\n            <ToolbarButton\r\n                toolName='New Rectangular Space'\r\n                toolId={TOOL_TYPE.NEW_SPACE_RECTANGLE}\r\n                selectedTool={selectedTool}\r\n                onClick={dispatchSelectedTool} />\r\n            <ToolbarButton\r\n                toolName='New Polygonal Space'\r\n                toolId={TOOL_TYPE.NEW_SPACE_POLYGON}\r\n                selectedTool={selectedTool}\r\n                onClick={dispatchSelectedTool} />\r\n            <ToolbarButton\r\n                toolName='New Wall'\r\n                toolId={TOOL_TYPE.NEW_WALL}\r\n                selectedTool={selectedTool}\r\n                onClick={dispatchSelectedTool} />\r\n            <ToolbarButton\r\n                toolName='New Door'\r\n                toolId={TOOL_TYPE.NEW_DOOR}\r\n                selectedTool={selectedTool}\r\n                onClick={dispatchSelectedTool} />\r\n            <ToolbarButton\r\n                toolName='New Label'\r\n                toolId={TOOL_TYPE.NEW_LABEL}\r\n                selectedTool={selectedTool}\r\n                onClick={dispatchSelectedTool} />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    selectedTool: state.selectedTool\r\n})\r\n\r\nToolbar = connect(mapStateToProps)(Toolbar)\r\n\r\nexport default Toolbar\r\n","import React from 'react';\r\nimport DungeonEditor from \"./components/DungeonEditor.js\";\r\nimport StateEditor from './components/StateEditor';\r\nimport Toolbar from './components/Toolbar';\r\n\r\nfunction App() {\r\n  return (\r\n    <React.Fragment>\r\n      <nav className=\"navbar navbar-dark bg-secondary\">\r\n        <span className=\"navbar-brand\">\r\n          Pungeon\r\n        </span>\r\n      </nav>\r\n      <div className=\"px-5\">\r\n        <div className=\"py-2\">\r\n          <Toolbar />\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-9\">\r\n            <DungeonEditor />\r\n          </div>\r\n          <div className=\"col-md-3\">\r\n            <StateEditor />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './app/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from 'react-redux';\r\nimport store from './app/store.js'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}