{"version":3,"sources":["app/reducers/editorActions.js","app/utils/createArrayWithUpdatedObject.js","app/reducers/dungeonReducer.js","app/tools/toolType.js","app/reducers/index.js","app/reducers/editorReducer.js","app/store.js","app/utils/dungeonObjectTypes.js","app/reducers/dungeonActions.js","app/utils/geometry.js","app/tools/AddDoorTool.js","app/utils/constants.js","app/tools/AddLabelTool.js","app/tools/AddSpaceRectangleTool.js","app/tools/AddWallTool.js","app/tools/SelectTool.js","app/tools/AddSpacePolygonTool.js","app/tools/AddTokenTool.js","app/tools/ToolRouter.js","app/rendering/GraphicsRenderer.js","app/rendering/DoorRenderer.js","app/rendering/LabelRenderer.js","app/rendering/WallRenderer.js","app/rendering/SpaceRenderer.js","app/rendering/TokenRenderer.js","app/rendering/RenderRouter.js","app/rendering/DungeonRenderer.js","app/utils/keyboardEventHandlers.js","app/utils/mouseEventHandlers.js","app/components/DungeonEditor.js","app/components/StateEditorCard.js","app/components/PositionEditor.js","app/components/SizeEditor.js","app/components/StateEditor.js","app/components/ToolbarButton.js","app/components/Toolbar.js","app/App.js","serviceWorker.js","index.js"],"names":["setMouseDungeonPosition","x","y","type","createArrayWithUpdatedObject","array","id","update","map","object","objectCopy","dungeonReducer","state","action","size","width","height","arrayWithUpdatedObject","objects","selectedObject","position","deltaX","deltaY","textureUrl","texturePath","angle","label","start","end","objectArray","slice","newObject","selectedObjectId","newObjectArray","filter","TOOL_TYPE","SELECT","NEW_WALL","NEW_SPACE_RECTANGLE","NEW_SPACE_POLYGON","NEW_DOOR","NEW_LABEL","NEW_TOKEN","combineReducers","editor","ongoingSpacePolygon","newPolygonArray","mouse","dungeonPosition","scrollMovesViewport","holdingCtrl","scaleDelta","scrollY","newScale","Math","min","max","scale","scrollX","mouseDown","mouseStartX","mouseStartY","selectedTool","objectId","dungeon","store","createStore","reducer","window","__REDUX_DEVTOOLS_EXTENSION__","DUNGEON_OBJECT_TYPE","SPACE","WALL","DOOR","LABEL","TOKEN","deleteSelectedObject","moveSelectedObject","setSelectedObjectAngle","square","lineLength","v","w","sqrt","getClosestPointOnLine","p","a","b","atob","len","dot","t","AddDoorTool","getState","mousePoint","minDistance","snapPoint","minWallId","forEach","wall","scaledStart","scaledEnd","closestPoint","distance","doorWall","find","startX","startY","endX","endY","endPoint","dispatch","uuid","graphics","lineStyle","moveTo","lineTo","beginFill","drawCircle","endFill","AddLabelTool","labelText","dungeonSpaceX","dungeonSpaceY","AddSpaceRectangleTool","floor","ceil","addSpace","snappedX","snappedY","drawRect","AddWallTool","round","addWall","hoverX","hoverY","SelectTool","AddSpacePolygonTool","positionArray","firstPoint","pointArray","points","addOngoingSpacePolygonPoint","index","length","point","AddTokenTool","tokenTextureUrl","this","toolMap","GraphicsRenderer","PIXI","DoorRenderer","door","objectIsSelected","zIndex","clear","tint","hitArea","LabelRenderer","children","style","fontFamily","fontSize","addChild","fill","text","set","WallRenderer","createWallHitArea","half","startPoint","rise","run","slope","inverseSlope","abs","getOffsetAlongSlope","xOffset","yOffset","polygonXOffset","polygonYOffset","distanceTravelledAlongSlope","slopeAngle","atan","cos","sin","SpaceRenderer","space","TokenRenderer","sprite","token","objectSelectionGraphics","texture","from","process","getChildAt","drawShape","getLocalBounds","removeChildAt","rendererMap","render","app","stage","drawDungeonObjects","drawGrid","renderer","plugins","interaction","mouseOverRenderer","renderTool","ToolRouter","mousePosition","getLocalPosition","container","objectIdMap","reduce","containerObjectIds","Set","child","Object","keys","has","newChildGraphics","dungeonObject","createRenderObject","interactive","mouseup","selectObject","renderObject","RenderRouter","removeChild","gridWidth","gridHeight","i","j","handleKeyboardEvent","keyboardEvent","key","handleMouseUp","mouseEvent","onMouseUp","DungeonEditor","tabIndex","ref","element","canvasDiv","backgroundColor","sharedLoader","sharedTicker","antialias","appendChild","view","resizeTo","resize","Number","MAX_SAFE_INTEGER","sortableChildren","setupInteractions","ticker","add","renderDungeon","addEventListener","wheelEvent","getModifierState","scroll","MouseEventHandler","preventDefault","event","buttons","pointerEvent","movementX","movementY","React","Component","StateEditorCard","title","className","PositionEditor","onUpdate","value","onChange","changeEvent","parseInt","target","SizeEditor","StateEditor","dungeonSize","scrollPansViewport","Fragment","undefined","DungeonActions","step","direction","onClick","checked","connect","ToolbarButton","toolName","toolId","Toolbar","dispatchSelectedTool","role","App","Boolean","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f230decc.chunk.js","sourcesContent":["export const clearOngoingSpacePolygonPoint = () => ({\n    type: 'CLEAR_ONGOING_SPACE_POLYGON'\n})\n\nexport const addOngoingSpacePolygonPoint = (x, y) => ({\n    type: 'ADD_ONGOING_SPACE_POLYGON',\n    position: {\n        x: x,\n        y: y\n    }\n})\n\nexport const scroll = (wheelEvent) => ({\n    type: 'SCROLL_EVENT',\n    scrollX: wheelEvent.deltaX,\n    scrollY: wheelEvent.deltaY,\n    holdingCtrl: wheelEvent.getModifierState(\"Control\")\n})\n\nexport const moveViewport = (deltaX, deltaY) => ({\n    type: 'MOVE_VIEWPORT',\n    deltaX: deltaX,\n    deltaY: deltaY\n})\n\nexport const selectTool = (toolName) => ({\n    type: 'SELECT_TOOL',\n    selectedTool: toolName\n})\n\nexport const selectObject = (objectId) => ({\n    type: 'SELECT_OBJECT',\n    objectId: objectId\n})\n\nexport const setScrollMovesViewport = (scrollMovesViewport) => ({\n    type: 'SET_SCROLL_MOVES_VIEWPORT',\n    scrollMovesViewport: scrollMovesViewport\n})\n\nexport const setMouseDungeonPosition = (x, y) => ({\n    type: 'SET_MOUSE_DUNGEON_POSITION',\n    x: x,\n    y: y\n})\n","export const createArrayWithUpdatedObject = (array, id, update) => {\n    return array.map(object => {\n        if (object.id === id) {\n            let objectCopy = {...object};\n            update(objectCopy);\n            return objectCopy;\n        }\n        else {\n            return object;\n        }\n    })\n}\n","import { createArrayWithUpdatedObject } from '../utils/createArrayWithUpdatedObject'\n\nexport const dungeonReducer = (state = {}, action) => {\n    switch (action.type) {\n        case 'SET_DUNGEON_SIZE': {\n            return {\n                ...state,\n                size: {\n                    width: action.width,\n                    height: action.height\n                }\n            }\n        }\n        case 'MOVE_SELECTED_OBJECT': {\n            let arrayWithUpdatedObject = createArrayWithUpdatedObject(\n                state.objects,\n                action.selectedObject,\n                (object) => object.position = {\n                    x: object.position.x + action.deltaX,\n                    y: object.position.y + action.deltaY\n                });\n            return {\n                ...state,\n                objects: arrayWithUpdatedObject\n            };\n        }\n        case 'SET_SELECTED_OBJECT_TEXTURE_PATH': {\n            let arrayWithUpdatedObject = createArrayWithUpdatedObject(\n                state.objects,\n                action.selectedObject,\n                (object) => object.textureUrl = action.texturePath);\n            return {\n                ...state,\n                objects: arrayWithUpdatedObject\n            };\n        }\n        case 'SET_SELECTED_OBJECT_ANGLE': {\n            let arrayWithUpdatedObject = createArrayWithUpdatedObject(\n                state.objects,\n                action.selectedObject,\n                (object) => object.angle = action.angle);\n            return {\n                ...state,\n                objects: arrayWithUpdatedObject\n            };\n        }\n        case 'SET_SELECTED_OBJECT_LABEL': {\n            let arrayWithUpdatedObject = createArrayWithUpdatedObject(\n                state.objects,\n                action.selectedObject,\n                (object) => object.label = action.label);\n            return {\n                ...state,\n                objects: arrayWithUpdatedObject\n            };\n        }\n        case 'SET_SELECTED_OBJECT_POSITION': {\n            let arrayWithUpdatedObject = createArrayWithUpdatedObject(\n                state.objects,\n                action.selectedObject,\n                (object) => object.position = {\n                    x: action.x,\n                    y: action.y\n                });\n            return {\n                ...state,\n                objects: arrayWithUpdatedObject\n            };\n        }\n        case 'SET_SELECTED_OBJECT_SIZE': {\n            let arrayWithUpdatedObject = createArrayWithUpdatedObject(\n                state.objects,\n                action.selectedObject,\n                (object) => object.size = {\n                    width: action.width,\n                    height: action.height\n                });\n            return {\n                ...state,\n                objects: arrayWithUpdatedObject\n            };\n        }\n        case 'SET_SELECTED_OBJECT_START': {\n            let arrayWithUpdatedObject = createArrayWithUpdatedObject(\n                state.objects,\n                action.selectedObject,\n                (object) => object.start = {\n                    x: action.x,\n                    y: action.y\n                });\n            return {\n                ...state,\n                objects: arrayWithUpdatedObject\n            };\n        }\n        case 'SET_SELECTED_OBJECT_END': {\n            let arrayWithUpdatedObject = createArrayWithUpdatedObject(\n                state.objects,\n                action.selectedObject,\n                (object) => object.end = {\n                    x: action.x,\n                    y: action.y\n                });\n            return {\n                ...state,\n                objects: arrayWithUpdatedObject,\n            };\n\n        }\n        case 'ADD_OBJECT': {\n            let objectArray = state.objects.slice();\n            objectArray = [...objectArray, action.newObject];\n            return {\n                ...state,\n                objects: objectArray\n            };\n        }\n        case 'DELETE_OBJECT': {\n            let selectedObjectId = action.selectedObject;\n            if (selectedObjectId) {\n                let newObjectArray = state.objects\n                    .filter(object => object.id !== selectedObjectId);\n                return {\n                    ...state,\n                    objects: newObjectArray\n                }\n            }\n            else {\n                return state;\n            }\n        }\n        default:\n            return state\n    }\n};\n\nexport default dungeonReducer\n","const TOOL_TYPE  = {\n    SELECT: \"select\",\n    NEW_WALL: \"new_wall\",\n    NEW_SPACE_RECTANGLE: \"new_space_rectangle\",\n    NEW_SPACE_POLYGON: \"new_space_polygon\",\n    NEW_DOOR: \"new_door\",\n    NEW_LABEL: \"new_label\",\n    NEW_TOKEN: \"new_token\"\n};\n\nexport default TOOL_TYPE;\n","import { combineReducers } from 'redux'\nimport dungeonReducer from './dungeonReducer'\nimport { editorReducer } from './editorReducer'\n\nexport default combineReducers({\n    editor: editorReducer,\n    dungeon: dungeonReducer\n})\n","import TOOL_TYPE from \"../tools/toolType\";\n\nexport const editorReducer = (state = {}, action) => {\n    switch (action.type) {\n        case 'CLEAR_ONGOING_SPACE_POLYGON': {\n            return {\n                ...state,\n                ongoingSpacePolygon: null\n            }\n        }\n        case 'ADD_ONGOING_SPACE_POLYGON': {\n            let newPolygonArray = [...(state.ongoingSpacePolygon ?? []), action.position]\n            return {\n                ...state,\n                ongoingSpacePolygon: newPolygonArray\n            }\n        }\n        case 'MOVE_VIEWPORT': {\n            return {\n                ...state,\n                position: {\n                    x: state.position.x + action.deltaX,\n                    y: state.position.y + action.deltaY\n                }\n            }\n        }\n        case 'SET_MOUSE_DUNGEON_POSITION': {\n            return {\n                ...state,\n                mouse: {\n                    ...state.mouse,\n                    dungeonPosition: {\n                        x: action.x,\n                        y: action.y\n                    }\n                }\n            }\n        }\n        case 'SCROLL_EVENT': {\n            if (!state.scrollMovesViewport || action.holdingCtrl) {\n                let scaleDelta = 0.1\n                if (action.scrollY > 0) {\n                    scaleDelta *= -1\n                }\n                let newScale = Math.min(Math.max(state.scale + scaleDelta, 0.1), 2)\n                if (state.scale !== newScale) {\n                    return {\n                        ...state,\n                        scale: newScale,\n                        position: {\n                            x: state.position.x - (state.mouse.dungeonPosition.x * scaleDelta),\n                            y: state.position.y - (state.mouse.dungeonPosition.y * scaleDelta),\n                        }\n                    };\n                }\n                else {\n                    return state;\n                }\n            }\n            else {\n                let scaleDelta = 0.5;\n                return {\n                    ...state,\n                    position: {\n                        x: state.position.x - action.scrollX * scaleDelta,\n                        y: state.position.y - action.scrollY * scaleDelta\n                    }\n                };\n            }\n        }\n        case 'MOUSE_DOWN': {\n            return {\n                ...state,\n                mouseDown: true,\n                mouseStartX: state.mouse.dungeonPosition.x,\n                mouseStartY: state.mouse.dungeonPosition.y\n            };\n        }\n        case 'MOUSE_UP': {\n            return {\n                ...state,\n                mouseDown: false\n            };\n        }\n        case 'SET_SCROLL_MOVES_VIEWPORT': {\n            return {\n                ...state,\n                scrollMovesViewport: action.scrollMovesViewport\n            }\n        }\n        case 'SELECT_TOOL': {\n            let selectedObject = state.selectedObject;\n            if (action.selectedTool !== TOOL_TYPE.SELECT) {\n                selectedObject = null;\n            }\n            return {\n                ...state,\n                selectedTool: action.selectedTool,\n                selectedObject: selectedObject\n            };\n        }\n        case 'SELECT_OBJECT': {\n            return {\n                ...state,\n                selectedObject: action.objectId\n            };\n        }\n        case 'DELETE_OBJECT': {\n            return {\n                ...state,\n                selectedObject: null\n            }\n        }\n        default: {\n            return {\n                ...state\n            }\n        }\n    }\n}\n","import { createStore } from 'redux';\nimport reducer from './reducers/index'\nimport TOOL_TYPE from './tools/toolType';\n\nconst store = createStore(reducer,\n  {\n    editor: {\n      scrollMovesViewport: false,\n      mouseDown: false,\n      mouseStartX: 0,\n      mouseStartY: 0,\n      selectedTool: TOOL_TYPE.NEW_SPACE_RECTANGLE,\n      scale: 1,\n      position: {\n        x: 0,\n        y: 0\n      },\n      mouse: {\n        dungeonPosition: {\n          x: 0,\n          y: 0\n        }\n      }\n    },\n    dungeon: {\n      size: {\n        width: 28,\n        height: 32\n      },\n      objects: [\n        {\n          id: \"423894382\",\n          type: \"token\",\n          position: {\n            x: 2,\n            y: 4\n          },\n          size: {\n            width: 1,\n            height: 2\n          },\n          textureUrl: \"/assets/stairs.png\",\n          angle: 0\n        },\n        {\n          id: \"01f998f7-3ad4-43c6-b498-3249ab470b05\",\n          type: \"space\",\n          position: {\n            x: 1,\n            y: 1\n          },\n          size: {\n            width: 5,\n            height: 5\n          }\n        },\n        {\n          id: \"79178d8c-3a3e-42ee-b1ec-00dc37a045fc\",\n          type: \"space\",\n          position: {\n            x: 6,\n            y: 4\n          },\n          size: {\n            width: 7,\n            height: 9\n          }\n        },\n        {\n          id: \"6ce25fdc-9fd4-46c0-a924-74f5f9174193\",\n          type: \"space\",\n          position: {\n            x: 15,\n            y: 15\n          },\n          size: {\n            width: 6,\n            height: 7\n          }\n        },\n        {\n          id: \"e211fbd3-a817-47a5-bb47-481ba330e46d\",\n          type: \"space\",\n          position: {\n            x: 21,\n            y: 19\n          },\n          size: {\n            width: 4,\n            height: 9\n          }\n        },\n        {\n          id: '4abe3330-4a95-4c29-b71d-8ea768da1ee6',\n          type: \"wall\",\n          start: {\n            x: 1,\n            y: 1\n          },\n          end: {\n            x: 1,\n            y: 6\n          }\n        },\n        {\n          id: 'ad3c6f9b-f3f0-4025-8073-daacc68483ec',\n          type: \"wall\",\n          start: {\n            x: 6,\n            y: 6\n          },\n          end: {\n            x: 1,\n            y: 6\n          }\n        },\n        {\n          id: '68365136-d12f-4e54-8f7b-4cbd3ab424eb',\n          type: \"wall\",\n          start: {\n            x: 6,\n            y: 13\n          },\n          end: {\n            x: 6,\n            y: 6\n          }\n        },\n        {\n          id: '3d6435e5-8d67-4405-87d0-72c4e8f4dfaa',\n          type: \"wall\",\n          start: {\n            x: 13,\n            y: 13\n          },\n          end: {\n            x: 6,\n            y: 13\n          }\n        },\n        {\n          id: '384ac23d-f5fc-4cd1-9ad7-b528b62fa732',\n          type: \"wall\",\n          start: {\n            x: 13,\n            y: 4\n          },\n          end: {\n            x: 13,\n            y: 13\n          }\n        },\n        {\n          id: '161e3147-ca11-4dc4-a26b-ca8295c5abaa',\n          type: \"wall\",\n          start: {\n            x: 6,\n            y: 4\n          },\n          end: {\n            x: 13,\n            y: 4\n          }\n        },\n        {\n          id: 'e8092d63-e7e2-4cd2-8c80-8cd6030980f1',\n          type: \"wall\",\n          start: {\n            x: 6,\n            y: 1\n          },\n          end: {\n            x: 6,\n            y: 4\n          }\n        },\n        {\n          id: '71ed94d3-177b-428b-a8e5-fe25eb79a4ea',\n          type: \"wall\",\n          start: {\n            x: 1,\n            y: 1\n          },\n          end: {\n            x: 6,\n            y: 1\n          }\n        },\n        {\n          id: '0ea47a6f-af9f-4ec6-a7f3-881332643e2a',\n          type: \"wall\",\n          start: {\n            x: 15,\n            y: 15\n          },\n          end: {\n            x: 15,\n            y: 22\n          }\n        },\n        {\n          id: 'f7ec5579-7966-4ba4-b8ee-fdaad6372842',\n          type: \"wall\",\n          start: {\n            x: 21,\n            y: 22\n          },\n          end: {\n            x: 15,\n            y: 22\n          }\n        },\n        {\n          id: '1e587060-37cc-4b87-a88a-852c8055cabb',\n          type: \"wall\",\n          start: {\n            x: 21,\n            y: 15\n          },\n          end: {\n            x: 15,\n            y: 15\n          }\n        },\n        {\n          id: '79e1f702-6d60-435b-ba1e-584077a7d479',\n          type: \"wall\",\n          start: {\n            x: 21,\n            y: 19\n          },\n          end: {\n            x: 21,\n            y: 15\n          }\n        },\n        {\n          id: '231997d1-1453-4573-a2c0-0571428d7ac9',\n          type: \"wall\",\n          start: {\n            x: 25,\n            y: 19\n          },\n          end: {\n            x: 21,\n            y: 19\n          }\n        },\n        {\n          id: '85033454-8145-4d36-9b58-5e891f731f25',\n          type: \"wall\",\n          start: {\n            x: 21,\n            y: 22\n          },\n          end: {\n            x: 21,\n            y: 28\n          }\n        },\n        {\n          id: '2c6b4f88-4163-4847-ba05-c4ce865dfd87',\n          type: \"wall\",\n          start: {\n            x: 21,\n            y: 28\n          },\n          end: {\n            x: 25,\n            y: 28\n          }\n        },\n        {\n          id: '57013c9b-609f-4e59-ae1a-fd94a49bac80',\n          type: \"wall\",\n          start: {\n            x: 25,\n            y: 19\n          },\n          end: {\n            x: 25,\n            y: 28\n          }\n        }\n      ]\n    }\n  },\n  typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nexport default store;\n","const DUNGEON_OBJECT_TYPE  = {\n    SPACE: \"space\",\n    WALL: \"wall\",\n    DOOR: \"door\",\n    LABEL: \"label\",\n    TOKEN: \"token\"\n};\n\nexport default DUNGEON_OBJECT_TYPE;\n","import DUNGEON_OBJECT_TYPE from \"../utils/dungeonObjectTypes\";\nimport { v4 as uuid } from 'uuid';\n\nexport const addToken = (tokenTextureUrl, x, y, width, height, angle) => ({\n    type: 'ADD_OBJECT',\n    newObject: {\n        id: uuid(),\n        type: DUNGEON_OBJECT_TYPE.TOKEN,\n        textureUrl: tokenTextureUrl,\n        position: {\n            x: x,\n            y: y\n        },\n        size: {\n            width: width,\n            height: height\n        },\n        angle: angle\n    }\n})\n\nexport const addSpacePolygon = (positionArray) => ({\n    type: 'ADD_OBJECT',\n    newObject: {\n        id: uuid(),\n        type: DUNGEON_OBJECT_TYPE.SPACE,\n        points: positionArray,\n    }\n})\n\nexport const addLabel = (x, y, labelText) => ({\n    type: 'ADD_OBJECT',\n    newObject: {\n        id: uuid(),\n        type: DUNGEON_OBJECT_TYPE.LABEL,\n        position: {\n            x: x,\n            y: y\n        },\n        label: labelText\n    }\n})\n\nexport const addDoor = (startX, startY, endX, endY) => ({\n    type: 'ADD_OBJECT',\n    newObject: {\n        id: uuid(),\n        type: DUNGEON_OBJECT_TYPE.DOOR,\n        start: {\n            x: startX,\n            y: startY\n        },\n        end: {\n            x: endX,\n            y: endY\n        }\n    }\n});\n\nexport const addWall = (startX, startY, endX, endY) => ({\n    type: 'ADD_OBJECT',\n    newObject: {\n        id: uuid(),\n        type: DUNGEON_OBJECT_TYPE.WALL,\n        start: {\n            x: startX,\n            y: startY\n        },\n        end: {\n            x: endX,\n            y: endY\n        }\n    }\n});\n\nexport const addSpace = (startX, startY, endX, endY) => ({\n    type: 'ADD_OBJECT',\n    newObject: {\n        id: uuid(),\n        type: DUNGEON_OBJECT_TYPE.SPACE,\n        position: {\n            x: startX,\n            y: startY\n        },\n        size: {\n            width: endX - startX,\n            height: endY - startY\n        }\n    }\n});\n\nexport const deleteSelectedObject = (selectedObject) => ({\n    type: 'DELETE_OBJECT',\n    selectedObject\n})\n\nexport const moveSelectedObject = (selectedObject, deltaX, deltaY) => ({\n    type: 'MOVE_SELECTED_OBJECT',\n    selectedObject,\n    deltaX: deltaX,\n    deltaY: deltaY\n})\n\nexport const setSelectedObjectTextureUrl = (selectedObject, texturePath) => ({\n    type: 'SET_SELECTED_OBJECT_TEXTURE_PATH',\n    selectedObject,\n    texturePath: texturePath\n})\n\nexport const setSelectedObjectLabel = (selectedObject, label) => ({\n    type: 'SET_SELECTED_OBJECT_LABEL',\n    selectedObject,\n    label: label\n})\n\nexport const setSelectedObjectPosition = (selectedObject, x, y) => ({\n    type: 'SET_SELECTED_OBJECT_POSITION',\n    selectedObject,\n    x: x,\n    y: y\n})\n\nexport const setSelectedObjectSize = (selectedObject, width, height) => ({\n    type: 'SET_SELECTED_OBJECT_SIZE',\n    selectedObject,\n    width: width,\n    height: height\n})\n\nexport const setSelectedObjectStart = (selectedObject, x, y) => ({\n    type: 'SET_SELECTED_OBJECT_START',\n    selectedObject,\n    x: x,\n    y: y\n})\n\nexport const setSelectedObjectEnd = (selectedObject, x, y) => ({\n    type: 'SET_SELECTED_OBJECT_END',\n    selectedObject,\n    x: x,\n    y: y\n})\n\nexport const setSelectedObjectAngle = (selectedObject, angle) => ({\n    type: 'SET_SELECTED_OBJECT_ANGLE',\n    selectedObject,\n    angle: angle\n})\n\nexport const setDungeonSize = (width, height) => ({\n    type: 'SET_DUNGEON_SIZE',\n    width: width,\n    height: height\n})\n","const square = (x) => x * x;\n\nexport const lineLength = (v, w) => Math.sqrt(square(v.x - w.x) + square(v.y - w.y));\n\nexport const getClosestPointOnLine = (p, a, b) => {\n    \n    var atob = { x: b.x - a.x, y: b.y - a.y };\n    var atop = { x: p.x - a.x, y: p.y - a.y };\n    var len = atob.x * atob.x + atob.y * atob.y;\n    var dot = atop.x * atob.x + atop.y * atob.y;\n    var t = Math.min( 1, Math.max( 0, dot / len ) );\n    return {\n        x: a.x + atob.x * t,\n        y: a.y + atob.y * t\n    };\n}","import { addDoor } from \"../reducers/dungeonActions\";\nimport { GRID_TILE_SIZE } from \"../utils/constants\";\nimport DUNGEON_OBJECT_TYPE from \"../utils/dungeonObjectTypes\";\nimport { lineLength, getClosestPointOnLine } from \"../utils/geometry\";\n\nexport default class AddDoorTool {\n    onMouseUp(store) {\n        let state = store.getState();\n        let mousePoint = state.editor.mouse.dungeonPosition;\n        let minDistance = 25;\n        let snapPoint = null;\n        let minWallId = null;\n        state.dungeon.objects\n            .filter(object => object.type === DUNGEON_OBJECT_TYPE.WALL)\n            .forEach(wall =>{\n                // try each point and get the shortest distance\n                let scaledStart = {\n                    x: wall.start.x * GRID_TILE_SIZE,\n                    y: wall.start.y * GRID_TILE_SIZE\n                };\n                let scaledEnd = {\n                    x: wall.end.x * GRID_TILE_SIZE,\n                    y: wall.end.y * GRID_TILE_SIZE\n                }\n                let closestPoint = getClosestPointOnLine({\n                        x: state.editor.mouseStartX,\n                        y: state.editor.mouseStartY\n                    }, scaledStart, scaledEnd);\n                // if the shortest distance of one is < snapping threshold, snap to it\n                let distance = lineLength(closestPoint, {\n                    x: state.editor.mouseStartX,\n                    y: state.editor.mouseStartY\n                });\n                if (!minDistance || distance < minDistance) {\n                    minDistance = distance;\n                    snapPoint = closestPoint;\n                    minWallId = wall.id;\n                }\n            });\n\n        let doorWall = state.dungeon.objects.find(wall => wall.id === minWallId);\n\n        if (!doorWall) {\n            return;\n        }\n\n        let scaledStart = {\n            x: doorWall.start.x * GRID_TILE_SIZE,\n            y: doorWall.start.y * GRID_TILE_SIZE\n        };\n        let scaledEnd = {\n            x: doorWall.end.x * GRID_TILE_SIZE,\n            y: doorWall.end.y * GRID_TILE_SIZE\n        }\n        let endPoint = getClosestPointOnLine(mousePoint, scaledStart, scaledEnd);\n        store.dispatch(addDoor(\n            snapPoint.x / GRID_TILE_SIZE,\n            snapPoint.y / GRID_TILE_SIZE,\n            endPoint.x / GRID_TILE_SIZE,\n            endPoint.y / GRID_TILE_SIZE));\n    }\n\n    renderTool(state, graphics) {\n        let mousePoint = state.editor.mouse.dungeonPosition;\n        if (!state.editor.mouseDown) {\n            // try to snap to the nearest line:\n            // for each line, get the nearest point on the line\n            let minDistance = 25;\n            let snapPoint = null;\n            state.dungeon.objects\n                .filter(object => object.type === DUNGEON_OBJECT_TYPE.WALL)\n                .forEach(wall => {\n                    // try each point and get the shortest distance\n                    let scaledStart = {\n                        x: wall.start.x * GRID_TILE_SIZE,\n                        y: wall.start.y * GRID_TILE_SIZE\n                    };\n                    let scaledEnd = {\n                        x: wall.end.x * GRID_TILE_SIZE,\n                        y: wall.end.y * GRID_TILE_SIZE\n                    }\n                    let closestPoint = getClosestPointOnLine(mousePoint, scaledStart, scaledEnd);\n                    // if the shortest distance of one is < snapping threshold, snap to it\n                    let distance = lineLength(closestPoint, mousePoint);\n                    if (!minDistance || distance < minDistance) {\n                        minDistance = distance;\n                        snapPoint = closestPoint;\n                    }\n                });\n            if (snapPoint) {\n                graphics.lineStyle();\n                graphics.beginFill(0xfffd00);\n                graphics.drawCircle(snapPoint.x, snapPoint.y, 2.5);\n                graphics.endFill();\n            }\n        }\n        else {\n            let minDistance = 25;\n            let snapPoint = null;\n            let minWallId = null;\n            state.dungeon.objects\n                .filter(object => object.type === DUNGEON_OBJECT_TYPE.WALL)\n                .forEach(wall => {\n                    // try each point and get the shortest distance\n                    let scaledStart = {\n                        x: wall.start.x * GRID_TILE_SIZE,\n                        y: wall.start.y * GRID_TILE_SIZE\n                    };\n                    let scaledEnd = {\n                        x: wall.end.x * GRID_TILE_SIZE,\n                        y: wall.end.y * GRID_TILE_SIZE\n                    }\n                    let closestPoint = getClosestPointOnLine({\n                            x: state.editor.mouseStartX,\n                            y: state.editor.mouseStartY\n                        }, scaledStart, scaledEnd);\n                    // if the shortest distance of one is < snapping threshold, snap to it\n                    let distance = lineLength(closestPoint, {\n                        x: state.editor.mouseStartX,\n                        y: state.editor.mouseStartY\n                    });\n                    if (!minDistance || distance < minDistance) {\n                        minDistance = distance;\n                        snapPoint = closestPoint;\n                        minWallId = wall.id;\n                    }\n                });\n            // draw a line from the start point\n            if (!snapPoint) {\n                return;\n            }\n\n            let startX = snapPoint.x;\n            let startY = snapPoint.y;\n\n            let doorWall = state.dungeon.objects.find(wall => wall.id === minWallId);\n            let scaledStart = {\n                x: doorWall.start.x * GRID_TILE_SIZE,\n                y: doorWall.start.y * GRID_TILE_SIZE\n            };\n            let scaledEnd = {\n                x: doorWall.end.x * GRID_TILE_SIZE,\n                y: doorWall.end.y * GRID_TILE_SIZE\n            }\n            let endPoint = getClosestPointOnLine(mousePoint, scaledStart, scaledEnd);\n\n            let endX = endPoint.x;\n            let endY = endPoint.y;\n\n            graphics.lineStyle(5, 0xfffd00);\n            graphics.moveTo(startX, startY);\n            graphics.lineTo(endX, endY);\n            graphics.lineStyle();\n            graphics.beginFill(0xfffd00);\n            graphics.drawCircle(startX, startY, 2.5);\n            graphics.drawCircle(endX, endY, 2.5);\n            graphics.endFill();\n        }\n    }\n}\n","export const GRID_TILE_SIZE = 70;","import { GRID_TILE_SIZE } from \"../utils/constants\";\nimport { addLabel } from \"../reducers/dungeonActions\";\n\nexport default class AddLabelTool {\n    onMouseUp(store) {\n        let state = store.getState();\n        let mousePoint = state.editor.mouse.dungeonPosition;\n        let dungeonSpaceX = mousePoint.x / GRID_TILE_SIZE;\n        let dungeonSpaceY = mousePoint.y / GRID_TILE_SIZE;\n        store.dispatch(addLabel(dungeonSpaceX, dungeonSpaceY, \"Text Label\"))\n    }\n\n    renderTool(state, graphics) {\n    }\n}\n","import { GRID_TILE_SIZE } from \"../utils/constants\";\nimport { addSpace } from \"../reducers/dungeonActions\";\n\nexport default class AddSpaceRectangleTool {\n\n    onMouseUp(store) {\n        let state = store.getState();\n        let mousePoint = state.editor.mouse.dungeonPosition;\n        let startX = Math.floor(Math.min(state.editor.mouseStartX, mousePoint.x) / GRID_TILE_SIZE);\n        let startY = Math.floor(Math.min(state.editor.mouseStartY, mousePoint.y) / GRID_TILE_SIZE);\n        let endX = Math.ceil(Math.max(state.editor.mouseStartX, mousePoint.x) / GRID_TILE_SIZE);\n        let endY = Math.ceil(Math.max(state.editor.mouseStartY, mousePoint.y) / GRID_TILE_SIZE);\n        store.dispatch(addSpace(startX, startY, endX, endY));\n    }\n\n    renderTool(state, graphics) {\n        let mousePoint = state.editor.mouse.dungeonPosition;\n        let snappedX, snappedY, width, height;\n        if (state.editor.mouseDown) {\n            let startX = Math.min(state.editor.mouseStartX, mousePoint.x);\n            let startY = Math.min(state.editor.mouseStartY, mousePoint.y);\n            let endX = Math.max(state.editor.mouseStartX, mousePoint.x);\n            let endY = Math.max(state.editor.mouseStartY, mousePoint.y);\n            snappedX = Math.floor(startX / GRID_TILE_SIZE) * GRID_TILE_SIZE;\n            snappedY = Math.floor(startY / GRID_TILE_SIZE) * GRID_TILE_SIZE;\n            endX = Math.floor(endX / GRID_TILE_SIZE) * GRID_TILE_SIZE + GRID_TILE_SIZE;\n            endY = Math.floor(endY / GRID_TILE_SIZE) * GRID_TILE_SIZE + GRID_TILE_SIZE;\n            width = endX - snappedX;\n            height = endY - snappedY;\n        }\n        else {\n            // snap to nearest grid point\n            // for now for simplicity let's say top left\n            snappedX = Math.floor(mousePoint.x / GRID_TILE_SIZE) * GRID_TILE_SIZE;\n            snappedY = Math.floor(mousePoint.y / GRID_TILE_SIZE) * GRID_TILE_SIZE;\n            width = GRID_TILE_SIZE;\n            height = GRID_TILE_SIZE;\n        }\n        // draw a hover rect\n        graphics.beginFill(0, 0);\n        graphics.lineStyle(1, 0xfffd00);\n        graphics.drawRect(snappedX, snappedY, width, height);\n        graphics.endFill();\n    }\n}\n","import { GRID_TILE_SIZE } from \"../utils/constants\";\nimport { addWall } from \"../reducers/dungeonActions\";\n\nexport default class AddWallTool {\n    onMouseUp(store) {\n        let state = store.getState();\n        let mousePoint = state.editor.mouse.dungeonPosition;\n        let startX = Math.round(state.editor.mouseStartX / GRID_TILE_SIZE);\n        let startY = Math.round(state.editor.mouseStartY / GRID_TILE_SIZE);\n        let endX = Math.round(mousePoint.x / GRID_TILE_SIZE);\n        let endY = Math.round(mousePoint.y / GRID_TILE_SIZE);\n        store.dispatch(addWall(startX, startY, endX, endY));\n    }\n\n    renderTool(state, graphics) {\n        let mousePoint = state.editor.mouse.dungeonPosition;\n        if (state.editor.mouseDown) {\n            let startX = Math.round(state.editor.mouseStartX / GRID_TILE_SIZE) * GRID_TILE_SIZE;\n            let startY = Math.round(state.editor.mouseStartY / GRID_TILE_SIZE) * GRID_TILE_SIZE;\n            let endX = Math.round(mousePoint.x / GRID_TILE_SIZE) * GRID_TILE_SIZE;\n            let endY = Math.round(mousePoint.y / GRID_TILE_SIZE) * GRID_TILE_SIZE;\n            graphics.lineStyle(5, 0xfffd00);\n            graphics.moveTo(startX, startY);\n            graphics.lineTo(endX, endY);\n            graphics.lineStyle();\n            graphics.beginFill(0xfffd00);\n            graphics.drawCircle(startX, startY, 2.5);\n            graphics.drawCircle(endX, endY, 2.5);\n            graphics.endFill();\n        }\n        else {\n            // get nearest center point\n            let hoverX = Math.round(mousePoint.x / GRID_TILE_SIZE) * GRID_TILE_SIZE;\n            let hoverY = Math.round(mousePoint.y / GRID_TILE_SIZE) * GRID_TILE_SIZE;\n\n            graphics.lineStyle();\n            graphics.beginFill(0xfffd00);\n            graphics.drawCircle(hoverX, hoverY, 2.5);\n            graphics.endFill();\n        }\n    }\n}\n","export default class SelectTool {\n    onMouseUp(mousePoint, store) {\n        // Selecting is handled via interaction events on the render objects themselves\n    }\n    renderTool(state, graphics) {\n        // No need to render differently when selecting\n    }\n}\n","import { GRID_TILE_SIZE } from \"../utils/constants\";\nimport { addSpacePolygon } from \"../reducers/dungeonActions\";\nimport { addOngoingSpacePolygonPoint, clearOngoingSpacePolygonPoint } from '../reducers/editorActions'\n\nexport default class AddSpacePolygonTool {\n\n    onMouseUp(store) {\n        let state = store.getState();\n        let mousePoint = state.editor.mouse.dungeonPosition;\n        let x = Math.round(mousePoint.x / GRID_TILE_SIZE);\n        let y = Math.round(mousePoint.y / GRID_TILE_SIZE);\n\n        let firstPoint = state.editor.ongoingSpacePolygon?.[0];\n        if (firstPoint && firstPoint.x === x && firstPoint.y === y ) {\n            // close it out\n            let pointArray = state.editor.ongoingSpacePolygon;\n            store.dispatch(clearOngoingSpacePolygonPoint());\n            store.dispatch(addSpacePolygon(pointArray));\n        }\n        else {\n            store.dispatch(addOngoingSpacePolygonPoint(x, y));\n        }\n    }\n\n    renderTool(state, graphics) {\n        // if there's no ongoing polygon, just snap to a corner\n        let mousePoint = state.editor.mouse.dungeonPosition;\n        // get nearest center point\n        let hoverX = Math.round(mousePoint.x / GRID_TILE_SIZE) * GRID_TILE_SIZE;\n        let hoverY = Math.round(mousePoint.y / GRID_TILE_SIZE) * GRID_TILE_SIZE;\n\n        if (!state.editor.ongoingSpacePolygon) {\n            graphics.lineStyle();\n            graphics.beginFill(0xfffd00);\n            graphics.drawCircle(hoverX, hoverY, 2.5);\n            graphics.endFill();\n        }\n        else {\n            graphics.lineStyle(2, 0xfffd00);\n            let firstPoint = state.editor.ongoingSpacePolygon[0];\n            graphics.moveTo(\n                firstPoint.x * GRID_TILE_SIZE,\n                firstPoint.y * GRID_TILE_SIZE);\n            for (let index = 1; index < state.editor.ongoingSpacePolygon.length; index++) {\n                const point = state.editor.ongoingSpacePolygon[index];\n                graphics.lineTo(point.x * GRID_TILE_SIZE, point.y * GRID_TILE_SIZE);\n            }\n            graphics.lineTo(hoverX, hoverY);\n            // then draw to where mouse is hovering over\n            graphics.lineStyle();\n        }\n    }\n}\n","import { GRID_TILE_SIZE } from '../utils/constants';\nimport { addToken } from '../reducers/dungeonActions';\n\nexport default class AddTokenTool {\n    // TODO: Make this configurable based on the currently selected token or something along those lines\n    tokenTextureUrl = '/assets/stairs.png';\n    height = 2;\n    width = 1;\n\n    onMouseUp(store) {\n        let state = store.getState();\n        let mousePoint = state.editor.mouse.dungeonPosition;\n        let snappedX, snappedY;\n\n        // snap to nearest grid point\n        // for now for simplicity let's say top left\n        snappedX = Math.floor(mousePoint.x / GRID_TILE_SIZE);\n        snappedY = Math.floor(mousePoint.y / GRID_TILE_SIZE);\n\n        store.dispatch(addToken(\n            this.tokenTextureUrl,\n            snappedX,\n            snappedY,\n            this.width,\n            this.height,\n            0\n        ))\n    }\n\n    renderTool(state, graphics) {\n        // preview the sprite in the current location\n        let mousePoint = state.editor.mouse.dungeonPosition;\n        let snappedX, snappedY;\n\n        // snap to nearest grid point\n        // for now for simplicity let's say top left\n        snappedX = Math.floor(mousePoint.x / GRID_TILE_SIZE) * GRID_TILE_SIZE;\n        snappedY = Math.floor(mousePoint.y / GRID_TILE_SIZE) * GRID_TILE_SIZE;\n\n        // draw a hover rect\n        graphics.beginFill(0, 0);\n        graphics.lineStyle(1, 0xfffd00);\n        graphics.drawRect(snappedX, snappedY, this.width * GRID_TILE_SIZE, this.height * GRID_TILE_SIZE);\n        graphics.endFill();\n    }\n}\n","import AddDoorTool from \"./AddDoorTool\";\nimport AddLabelTool from \"./AddLabelTool\";\nimport AddSpaceRectangleTool from \"./AddSpaceRectangleTool\";\nimport AddWallTool from \"./AddWallTool\";\nimport SelectTool from \"./SelectTool\";\nimport TOOL_TYPE from \"./toolType\";\nimport AddSpacePolygonTool from \"./AddSpacePolygonTool\";\nimport AddTokenTool from \"./AddTokenTool\";\n\nconst toolMap = {\n    [TOOL_TYPE.NEW_DOOR]: new AddDoorTool(),\n    [TOOL_TYPE.NEW_SPACE_RECTANGLE]: new AddSpaceRectangleTool(),\n    [TOOL_TYPE.NEW_SPACE_POLYGON]: new AddSpacePolygonTool(),\n    [TOOL_TYPE.NEW_WALL]: new AddWallTool(),\n    [TOOL_TYPE.SELECT]: new SelectTool(),\n    [TOOL_TYPE.NEW_LABEL]: new AddLabelTool(),\n    [TOOL_TYPE.NEW_TOKEN]: new AddTokenTool()\n}\n\nexport const onMouseUp = (store) => {\n    let state = store.getState();\n    toolMap[state.editor.selectedTool].onMouseUp(store);\n}\n\nexport const renderTool = (state, graphics) => {\n    toolMap[state.editor.selectedTool].renderTool(state, graphics);\n}\n","import * as PIXI from 'pixi.js'\n\nexport default class GraphicsRenderer {\n    createRenderObject() {\n        return new PIXI.Graphics();\n    }\n}\n","import * as PIXI from 'pixi.js';\nimport { GRID_TILE_SIZE } from \"../utils/constants\";\nimport GraphicsRenderer from './GraphicsRenderer';\n\nexport default class DoorRenderer extends GraphicsRenderer {\n    renderObject(graphics, door, objectIsSelected) {\n        graphics.zIndex = 3;\n        graphics.clear();\n        graphics.beginFill(0x002b56, 1);\n        graphics.lineStyle(20, 0x002b56, 1, 0.5);\n        graphics.moveTo(door.start.x * GRID_TILE_SIZE, door.start.y * GRID_TILE_SIZE);\n        graphics.lineTo(door.end.x * GRID_TILE_SIZE, door.end.y * GRID_TILE_SIZE);\n        graphics.lineStyle();\n        let half = 20 / 2;\n        graphics.endFill();\n\n        if (objectIsSelected) {\n            graphics.tint = 0xffff33;\n        }\n        else {\n            graphics.tint = 0xffffff;\n        }\n        graphics.hitArea = new PIXI.Polygon([\n            door.start.x * GRID_TILE_SIZE - half, door.start.y * GRID_TILE_SIZE - half,\n            door.start.x * GRID_TILE_SIZE + half, door.start.y * GRID_TILE_SIZE + half,\n            door.end.x * GRID_TILE_SIZE + half, door.end.y * GRID_TILE_SIZE + half,\n            door.end.x * GRID_TILE_SIZE - half, door.end.y * GRID_TILE_SIZE - half,\n        ]);\n    }\n}\n","import * as PIXI from 'pixi.js';\nimport { GRID_TILE_SIZE } from '../utils/constants';\nimport GraphicsRenderer from './GraphicsRenderer';\n\nexport default class LabelRenderer extends GraphicsRenderer {\n    renderObject(graphics, label, objectIsSelected) {\n        graphics.zIndex = 4;\n        graphics.clear();\n        if (graphics.children.length === 0) {\n            let labelText = new PIXI.Text(label.label);\n            labelText.style.fontFamily = 'Serif';\n            labelText.style.fontSize = 36;\n            graphics.addChild(labelText);\n        }\n\n        let labelText = graphics.children[0];\n\n        if (objectIsSelected) {\n            labelText.style.fill = 0xffff33;\n        }\n        else {\n            labelText.style.fill = 0x000000;\n        }\n\n        labelText.text = label.label;\n        labelText.position.set(\n            label.position.x * GRID_TILE_SIZE,\n            label.position.y * GRID_TILE_SIZE);\n    }\n}\n","import * as PIXI from 'pixi.js';\nimport { GRID_TILE_SIZE } from \"../utils/constants\";\nimport GraphicsRenderer from './GraphicsRenderer';\n\nexport default class WallRenderer extends GraphicsRenderer {\n    renderObject(graphics, wall, objectIsSelected) {\n        graphics.zIndex = 2;\n        graphics.clear();\n        graphics.beginFill(0x0266e6, 1);\n        graphics.lineStyle(10, 0x0266e6, 1, 0.5);\n        graphics.moveTo(wall.start.x * GRID_TILE_SIZE, wall.start.y * GRID_TILE_SIZE);\n        graphics.lineTo(wall.end.x * GRID_TILE_SIZE, wall.end.y * GRID_TILE_SIZE);\n        graphics.lineStyle();\n        graphics.drawCircle(wall.start.x * GRID_TILE_SIZE, wall.start.y * GRID_TILE_SIZE, 5);\n        graphics.drawCircle(wall.end.x * GRID_TILE_SIZE, wall.end.y * GRID_TILE_SIZE, 5);\n        let half = 10 / 2;\n        graphics.endFill();\n\n        if (objectIsSelected) {\n            graphics.tint = 0xffff33;\n        }\n        else {\n            graphics.tint = 0xffffff;\n        }\n        graphics.hitArea = this.createWallHitArea(wall, half);\n    }\n\n    createWallHitArea(wall, half) {\n        if (wall.start.x === wall.end.x && wall.start.y === wall.end.y) {\n            return new PIXI.Circle(\n                wall.start.x * GRID_TILE_SIZE,\n                wall.start.y * GRID_TILE_SIZE,\n                half);\n        }\n        else {\n            let startPoint = wall.start.x <= wall.end.x ? wall.start : wall.end;\n            let endPoint = wall.start.x > wall.end.x ? wall.start : wall.end;\n\n            let rise = endPoint.y - startPoint.y;\n            let run = endPoint.x - startPoint.x;\n            let slope = rise / run;\n            let inverseSlope = -1 / slope;\n\n            if (slope === 0 || inverseSlope === 0) {\n                return new PIXI.Rectangle(\n                    startPoint.x * GRID_TILE_SIZE - half,\n                    Math.min(startPoint.y, endPoint.y) * GRID_TILE_SIZE - half,\n                    run * GRID_TILE_SIZE + half * 2,\n                    Math.abs(rise) * GRID_TILE_SIZE + half * 2\n                )\n            }\n\n            let { xOffset, yOffset} = this.getOffsetAlongSlope(slope, half);\n            let { xOffset: polygonXOffset, yOffset: polygonYOffset } = this.getOffsetAlongSlope(inverseSlope, half);\n\n            return new PIXI.Polygon([\n                startPoint.x * GRID_TILE_SIZE - xOffset - polygonXOffset, startPoint.y * GRID_TILE_SIZE - yOffset - polygonYOffset,\n                startPoint.x * GRID_TILE_SIZE - xOffset + polygonXOffset, startPoint.y * GRID_TILE_SIZE - yOffset + polygonYOffset,\n                endPoint.x   * GRID_TILE_SIZE + xOffset + polygonXOffset, endPoint.y   * GRID_TILE_SIZE + yOffset + polygonYOffset,\n                endPoint.x   * GRID_TILE_SIZE + xOffset - polygonXOffset, endPoint.y   * GRID_TILE_SIZE + yOffset - polygonYOffset,\n            ]);\n        }\n    }\n\n    getOffsetAlongSlope(slope, distanceTravelledAlongSlope) {\n        let slopeAngle = Math.atan(slope);\n        let xOffset = Math.cos(slopeAngle) * distanceTravelledAlongSlope;\n        let yOffset = Math.sin(slopeAngle) * distanceTravelledAlongSlope;\n        return {\n            xOffset: xOffset,\n            yOffset: yOffset\n        };\n    }\n}\n","import { GRID_TILE_SIZE } from \"../utils/constants\";\nimport GraphicsRenderer from './GraphicsRenderer';\n\nexport default class SpaceRenderer extends GraphicsRenderer {\n    renderObject(graphics, space, objectIsSelected) {\n        graphics.clear();\n        graphics.beginFill(0xd6d5d5);\n        if (space.position && space.size) {\n            graphics.drawRect(\n                space.position.x * GRID_TILE_SIZE,\n                space.position.y * GRID_TILE_SIZE,\n                space.size.width * GRID_TILE_SIZE,\n                space.size.height * GRID_TILE_SIZE);\n            graphics.endFill();\n        }\n        else {\n            let firstPoint = space.points[0];\n            graphics.moveTo(firstPoint.x * GRID_TILE_SIZE, firstPoint.y * GRID_TILE_SIZE);\n            for (let index = 0; index < space.points.length; index++) {\n                const point = space.points[index];\n                graphics.lineTo(point.x * GRID_TILE_SIZE, point.y * GRID_TILE_SIZE);\n            }\n            graphics.endFill();\n        }\n\n        if (objectIsSelected) {\n            graphics.tint = 0xffffcc;\n        }\n        else {\n            graphics.tint = 0xffffff;\n        }\n    }\n}\n","import * as PIXI from 'pixi.js'\nimport { GRID_TILE_SIZE } from '../utils/constants';\n\nexport default class TokenRenderer {\n    createRenderObject() {\n        return new PIXI.Sprite();\n    }\n\n    renderObject(sprite, token, objectIsSelected) {\n        sprite.zIndex = 4;\n        sprite.texture = PIXI.Texture.from(process.env.PUBLIC_URL + token.textureUrl);\n        sprite.x = token.position.x * GRID_TILE_SIZE;\n        sprite.y = token.position.y * GRID_TILE_SIZE;\n        sprite.width = token.size.width * GRID_TILE_SIZE;\n        sprite.height = token.size.height * GRID_TILE_SIZE;\n        sprite.angle = token.angle;\n\n        if (objectIsSelected) {\n            let objectSelectionGraphics;\n            if (sprite.children.length === 0) {\n                objectSelectionGraphics = new PIXI.Graphics();\n                sprite.addChild(objectSelectionGraphics);\n            } else {\n                objectSelectionGraphics = sprite.getChildAt(0);\n            }\n            objectSelectionGraphics.clear();\n            objectSelectionGraphics.lineStyle(5, 0xfffd00);\n            objectSelectionGraphics.drawShape(sprite.getLocalBounds());\n        }\n        else {\n            if (sprite.children.length > 0) {\n                sprite.removeChildAt(0);\n            }\n        }\n    }\n}\n","import DUNGEON_OBJECT_TYPE from \"../utils/dungeonObjectTypes\";\nimport DoorRenderer from \"./DoorRenderer\";\nimport LabelRenderer from \"./LabelRenderer\";\nimport WallRenderer from \"./WallRenderer\";\nimport SpaceRenderer from \"./SpaceRenderer\";\nimport TokenRenderer from \"./TokenRenderer\";\n\nconst rendererMap = {\n    [DUNGEON_OBJECT_TYPE.DOOR]: new DoorRenderer(),\n    [DUNGEON_OBJECT_TYPE.LABEL]: new LabelRenderer(),\n    [DUNGEON_OBJECT_TYPE.WALL]: new WallRenderer(),\n    [DUNGEON_OBJECT_TYPE.SPACE]: new SpaceRenderer(),\n    [DUNGEON_OBJECT_TYPE.TOKEN]: new TokenRenderer()\n}\n\nexport const renderObject = (graphics, dungeonObject, objectIsSelected) => {\n    rendererMap[dungeonObject.type].renderObject(graphics, dungeonObject, objectIsSelected);\n}\n\nexport const createRenderObject = (dungeonObject) =>\n    rendererMap[dungeonObject.type].createRenderObject()\n","import { selectObject, setMouseDungeonPosition } from \"../reducers/editorActions\";\nimport store from '../store.js';\nimport { GRID_TILE_SIZE } from '../utils/constants';\nimport * as ToolRouter from '../tools/ToolRouter';\nimport * as RenderRouter from './RenderRouter'\nimport TOOL_TYPE from \"../tools/toolType\";\n\nexport const render = (app, graphics) => {\n    var state = store.getState();\n\n    app.stage.position.set(state.editor.position.x, state.editor.position.y);\n    if (app.stage.scale.x !== state.editor.scale) {\n        app.stage.scale.set(state.editor.scale);\n    }\n\n    graphics.clear();\n\n    drawDungeonObjects(app.stage, state);\n    drawGrid(graphics, state.dungeon.size.width, state.dungeon.size.height);\n\n    if (app.renderer.plugins.interaction.mouseOverRenderer) {\n        ToolRouter.renderTool(state, graphics);\n\n        let mousePosition = app.renderer.plugins.interaction.mouse.getLocalPosition(app.stage);\n        store.dispatch(setMouseDungeonPosition(mousePosition.x, mousePosition.y));\n    }\n    else {\n        store.dispatch(setMouseDungeonPosition(null, null));\n    }\n}\nexport default render;\n\nconst drawDungeonObjects = (container, state) => {\n    let objectIdMap = state.dungeon.objects.reduce((map, object) => {\n        map[object.id] = object;\n        return map;\n    }, {});\n\n    let containerObjectIds = new Set(container.children.map(child => child.id));\n    let stateObjectIds = Object.keys(objectIdMap);\n    stateObjectIds.forEach(objectId => {\n        if (!containerObjectIds.has(objectId)) {\n            let newChildGraphics = RenderRouter.createRenderObject(objectIdMap[objectId]);\n            newChildGraphics.id = objectId;\n            newChildGraphics.interactive = true;\n            newChildGraphics.mouseup = function () {\n                if (store.getState().editor.selectedTool === TOOL_TYPE.SELECT) {\n                    store.dispatch(selectObject(this.id));\n                }\n            };\n            container.addChild(newChildGraphics);\n        }\n    });\n\n    // Sync all child graphics with state\n    container.children.forEach(graphics => {\n        if (graphics.id) {\n            let object = objectIdMap[graphics.id];\n            if (object) {\n                RenderRouter.renderObject(graphics, object, state.editor.selectedObject === graphics.id)\n            }\n            else {\n                container.removeChild(graphics);\n            }\n        }\n    });\n}\n\nconst drawGrid = (graphics, gridWidth, gridHeight) => {\n    graphics.lineStyle(1, 0x444444, 1, 0.5);\n    for (let i = 0; i < gridWidth; i++) {\n        graphics.moveTo(i * GRID_TILE_SIZE, 0);\n        graphics.lineTo(i * GRID_TILE_SIZE, (gridHeight - 1) * GRID_TILE_SIZE);\n    }\n    for (let j = 0; j < gridHeight; j++) {\n        graphics.moveTo(0, j * GRID_TILE_SIZE);\n        graphics.lineTo((gridWidth - 1) * GRID_TILE_SIZE, j * GRID_TILE_SIZE);\n    }\n}\n","import { deleteSelectedObject, moveSelectedObject } from \"../reducers/dungeonActions\"\n\nconst handleKeyboardEvent = (keyboardEvent, store) => {\n    let state = store.getState();\n    switch (keyboardEvent.key) {\n        case 'Delete':\n            return store.dispatch(deleteSelectedObject(state.editor.selectedObject));\n        case 'ArrowLeft':\n            return store.dispatch(moveSelectedObject(state.editor.selectedObject, -1, 0));\n        case 'ArrowRight':\n            return store.dispatch(moveSelectedObject(state.editor.selectedObject, 1, 0));\n        case 'ArrowDown':\n            return store.dispatch(moveSelectedObject(state.editor.selectedObject, 0, 1));\n        case 'ArrowUp':\n            return store.dispatch(moveSelectedObject(state.editor.selectedObject, 0, -1));\n        default:\n            return;\n    }\n}\n\nexport default handleKeyboardEvent\n","import { moveViewport, scroll } from \"../reducers/editorActions\";\nimport * as ToolRouter from '../tools/ToolRouter';\n\nexport const handleMouseDown = (mouseEvent, store) => {\n    if (mouseEvent.buttons === 1) {\n        store.dispatch({ type: 'MOUSE_DOWN' });\n    }\n}\n\nexport const handleMouseUp = (mouseEvent, store) => {\n    let state = store.getState();\n    if (state.editor.mouseDown) {\n        store.dispatch({ type: 'MOUSE_UP' });\n        ToolRouter.onMouseUp(store);\n    }\n}\n\nexport const handleMouseMove = (mouseEvent, store) => {\n    if (mouseEvent.buttons === 2) {\n        store.dispatch(moveViewport(mouseEvent.movementX, mouseEvent.movementY));\n    }\n}\n\nexport const handleWheelEvent = (wheelEvent, store) => {\n    store.dispatch(scroll(wheelEvent));\n}\n","import * as PIXI from 'pixi.js';\nimport React from 'react';\nimport { render as renderDungeon } from '../rendering/DungeonRenderer';\nimport store from '../store.js';\nimport handleKeyboardEvent from '../utils/keyboardEventHandlers.js';\nimport * as MouseEventHandler from '../utils/mouseEventHandlers.js';\n\nexport default class DungeonEditor extends React.Component {\n    render() {\n        return <div\n            style={{ height: \"85vh\" }}\n            tabIndex={-1}\n            ref={(element) => this.canvasDiv = element}>\n        </div>\n    }\n\n    componentDidMount() {\n        const app = new PIXI.Application({\n            backgroundColor: 0x5f5f5f,\n            sharedLoader: true,\n            sharedTicker: true,\n            antialias: true\n        });\n        this.app = app;\n        this.canvasDiv.appendChild(app.view);\n        this.app.resizeTo = this.canvasDiv;\n        this.app.resize();\n\n        let graphics = new PIXI.Graphics();\n        graphics.zIndex = Number.MAX_SAFE_INTEGER;\n        app.stage.sortableChildren = true;\n        app.stage.addChild(graphics);\n\n        this.setupInteractions()\n\n        app.ticker.add(() => {\n            renderDungeon(app, graphics);\n        });\n    }\n\n    setupInteractions() {\n        this.canvasDiv.addEventListener(\"wheel\", (wheelEvent) => {\n            MouseEventHandler.handleWheelEvent(wheelEvent, store);\n            wheelEvent.preventDefault();\n        });\n        this.canvasDiv.addEventListener('contextmenu', (event) => {\n            event.preventDefault();\n        });\n        this.canvasDiv.addEventListener('pointerdown', (event) => {\n            MouseEventHandler.handleMouseDown(event, store);\n        });\n        this.canvasDiv.addEventListener('pointerup', (event) => {\n            MouseEventHandler.handleMouseUp(event, store);\n        });\n        this.canvasDiv.addEventListener('pointermove', (pointerEvent) => {\n            MouseEventHandler.handleMouseMove(pointerEvent, store);\n        });\n        this.canvasDiv.addEventListener('keydown', (event) => {\n            handleKeyboardEvent(event, store);\n        });\n    }\n}\n","import React from 'react'\n\nconst StateEditorCard = ({title, children}) =>\n    <div className=\"card bg-dark text-light border-secondary mb-3\">\n        <div className=\"card-header border-secondary\">\n            <h5>{title}</h5>\n        </div>\n        <div className=\"card-body\">\n            <div className=\"form-group\">\n                {children}\n            </div>\n        </div>\n    </div>\n\nexport default StateEditorCard\n","import React from 'react'\nimport StateEditorCard from './StateEditorCard'\n\nconst PositionEditor = ({ title, x, y, onUpdate }) =>\n    <StateEditorCard title={title ?? 'Position'}>\n        <label>\n            X:\n            <input\n                className=\"form-control bg-secondary text-light\"\n                type=\"number\"\n                value={x}\n                onChange={(changeEvent) => onUpdate(\n                    parseInt(changeEvent.target.value),\n                    y\n                )}>\n            </input>\n        </label>\n        <label>\n            Y:\n            <input\n                className=\"form-control bg-secondary text-light\"\n                type=\"number\"\n                value={y}\n                onChange={(changeEvent) => onUpdate(\n                    x,\n                    parseInt(changeEvent.target.value)\n                )}>\n            </input>\n        </label>\n    </StateEditorCard>\n\nexport default PositionEditor","import React from 'react'\nimport StateEditorCard from './StateEditorCard'\n\nconst SizeEditor = ({ title, width, height, onUpdate }) =>\n    <StateEditorCard title={title ?? 'Size'}>\n        <label>\n            Width:\n            <input\n                className=\"form-control bg-secondary text-light\"\n                type=\"number\"\n                value={width}\n                onChange={(changeEvent) => onUpdate(\n                    parseInt(changeEvent.target.value),\n                    height\n                )}>\n            </input>\n        </label>\n        <label>\n            Height:\n            <input\n                className=\"form-control bg-secondary text-light\"\n                type=\"number\"\n                value={height}\n                onChange={(changeEvent) => onUpdate(\n                    width,\n                    parseInt(changeEvent.target.value)\n                )}>\n            </input>\n        </label>\n    </StateEditorCard>\n\nexport default SizeEditor","import React from \"react\"\nimport { connect } from 'react-redux'\nimport * as DungeonActions from '../reducers/dungeonActions'\nimport * as EditorActions from '../reducers/editorActions'\nimport PositionEditor from \"./PositionEditor\"\nimport SizeEditor from \"./SizeEditor\"\nimport StateEditorCard from \"./StateEditorCard\"\n\nlet StateEditor = ({ dispatch, selectedObjectId, selectedObject, dungeonSize, scrollPansViewport }) => {\n    if (selectedObjectId) {\n        return <React.Fragment>\n            {selectedObject.label !== undefined &&\n                <StateEditorCard title='Label'>\n                    <label>\n                        Label:\n                        <input\n                            className=\"form-control bg-secondary text-light\"\n                            type=\"text\"\n                            value={selectedObject.label}\n                            onChange={(changeEvent) => dispatch(DungeonActions.setSelectedObjectLabel(selectedObjectId, changeEvent.target.value))}>\n                        </input>\n                    </label>\n                </StateEditorCard>}\n            {selectedObject.textureUrl !== undefined &&\n                <StateEditorCard title=\"Texture Path\">\n                    <label>\n                        Path:\n                        <input\n                            className=\"form-control bg-secondary text-light\"\n                            value={selectedObject.textureUrl}\n                            onChange={(changeEvent) => {dispatch(DungeonActions.setSelectedObjectTextureUrl(selectedObjectId, changeEvent.target.value))}}></input>\n                    </label>\n                </StateEditorCard>\n            }\n            {selectedObject.position &&\n                <PositionEditor\n                    x={selectedObject.position.x}\n                    y={selectedObject.position.y}\n                    onUpdate={(x, y) => dispatch(DungeonActions.setSelectedObjectPosition(selectedObjectId, x, y))} />\n            }\n            {selectedObject.size &&\n                <SizeEditor\n                    width={selectedObject.size.width}\n                    height={selectedObject.size.height}\n                    onUpdate={(width, height) => dispatch(DungeonActions.setSelectedObjectSize(selectedObjectId, width, height))} />\n            }\n            {selectedObject.start &&\n                <PositionEditor\n                    title=\"Start\"\n                    x={selectedObject.start.x}\n                    y={selectedObject.start.y}\n                    onUpdate={(x,y) => dispatch(DungeonActions.setSelectedObjectStart(selectedObjectId, x, y))} />\n            }\n            {selectedObject.end &&\n                <PositionEditor\n                    title=\"End\"\n                    x={selectedObject.end.x}\n                    y={selectedObject.end.y}\n                    onUpdate={(x,y) => dispatch(DungeonActions.setSelectedObjectEnd(selectedObjectId, x, y))} />\n            }\n            {selectedObject.angle !== undefined &&\n                <StateEditorCard title=\"Angle\">\n                    <label>\n                        Angle:\n                        <input\n                            className=\"form-control bg-secondary text-light\"\n                            type=\"number\"\n                            step=\"45\"\n                            min=\"-360\"\n                            max=\"360\"\n                            value={selectedObject.angle}\n                            onChange={(changeEvent) => {dispatch(DungeonActions.setSelectedObjectAngle(selectedObjectId, changeEvent.target.value))}}></input>\n                        <input\n                            className=\"form-control bg-secondary text-light\"\n                            type=\"range\"\n                            step=\"45\"\n                            min=\"-360\"\n                            max=\"360\"\n                            style={{direction: \"rtl\"}}\n                            value={selectedObject.angle}\n                            onChange={(changeEvent) => {dispatch(DungeonActions.setSelectedObjectAngle(selectedObjectId, changeEvent.target.value))}}></input>\n                    </label>\n                </StateEditorCard>\n            }\n            {selectedObjectId &&\n                <StateEditorCard title=\"Actions\">\n                    <button\n                        className=\"btn btn-outline-danger\"\n                        onClick={() => dispatch(DungeonActions.deleteSelectedObject(selectedObjectId))}>\n                            Delete Object\n                    </button>\n                </StateEditorCard>\n            }\n        </React.Fragment>\n    }\n    else {\n        return <React.Fragment>\n            <StateEditorCard title=\"Instructions\">\n                <p><i>Right click</i> to pan the view.</p>\n                <p><i>Scroll</i> to zoom in and out.</p>\n                <p><i>Left click and drag</i> to create new spaces with the New Space tool.</p>\n                <p><i>Left click</i> to select spaces with the Select tool.</p>\n                <p><i>Arrow keys</i> will move the currently selected space.</p>\n                <p><i>Delete</i> will delete the currently selected space.</p>\n            </StateEditorCard>\n            <SizeEditor\n                title=\"Dungeon Size\"\n                width={dungeonSize.width}\n                height={dungeonSize.height}\n                onUpdate={(width, height) => dispatch(DungeonActions.setDungeonSize(width, height))} />\n            <StateEditorCard title=\"Editor Options\">\n                <label>\n                    <input type='checkbox' value={scrollPansViewport} onChange={(event) => dispatch(EditorActions.setScrollMovesViewport(event.target.checked))}></input>\n                    Scroll to pan\n                </label>\n            </StateEditorCard>\n        </React.Fragment>\n    }\n}\n\nconst mapStateToProps = state => ({\n    selectedObjectId: state.editor.selectedObject,\n    selectedObject: state.dungeon.objects.find(object => object.id === state.editor.selectedObject),\n    dungeonSize: state.dungeon.size,\n    scrollMovesViewport: state.editor.scrollMovesViewport\n})\n\nStateEditor = connect(mapStateToProps)(StateEditor)\n\nexport default StateEditor\n","import React from \"react\"\n\nconst ToolbarButton = ({toolName, toolId, selectedTool, onClick}) =>\n    <button\n        className={\"btn btn-secondary\" +\n            (selectedTool === toolId ? ' active' : '')}\n        onClick={() => onClick(toolId)}>\n            {toolName}\n    </button>\n\nexport default ToolbarButton;","import React from \"react\"\nimport { connect } from 'react-redux'\nimport { selectTool } from '../reducers/editorActions'\nimport ToolbarButton from \"./ToolbarButton\"\nimport TOOL_TYPE from \"../tools/toolType\"\n\nlet Toolbar = ({ dispatch, selectedTool }) => {\n    const dispatchSelectedTool = (toolId) => dispatch(selectTool(toolId))\n\n    return (\n        <div className=\"btn-group\" role=\"group\">\n            <ToolbarButton\n                toolName='Select'\n                toolId={TOOL_TYPE.SELECT}\n                selectedTool={selectedTool}\n                onClick={dispatchSelectedTool} />\n            <ToolbarButton\n                toolName='New Rectangular Space'\n                toolId={TOOL_TYPE.NEW_SPACE_RECTANGLE}\n                selectedTool={selectedTool}\n                onClick={dispatchSelectedTool} />\n            <ToolbarButton\n                toolName='New Polygonal Space'\n                toolId={TOOL_TYPE.NEW_SPACE_POLYGON}\n                selectedTool={selectedTool}\n                onClick={dispatchSelectedTool} />\n            <ToolbarButton\n                toolName='New Wall'\n                toolId={TOOL_TYPE.NEW_WALL}\n                selectedTool={selectedTool}\n                onClick={dispatchSelectedTool} />\n            <ToolbarButton\n                toolName='New Door'\n                toolId={TOOL_TYPE.NEW_DOOR}\n                selectedTool={selectedTool}\n                onClick={dispatchSelectedTool} />\n            <ToolbarButton\n                toolName='New Label'\n                toolId={TOOL_TYPE.NEW_LABEL}\n                selectedTool={selectedTool}\n                onClick={dispatchSelectedTool} />\n            <ToolbarButton\n                toolName='New Token'\n                toolId={TOOL_TYPE.NEW_TOKEN}\n                selectedTool={selectedTool}\n                onClick={dispatchSelectedTool} />\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    selectedTool: state.editor.selectedTool\n})\n\nToolbar = connect(mapStateToProps)(Toolbar)\n\nexport default Toolbar\n","import React from 'react';\nimport DungeonEditor from \"./components/DungeonEditor.js\";\nimport StateEditor from './components/StateEditor';\nimport Toolbar from './components/Toolbar';\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <nav className=\"navbar navbar-dark bg-secondary\">\n        <span className=\"navbar-brand\">\n          Pungeon\n        </span>\n      </nav>\n      <div className=\"px-5\">\n        <div className=\"py-2\">\n          <Toolbar />\n        </div>\n        <div className=\"row\">\n          <div className=\"col-md-9\">\n            <DungeonEditor />\n          </div>\n          <div className=\"col-md-3\">\n            <StateEditor />\n          </div>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app/App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './app/store.js'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}