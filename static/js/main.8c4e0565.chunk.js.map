{"version":3,"sources":["app/utils/createArrayWithUpdatedObject.js","app/tools/toolType.js","app/utils/dungeonObjectTypes.js","app/reducers/dungeonReducer.js","app/store.js","app/utils/geometry.js","app/tools/AddDoorTool.js","app/utils/constants.js","app/tools/AddWallTool.js","app/tools/AddSpaceTool.js","app/tools/SelectTool.js","app/tools/ToolRouter.js","app/rendering/DungeonRenderer.js","app/utils/keyboardEventHandlers.js","app/utils/mouseEventHandlers.js","app/components/DungeonEditor.js","app/components/PositionEditor.js","app/components/SizeEditor.js","app/components/StateEditor.js","app/components/ToolbarButton.js","app/components/Toolbar.js","app/App.js","serviceWorker.js","index.js"],"names":["createArrayWithUpdatedObject","array","id","update","map","object","objectCopy","TOOL_TYPE","SELECT","NEW_WALL","NEW_SPACE","NEW_DOOR","DUNGEON_OBJECT_TYPE","SPACE","WALL","DOOR","moveSelectedObject","deltaX","deltaY","type","setMouseDungeonPosition","x","y","dungeonReducer","state","action","editor","position","mouse","dungeonPosition","scrollMovesViewport","holdingCtrl","scaleDelta","scrollY","newScale","Math","min","max","scale","scrollX","mouseDown","mouseStartX","mouseStartY","dungeon","size","width","height","arrayWithUpdatedObject","objects","selectedObject","start","end","objectArray","slice","newObject","selectedTool","objectId","selectedObjectId","newObjectArray","filter","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","square","lineLength","v","w","sqrt","getClosestPointOnLine","p","a","b","atob","len","dot","t","AddDoorTool","getState","mousePoint","minDistance","snapPoint","minWallId","forEach","wall","scaledStart","scaledEnd","closestPoint","distance","doorWall","find","startX","startY","endX","endY","endPoint","dispatch","uuid","graphics","lineStyle","moveTo","lineTo","beginFill","drawCircle","endFill","AddWallTool","round","addWall","hoverX","hoverY","AddSpaceTool","floor","ceil","addSpace","snappedX","snappedY","drawRect","SelectTool","toolMap","render","app","stage","set","clear","drawDungeonObjects","drawGrid","renderer","plugins","interaction","mouseOverRenderer","drawMouseCursor","mousePosition","getLocalPosition","container","objectIdMap","reduce","space","containerObjectIds","Set","children","child","Object","keys","spaceId","has","newChildGraphics","PIXI","interactive","mouseup","this","addChild","drawSpace","drawWall","drawDoor","removeChild","renderTool","ToolRouter","gridWidth","gridHeight","i","j","zIndex","tint","hitArea","door","handleKeyboardEvent","keyboardEvent","key","handleMouseUp","mouseEvent","onMouseUp","DungeonEditor","style","tabIndex","ref","element","canvasDiv","backgroundColor","sharedLoader","sharedTicker","antialias","appendChild","view","resizeTo","resize","Number","MAX_SAFE_INTEGER","sortableChildren","setupInteractions","ticker","add","renderDungeon","addEventListener","wheelEvent","getModifierState","scroll","MouseEventHandler","preventDefault","event","buttons","pointerEvent","movementX","movementY","React","Component","PositionEditor","title","onUpdate","className","value","onChange","changeEvent","parseInt","target","SizeEditor","StateEditor","dungeonSize","scrollPansViewport","Fragment","DungeonActions","onClick","checked","connect","ToolbarButton","toolName","toolId","Toolbar","dispatchSelectedTool","role","App","Boolean","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.8c4e0565.chunk.js","sourcesContent":["export const createArrayWithUpdatedObject = (array, id, update) => {\n    return array.map(object => {\n        if (object.id === id) {\n            let objectCopy = {...object};\n            update(objectCopy);\n            return objectCopy;\n        }\n        else {\n            return object;\n        }\n    })\n}\n","const TOOL_TYPE  = {\n    SELECT: \"select\",\n    NEW_WALL: \"new_wall\",\n    NEW_SPACE: \"new_space\",\n    NEW_DOOR: \"new_door\"\n};\n\nexport default TOOL_TYPE;\n","const DUNGEON_OBJECT_TYPE  = {\n    SPACE: \"space\",\n    WALL: \"wall\",\n    DOOR: \"door\"\n};\n\nexport default DUNGEON_OBJECT_TYPE;\n","import { createArrayWithUpdatedObject } from '../utils/createArrayWithUpdatedObject'\nimport TOOL_TYPE from '../tools/toolType'\nimport DUNGEON_OBJECT_TYPE from '../utils/dungeonObjectTypes';\nimport { v4 as uuid } from 'uuid';\n\nexport const addDoor = (startX, startY, endX, endY) => {\n    return {\n        type: 'ADD_OBJECT',\n        newObject: {\n            id: uuid(),\n            type: DUNGEON_OBJECT_TYPE.DOOR,\n            start: {\n                x: startX,\n                y: startY\n            },\n            end: {\n                x: endX,\n                y: endY\n            }\n        }\n    };\n}\n\nexport const addWall = (startX, startY, endX, endY) => {\n    return {\n        type: 'ADD_OBJECT',\n        newObject: {\n            id: uuid(),\n            type: DUNGEON_OBJECT_TYPE.WALL,\n            start: {\n                x: startX,\n                y: startY\n            },\n            end: {\n                x: endX,\n                y: endY\n            }\n        }\n    };\n}\n\nexport const addSpace = (startX, startY, endX, endY) => {\n    return {\n        type: 'ADD_OBJECT',\n        newObject: {\n            id: uuid(),\n            type: DUNGEON_OBJECT_TYPE.SPACE,\n            position: {\n                x: startX,\n                y: startY\n            },\n            size: {\n                width: endX - startX,\n                height: endY - startY\n            }\n        }\n    };\n}\n\nexport const scroll = (wheelEvent) => ({\n    type: 'SCROLL_EVENT',\n    scrollX: wheelEvent.deltaX,\n    scrollY: wheelEvent.deltaY,\n    holdingCtrl: wheelEvent.getModifierState(\"Control\")\n})\n\nexport const moveViewport = (deltaX, deltaY) => ({\n    type: 'MOVE_VIEWPORT',\n    deltaX: deltaX,\n    deltaY: deltaY\n})\n\nexport const selectTool = (toolName) => ({\n    type: 'SELECT_TOOL',\n    selectedTool: toolName\n})\n\nexport const selectObject = (objectId) => ({\n    type: 'SELECT_OBJECT',\n    objectId: objectId\n})\n\nexport const deleteSelectedObject = () => ({\n    type: 'DELETE_OBJECT'\n})\n\nexport const moveSelectedObject = (deltaX, deltaY) => ({\n    type: 'MOVE_SELECTED_OBJECT',\n    deltaX: deltaX,\n    deltaY: deltaY\n})\n\nexport const setSelectedObjectPosition = (x, y) => ({\n    type: 'SET_SELECTED_OBJECT_POSITION',\n    x: x,\n    y: y\n})\n\nexport const setSelectedObjectSize = (width, height) => ({\n    type: 'SET_SELECTED_OBJECT_SIZE',\n    width: width,\n    height: height\n})\n\nexport const setSelectedObjectStart = (x, y) => ({\n    type: 'SET_SELECTED_OBJECT_START',\n    x: x,\n    y: y\n})\n\nexport const setSelectedObjectEnd = (x, y) => ({\n    type: 'SET_SELECTED_OBJECT_END',\n    x: x,\n    y: y\n})\n\nexport const setDungeonSize = (width, height) => ({\n    type: 'SET_DUNGEON_SIZE',\n    width: width,\n    height: height\n})\n\nexport const setScrollMovesViewport = (scrollMovesViewport) => ({\n    type: 'SET_SCROLL_MOVES_VIEWPORT',\n    scrollMovesViewport: scrollMovesViewport\n})\n\nexport const setMouseDungeonPosition = (x, y) => ({\n    type: 'SET_MOUSE_DUNGEON_POSITION',\n    x: x,\n    y: y\n})\n\nexport const dungeonReducer = (state = {}, action) => {\n    switch (action.type) {\n        case 'MOVE_VIEWPORT': {\n            return {\n                ...state,\n                editor: {\n                    ...state.editor,\n                    position: {\n                        x: state.editor.position.x + action.deltaX,\n                        y: state.editor.position.y + action.deltaY\n                    }\n                }\n            }\n        }\n        case 'SET_MOUSE_DUNGEON_POSITION': {\n            return {\n                ...state,\n                editor: {\n                    ...state.editor,\n                    mouse: {\n                        ...state.editor.mouse,\n                        dungeonPosition: {\n                            x: action.x,\n                            y: action.y\n                        }\n                    }\n                }\n            }\n        }\n        case 'SCROLL_EVENT': {\n            if (!state.scrollMovesViewport || action.holdingCtrl) {\n                let scaleDelta = 0.1\n                if (action.scrollY > 0) {\n                    scaleDelta *= -1\n                }\n                let newScale = Math.min(Math.max(state.editor.scale + scaleDelta, 0.1), 2)\n                if (state.editor.scale !== newScale) {\n                    return {\n                        ...state,\n                        editor: {\n                            ...state.editor,\n                            scale: newScale,\n                            position: {\n                                x: state.editor.position.x - (state.editor.mouse.dungeonPosition.x * scaleDelta),\n                                y: state.editor.position.y - (state.editor.mouse.dungeonPosition.y * scaleDelta),\n                            }\n                        }\n                    };\n                }\n                else {\n                    return state;\n                }\n            }\n            else {\n                let scaleDelta = 0.5;\n                return {\n                    ...state,\n                    editor: {\n                        ...state.editor,\n                        position: {\n                           x: state.editor.position.x - action.scrollX * scaleDelta,\n                           y: state.editor.position.y - action.scrollY * scaleDelta\n                        }\n                    }\n                };\n            }\n        }\n        case 'MOUSE_DOWN': {\n            return {\n                ...state,\n                mouseDown: true,\n                mouseStartX: state.editor.mouse.dungeonPosition.x,\n                mouseStartY: state.editor.mouse.dungeonPosition.y\n            };\n        }\n        case 'MOUSE_UP': {\n            return {\n                ...state,\n                mouseDown: false\n            };\n        }\n        case 'SET_DUNGEON_SIZE': {\n            return {\n                ...state,\n                dungeon: {\n                    ...state.dungeon,\n                    size: {\n                        width: action.width,\n                        height: action.height\n                    }\n                }\n            }\n        }\n        case 'SET_SCROLL_MOVES_VIEWPORT': {\n            return {\n                ...state,\n                scrollMovesViewport: action.scrollMovesViewport\n            }\n        }\n        case 'MOVE_SELECTED_OBJECT': {\n            let arrayWithUpdatedObject = createArrayWithUpdatedObject(\n                state.dungeon.objects,\n                state.selectedObject,\n                (object) => object.position = {\n                    x: object.position.x + action.deltaX,\n                    y: object.position.y + action.deltaY\n                });\n            return {\n                ...state,\n                dungeon: {\n                    ...state.dungeon,\n                    objects: arrayWithUpdatedObject\n                }\n            };\n        }\n        case 'SET_SELECTED_OBJECT_POSITION': {\n            let arrayWithUpdatedObject = createArrayWithUpdatedObject(\n                state.dungeon.objects,\n                state.selectedObject,\n                (object) => object.position = {\n                    x: action.x,\n                    y: action.y\n                });\n            return {\n                ...state,\n                dungeon: {\n                    ...state.dungeon,\n                    objects: arrayWithUpdatedObject\n                }\n            };\n        }\n        case 'SET_SELECTED_OBJECT_SIZE': {\n            let arrayWithUpdatedObject = createArrayWithUpdatedObject(\n                state.dungeon.objects,\n                state.selectedObject,\n                (object) => object.size = {\n                    width: action.width,\n                    height: action.height\n                });\n            return {\n                ...state,\n                dungeon: {\n                    ...state.dungeon,\n                    objects: arrayWithUpdatedObject\n                }\n            };\n        }\n        case 'SET_SELECTED_OBJECT_START': {\n            let arrayWithUpdatedObject = createArrayWithUpdatedObject(\n                state.dungeon.objects,\n                state.selectedObject,\n                (object) => object.start = {\n                    x: action.x,\n                    y: action.y\n                });\n            return {\n                ...state,\n                dungeon: {\n                    ...state.dungeon,\n                    objects: arrayWithUpdatedObject\n                }\n            };\n        }\n        case 'SET_SELECTED_OBJECT_END': {\n            let arrayWithUpdatedObject = createArrayWithUpdatedObject(\n                state.dungeon.objects,\n                state.selectedObject,\n                (object) => object.end = {\n                    x: action.x,\n                    y: action.y\n                });\n            return {\n                ...state,\n                dungeon: {\n                    ...state.dungeon,\n                    objects: arrayWithUpdatedObject,\n                }\n            };\n\n        }\n        case 'ADD_OBJECT': {\n            let objectArray = state.dungeon.objects.slice();\n            objectArray = [...objectArray, action.newObject];\n            return {\n                ...state,\n                dungeon: {\n                    ...state.dungeon,\n                    objects: objectArray\n                }\n            };\n        }\n        case 'SELECT_TOOL': {\n            let selectedObject = state.selectedObject;\n            if (action.selectedTool !== TOOL_TYPE.SELECT) {\n                selectedObject = null;\n            }\n            return {\n                ...state,\n                selectedTool: action.selectedTool,\n                selectedObject: selectedObject\n            };\n        }\n        case 'SELECT_OBJECT': {\n            if (state.selectedTool === TOOL_TYPE.SELECT) {\n                return {\n                    ...state,\n                    selectedObject: action.objectId\n                };\n            }\n            else {\n                return state;\n            }\n        }\n        case 'DELETE_OBJECT': {\n            let selectedObjectId = state.selectedObject;\n            if (selectedObjectId) {\n                let newObjectArray = state.dungeon.objects\n                    .filter(object => object.id !== selectedObjectId);\n                return {\n                    ...state,\n                    selectedObject: null,\n                    dungeon: {\n                        ...state.dungeon,\n                        objects: newObjectArray\n                    }\n                }\n            }\n            else {\n                return state;   \n            }\n        }\n        default:\n            return state\n    }\n};\n\nexport default dungeonReducer\n","import { createStore } from 'redux';\nimport dungeonReducer from './reducers/dungeonReducer.js'\nimport TOOL_TYPE from './tools/toolType.js';\n\nconst store = createStore(dungeonReducer,\n  {\n    scrollMovesViewport: false,\n    mouseDown: false,\n    mouseStartX: 0,\n    mouseStartY: 0,\n    selectedTool: TOOL_TYPE.NEW_SPACE,\n    editor: {\n      scale: 1,\n      position: {\n        x: 0,\n        y: 0\n      },\n      mouse: {\n        dungeonPosition: {\n          x: 0,\n          y: 0\n        }\n      }\n    },\n    dungeon: {\n      size: {\n        width: 28,\n        height: 32\n      },\n      objects: [\n          {\n            id: \"01f998f7-3ad4-43c6-b498-3249ab470b05\",\n            type: \"space\",\n            position: {\n              x: 1,\n              y: 1\n            },\n            size: {\n              width: 5,\n              height: 5\n            }\n          },\n          {\n            id: \"79178d8c-3a3e-42ee-b1ec-00dc37a045fc\",\n            type: \"space\",\n            position: {\n              x: 6,\n              y: 4\n            },\n            size: {\n              width: 7,\n              height: 9\n            }\n          },\n          {\n            id: \"6ce25fdc-9fd4-46c0-a924-74f5f9174193\",\n            type: \"space\",\n            position: {\n              x: 15,\n              y: 15\n            },\n            size: {\n              width: 6,\n              height: 7\n            }\n          },\n          {\n            id: \"e211fbd3-a817-47a5-bb47-481ba330e46d\",\n            type: \"space\",\n            position: {\n              x: 21,\n              y: 19\n            },\n            size: {\n              width: 4,\n              height: 9\n            }\n          },\n          {\n            id: '4abe3330-4a95-4c29-b71d-8ea768da1ee6',\n            type: \"wall\",\n            start: {\n              x: 1,\n              y: 1\n            },\n            end: {\n              x: 1,\n              y: 6\n            }\n          },\n          {\n            id: 'ad3c6f9b-f3f0-4025-8073-daacc68483ec',\n            type: \"wall\",\n            start: {\n              x: 6,\n              y: 6\n            },\n            end: {\n              x: 1,\n              y: 6\n            }\n          },\n          {\n            id: '68365136-d12f-4e54-8f7b-4cbd3ab424eb',\n            type: \"wall\",\n            start: {\n              x: 6,\n              y: 13\n            },\n            end: {\n              x: 6,\n              y: 6\n            }\n          },\n          {\n            id: '3d6435e5-8d67-4405-87d0-72c4e8f4dfaa',\n            type: \"wall\",\n            start: {\n              x: 13,\n              y: 13\n            },\n            end: {\n              x: 6,\n              y: 13\n            }\n          },\n          {\n            id: '384ac23d-f5fc-4cd1-9ad7-b528b62fa732',\n            type: \"wall\",\n            start: {\n              x: 13,\n              y: 4\n            },\n            end: {\n              x: 13,\n              y: 13\n            }\n          },\n          {\n            id: '161e3147-ca11-4dc4-a26b-ca8295c5abaa',\n            type: \"wall\",\n            start: {\n              x: 6,\n              y: 4\n            },\n            end: {\n              x: 13,\n              y: 4\n            }\n          },\n          {\n            id: 'e8092d63-e7e2-4cd2-8c80-8cd6030980f1',\n            type: \"wall\",\n            start: {\n              x: 6,\n              y: 1\n            },\n            end: {\n              x: 6,\n              y: 4\n            }\n          },\n          {\n            id: '71ed94d3-177b-428b-a8e5-fe25eb79a4ea',\n            type: \"wall\",\n            start: {\n              x: 1,\n              y: 1\n            },\n            end: {\n              x: 6,\n              y: 1\n            }\n          },\n          {\n            id: '0ea47a6f-af9f-4ec6-a7f3-881332643e2a',\n            type: \"wall\",\n            start: {\n              x: 15,\n              y: 15\n            },\n            end: {\n              x: 15,\n              y: 22\n            }\n          },\n          {\n            id: 'f7ec5579-7966-4ba4-b8ee-fdaad6372842',\n            type: \"wall\",\n            start: {\n              x: 21,\n              y: 22\n            },\n            end: {\n              x: 15,\n              y: 22\n            }\n          },\n          {\n            id: '1e587060-37cc-4b87-a88a-852c8055cabb',\n            type: \"wall\",\n            start: {\n              x: 21,\n              y: 15\n            },\n            end: {\n              x: 15,\n              y: 15\n            }\n          },\n          {\n            id: '79e1f702-6d60-435b-ba1e-584077a7d479',\n            type: \"wall\",\n            start: {\n              x: 21,\n              y: 19\n            },\n            end: {\n              x: 21,\n              y: 15\n            }\n          },\n          {\n            id: '231997d1-1453-4573-a2c0-0571428d7ac9',\n            type: \"wall\",\n            start: {\n              x: 25,\n              y: 19\n            },\n            end: {\n              x: 21,\n              y: 19\n            }\n          },\n          {\n            id: '85033454-8145-4d36-9b58-5e891f731f25',\n            type: \"wall\",\n            start: {\n              x: 21,\n              y: 22\n            },\n            end: {\n              x: 21,\n              y: 28\n            }\n          },\n          {\n            id: '2c6b4f88-4163-4847-ba05-c4ce865dfd87',\n            type: \"wall\",\n            start: {\n              x: 21,\n              y: 28\n            },\n            end: {\n              x: 25,\n              y: 28\n            }\n          },\n          {\n            id: '57013c9b-609f-4e59-ae1a-fd94a49bac80',\n            type: \"wall\",\n            start: {\n              x: 25,\n              y: 19\n            },\n            end: {\n              x: 25,\n              y: 28\n            }\n          }\n      ]\n    }\n  },\n  typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nexport default store;","const square = (x) => x * x;\n\nexport const lineLength = (v, w) => Math.sqrt(square(v.x - w.x) + square(v.y - w.y));\n\nexport const getClosestPointOnLine = (p, a, b) => {\n    \n    var atob = { x: b.x - a.x, y: b.y - a.y };\n    var atop = { x: p.x - a.x, y: p.y - a.y };\n    var len = atob.x * atob.x + atob.y * atob.y;\n    var dot = atop.x * atob.x + atop.y * atob.y;\n    var t = Math.min( 1, Math.max( 0, dot / len ) );\n    return {\n        x: a.x + atob.x * t,\n        y: a.y + atob.y * t\n    };\n}","import { addDoor } from \"../reducers/dungeonReducer\";\nimport { GRID_TILE_SIZE } from \"../utils/constants\";\nimport DUNGEON_OBJECT_TYPE from \"../utils/dungeonObjectTypes\";\nimport { lineLength, getClosestPointOnLine } from \"../utils/geometry\";\n\nexport default class AddDoorTool {\n    onMouseUp(store) {\n        let state = store.getState();\n        let mousePoint = state.editor.mouse.dungeonPosition;\n        let minDistance = 25;\n        let snapPoint = null;\n        let minWallId = null;\n        state.dungeon.objects\n            .filter(object => object.type === DUNGEON_OBJECT_TYPE.WALL)\n            .forEach(wall =>{\n                // try each point and get the shortest distance\n                let scaledStart = {\n                    x: wall.start.x * GRID_TILE_SIZE,\n                    y: wall.start.y * GRID_TILE_SIZE\n                };\n                let scaledEnd = {\n                    x: wall.end.x * GRID_TILE_SIZE,\n                    y: wall.end.y * GRID_TILE_SIZE\n                }\n                let closestPoint = getClosestPointOnLine({\n                        x: state.mouseStartX,\n                        y: state.mouseStartY\n                    }, scaledStart, scaledEnd);\n                // if the shortest distance of one is < snapping threshold, snap to it\n                let distance = lineLength(closestPoint, {\n                    x: state.mouseStartX,\n                    y: state.mouseStartY\n                });\n                if (!minDistance || distance < minDistance) {\n                    minDistance = distance;\n                    snapPoint = closestPoint;\n                    minWallId = wall.id;\n                }\n            });\n\n        let doorWall = state.dungeon.objects.find(wall => wall.id === minWallId);\n\n        if (!doorWall) {\n            return;\n        }\n\n        let scaledStart = {\n            x: doorWall.start.x * GRID_TILE_SIZE,\n            y: doorWall.start.y * GRID_TILE_SIZE\n        };\n        let scaledEnd = {\n            x: doorWall.end.x * GRID_TILE_SIZE,\n            y: doorWall.end.y * GRID_TILE_SIZE\n        }\n        let endPoint = getClosestPointOnLine(mousePoint, scaledStart, scaledEnd);\n        store.dispatch(addDoor(\n            snapPoint.x / GRID_TILE_SIZE,\n            snapPoint.y / GRID_TILE_SIZE,\n            endPoint.x / GRID_TILE_SIZE,\n            endPoint.y / GRID_TILE_SIZE));\n    }\n\n    renderTool(state, graphics) {\n        let mousePoint = state.editor.mouse.dungeonPosition;\n        if (!state.mouseDown) {\n            // try to snap to the nearest line:\n            // for each line, get the nearest point on the line\n            let minDistance = 25;\n            let snapPoint = null;\n            state.dungeon.objects\n                .filter(object => object.type === DUNGEON_OBJECT_TYPE.WALL)\n                .forEach(wall => {\n                    // try each point and get the shortest distance\n                    let scaledStart = {\n                        x: wall.start.x * GRID_TILE_SIZE,\n                        y: wall.start.y * GRID_TILE_SIZE\n                    };\n                    let scaledEnd = {\n                        x: wall.end.x * GRID_TILE_SIZE,\n                        y: wall.end.y * GRID_TILE_SIZE\n                    }\n                    let closestPoint = getClosestPointOnLine(mousePoint, scaledStart, scaledEnd);\n                    // if the shortest distance of one is < snapping threshold, snap to it\n                    let distance = lineLength(closestPoint, mousePoint);\n                    if (!minDistance || distance < minDistance) {\n                        minDistance = distance;\n                        snapPoint = closestPoint;\n                    }\n                });\n            if (snapPoint) {\n                graphics.lineStyle();\n                graphics.beginFill(0xfffd00);\n                graphics.drawCircle(snapPoint.x, snapPoint.y, 2.5);\n                graphics.endFill();\n            }\n        }\n        else {\n            let minDistance = 25;\n            let snapPoint = null;\n            let minWallId = null;\n            state.dungeon.objects\n                .filter(object => object.type === DUNGEON_OBJECT_TYPE.WALL)\n                .forEach(wall => {\n                    // try each point and get the shortest distance\n                    let scaledStart = {\n                        x: wall.start.x * GRID_TILE_SIZE,\n                        y: wall.start.y * GRID_TILE_SIZE\n                    };\n                    let scaledEnd = {\n                        x: wall.end.x * GRID_TILE_SIZE,\n                        y: wall.end.y * GRID_TILE_SIZE\n                    }\n                    let closestPoint = getClosestPointOnLine({\n                            x: state.mouseStartX,\n                            y: state.mouseStartY\n                        }, scaledStart, scaledEnd);\n                    // if the shortest distance of one is < snapping threshold, snap to it\n                    let distance = lineLength(closestPoint, {\n                        x: state.mouseStartX,\n                        y: state.mouseStartY\n                    });\n                    if (!minDistance || distance < minDistance) {\n                        minDistance = distance;\n                        snapPoint = closestPoint;\n                        minWallId = wall.id;\n                    }\n                });\n            // draw a line from the start point \n            if (!snapPoint) {\n                return;\n            }\n\n            let startX = snapPoint.x;\n            let startY = snapPoint.y;\n\n            let doorWall = state.dungeon.objects.find(wall => wall.id === minWallId);\n            let scaledStart = {\n                x: doorWall.start.x * GRID_TILE_SIZE,\n                y: doorWall.start.y * GRID_TILE_SIZE\n            };\n            let scaledEnd = {\n                x: doorWall.end.x * GRID_TILE_SIZE,\n                y: doorWall.end.y * GRID_TILE_SIZE\n            }\n            let endPoint = getClosestPointOnLine(mousePoint, scaledStart, scaledEnd);\n\n            let endX = endPoint.x;\n            let endY = endPoint.y;\n\n            graphics.lineStyle(5, 0xfffd00);\n            graphics.moveTo(startX, startY);\n            graphics.lineTo(endX, endY);\n            graphics.lineStyle();\n            graphics.beginFill(0xfffd00);\n            graphics.drawCircle(startX, startY, 2.5);\n            graphics.drawCircle(endX, endY, 2.5);\n            graphics.endFill();\n        }\n    }\n}","export const GRID_TILE_SIZE = 70;","import { GRID_TILE_SIZE } from \"../utils/constants\";\nimport { addWall } from \"../reducers/dungeonReducer\";\n\nexport default class AddWallTool {\n    onMouseUp(store) {\n        let state = store.getState();\n        let mousePoint = state.editor.mouse.dungeonPosition;\n        let startX = Math.round(state.mouseStartX / GRID_TILE_SIZE);\n        let startY = Math.round(state.mouseStartY / GRID_TILE_SIZE);\n        let endX = Math.round(mousePoint.x / GRID_TILE_SIZE);\n        let endY = Math.round(mousePoint.y / GRID_TILE_SIZE);\n        store.dispatch(addWall(startX, startY, endX, endY));\n    }\n\n    renderTool(state, graphics) {\n        let mousePoint = state.editor.mouse.dungeonPosition;\n        if (state.mouseDown) {\n            let startX = Math.round(state.mouseStartX / GRID_TILE_SIZE) * GRID_TILE_SIZE;\n            let startY = Math.round(state.mouseStartY / GRID_TILE_SIZE) * GRID_TILE_SIZE;\n            let endX = Math.round(mousePoint.x / GRID_TILE_SIZE) * GRID_TILE_SIZE;\n            let endY = Math.round(mousePoint.y / GRID_TILE_SIZE) * GRID_TILE_SIZE;\n            graphics.lineStyle(5, 0xfffd00);\n            graphics.moveTo(startX, startY);\n            graphics.lineTo(endX, endY);\n            graphics.lineStyle();\n            graphics.beginFill(0xfffd00);\n            graphics.drawCircle(startX, startY, 2.5);\n            graphics.drawCircle(endX, endY, 2.5);\n            graphics.endFill();\n        }\n        else {\n            // get nearest center point\n            let hoverX = Math.round(mousePoint.x / GRID_TILE_SIZE) * GRID_TILE_SIZE;\n            let hoverY = Math.round(mousePoint.y / GRID_TILE_SIZE) * GRID_TILE_SIZE;\n\n            graphics.lineStyle();\n            graphics.beginFill(0xfffd00);\n            graphics.drawCircle(hoverX, hoverY, 2.5);\n            graphics.endFill();\n        }\n    }\n}\n","import { GRID_TILE_SIZE } from \"../utils/constants\";\nimport { addSpace } from \"../reducers/dungeonReducer\";\n\nexport default class AddSpaceTool {\n\n    onMouseUp(store) {\n        let state = store.getState();\n        let mousePoint = state.editor.mouse.dungeonPosition;\n        let startX = Math.floor(Math.min(state.mouseStartX, mousePoint.x) / GRID_TILE_SIZE);\n        let startY = Math.floor(Math.min(state.mouseStartY, mousePoint.y) / GRID_TILE_SIZE);\n        let endX = Math.ceil(Math.max(state.mouseStartX, mousePoint.x) / GRID_TILE_SIZE);\n        let endY = Math.ceil(Math.max(state.mouseStartY, mousePoint.y) / GRID_TILE_SIZE);\n        store.dispatch(addSpace(startX, startY, endX, endY));\n    }\n\n    renderTool(state, graphics) {\n        let mousePoint = state.editor.mouse.dungeonPosition;\n        let snappedX, snappedY, width, height;\n        if (state.mouseDown) {\n            let startX = Math.min(state.mouseStartX, mousePoint.x);\n            let startY = Math.min(state.mouseStartY, mousePoint.y);\n            let endX = Math.max(state.mouseStartX, mousePoint.x);\n            let endY = Math.max(state.mouseStartY, mousePoint.y);\n            snappedX = Math.floor(startX / GRID_TILE_SIZE) * GRID_TILE_SIZE;\n            snappedY = Math.floor(startY / GRID_TILE_SIZE) * GRID_TILE_SIZE;\n            endX = Math.floor(endX / GRID_TILE_SIZE) * GRID_TILE_SIZE + GRID_TILE_SIZE;\n            endY = Math.floor(endY / GRID_TILE_SIZE) * GRID_TILE_SIZE + GRID_TILE_SIZE;\n            width = endX - snappedX;\n            height = endY - snappedY;\n        }\n        else {\n            // snap to nearest grid point\n            // for now for simplicity let's say top left\n            snappedX = Math.floor(mousePoint.x / GRID_TILE_SIZE) * GRID_TILE_SIZE;\n            snappedY = Math.floor(mousePoint.y / GRID_TILE_SIZE) * GRID_TILE_SIZE;\n            width = GRID_TILE_SIZE;\n            height = GRID_TILE_SIZE;\n        }\n        // draw a hover rect\n        graphics.beginFill(0, 0);\n        graphics.lineStyle(1, 0xfffd00);\n        graphics.drawRect(snappedX, snappedY, width, height);\n        graphics.endFill();\n    }\n}","export default class SelectTool {\n    onMouseUp(mousePoint, store) {\n        // Selecting is handled via interaction events on the render objects themselves\n    }\n    renderTool(state, graphics) {\n        // No need to render differently when selecting\n    }\n}\n","import TOOL_TYPE from \"./toolType\";\nimport AddDoorTool from \"./AddDoorTool\";\nimport AddWallTool from \"./AddWallTool\";\nimport AddSpaceTool from \"./AddSpaceTool\";\nimport SelectTool from \"./SelectTool\";\n\nconst toolMap = {\n    [TOOL_TYPE.NEW_DOOR]: new AddDoorTool(),\n    [TOOL_TYPE.NEW_SPACE]: new AddSpaceTool(),\n    [TOOL_TYPE.NEW_WALL]: new AddWallTool(),\n    [TOOL_TYPE.SELECT]: new SelectTool()\n}\n\nexport const onMouseUp = (store) => {\n    let state = store.getState();\n    toolMap[state.selectedTool].onMouseUp(store);\n}\n\nexport const renderTool = (state, graphics) => {\n    toolMap[state.selectedTool].renderTool(state, graphics);\n}\n","import * as PIXI from 'pixi.js';\nimport { selectObject, setMouseDungeonPosition } from \"../reducers/dungeonReducer\";\nimport store from '../store.js';\nimport { GRID_TILE_SIZE } from '../utils/constants';\nimport DUNGEON_OBJECT_TYPE from '../utils/dungeonObjectTypes';\nimport * as ToolRouter from '../tools/ToolRouter';\n\nexport const render = (app, graphics) => {\n    var state = store.getState();\n\n    app.stage.position.set(state.editor.position.x, state.editor.position.y);\n    if (app.stage.scale.x !== state.editor.scale) {\n        app.stage.scale.set(state.editor.scale);\n    }\n\n    graphics.clear();\n\n    drawDungeonObjects(app.stage, state);\n    drawGrid(graphics, state.dungeon.size.width, state.dungeon.size.height);\n\n    if (app.renderer.plugins.interaction.mouseOverRenderer) {\n        drawMouseCursor(state, graphics);\n\n        let mousePosition = app.renderer.plugins.interaction.mouse.getLocalPosition(app.stage);\n        store.dispatch(setMouseDungeonPosition(mousePosition.x, mousePosition.y));\n    }\n    else {\n        store.dispatch(setMouseDungeonPosition(null, null));\n    }\n}\nexport default render;\n\nconst drawDungeonObjects = (container, state) => {\n    let objectIdMap = state.dungeon.objects.reduce((map, space) => {\n        map[space.id] = space;\n        return map;\n    }, {});\n\n    let containerObjectIds = new Set(container.children.map(child => child.id));\n    let stateObjectIds = Object.keys(objectIdMap);\n    stateObjectIds.forEach(spaceId => {\n        if (!containerObjectIds.has(spaceId)) {\n            let newChildGraphics = new PIXI.Graphics();\n            newChildGraphics.id = spaceId;\n            newChildGraphics.interactive = true;\n            newChildGraphics.mouseup = function () {\n                store.dispatch(selectObject(this.id));\n            };\n            container.addChild(newChildGraphics);\n        }\n    });\n\n    // Sync all child graphics with state\n    container.children.forEach(graphics => {\n        if (graphics.id) {\n            let object = objectIdMap[graphics.id];\n            if (object) {\n                switch (object.type) {\n                    case DUNGEON_OBJECT_TYPE.SPACE:\n                        drawSpace(graphics, object, state);\n                        break;\n                    case DUNGEON_OBJECT_TYPE.WALL:\n                        drawWall(graphics, object, state);\n                        break;\n                    case DUNGEON_OBJECT_TYPE.DOOR:\n                        drawDoor(graphics, object, state);\n                        break;\n                    default:\n                        break;\n                }\n            }\n            else {\n                container.removeChild(graphics);\n            }\n        }\n    });\n}\n\nconst drawMouseCursor = (state, graphics) => {\n    ToolRouter.renderTool(state, graphics);\n}\n\nconst drawGrid = (graphics, gridWidth, gridHeight) => {\n    graphics.lineStyle(1, 0x444444, 1, 0.5);\n    for (let i = 0; i < gridWidth; i++) {\n        graphics.moveTo(i * GRID_TILE_SIZE, 0);\n        graphics.lineTo(i * GRID_TILE_SIZE, (gridHeight - 1) * GRID_TILE_SIZE);\n    }\n    for (let j = 0; j < gridHeight; j++) {\n        graphics.moveTo(0, j * GRID_TILE_SIZE);\n        graphics.lineTo((gridWidth - 1) * GRID_TILE_SIZE, j * GRID_TILE_SIZE);\n    }\n}\n\n\nconst drawWall = (graphics, wall, state) => {\n    graphics.zIndex = 2;\n    graphics.clear();\n    graphics.beginFill(0x0266e6, 1);\n    graphics.lineStyle(10, 0x0266e6, 1, 0.5);\n    graphics.moveTo(wall.start.x * GRID_TILE_SIZE, wall.start.y * GRID_TILE_SIZE);\n    graphics.lineTo(wall.end.x * GRID_TILE_SIZE, wall.end.y * GRID_TILE_SIZE);\n    graphics.lineStyle();\n    graphics.drawCircle(wall.start.x * GRID_TILE_SIZE, wall.start.y * GRID_TILE_SIZE, 5);\n    graphics.drawCircle(wall.end.x * GRID_TILE_SIZE, wall.end.y * GRID_TILE_SIZE, 5);\n    let half = 10 / 2;\n    graphics.endFill();\n\n    if (state.selectedObject === graphics.id) {\n        graphics.tint = 0xffff33;\n    }\n    else {\n        graphics.tint = 0xffffff;\n    }\n    graphics.hitArea = new PIXI.Polygon([\n        wall.start.x * GRID_TILE_SIZE - half, wall.start.y * GRID_TILE_SIZE - half,\n        wall.start.x * GRID_TILE_SIZE + half, wall.start.y * GRID_TILE_SIZE + half,\n        wall.end.x * GRID_TILE_SIZE + half, wall.end.y * GRID_TILE_SIZE + half,\n        wall.end.x * GRID_TILE_SIZE - half, wall.end.y * GRID_TILE_SIZE - half,\n    ]);\n    return half;\n}\n\nconst drawSpace = (graphics, space, state) => {\n    graphics.clear();\n    graphics.beginFill(0xd6d5d5);\n    graphics.drawRect(\n        space.position.x * GRID_TILE_SIZE,\n        space.position.y * GRID_TILE_SIZE,\n        space.size.width * GRID_TILE_SIZE,\n        space.size.height * GRID_TILE_SIZE);\n    graphics.endFill();\n\n    if (state.selectedObject === graphics.id) {\n        graphics.tint = 0xffffcc;\n    }\n    else {\n        graphics.tint = 0xffffff;\n    }\n}\n\nconst drawDoor = (graphics, door, state) => {\n    graphics.zIndex = 3;\n    graphics.clear();\n    graphics.beginFill(0x002b56, 1);\n    graphics.lineStyle(20, 0x002b56, 1, 0.5);\n    graphics.moveTo(door.start.x * GRID_TILE_SIZE, door.start.y * GRID_TILE_SIZE);\n    graphics.lineTo(door.end.x * GRID_TILE_SIZE, door.end.y * GRID_TILE_SIZE);\n    graphics.lineStyle();\n    let half = 20 / 2;\n    graphics.endFill();\n\n    if (state.selectedObject === graphics.id) {\n        graphics.tint = 0xffff33;\n    }\n    else {\n        graphics.tint = 0xffffff;\n    }\n    graphics.hitArea = new PIXI.Polygon([\n        door.start.x * GRID_TILE_SIZE - half, door.start.y * GRID_TILE_SIZE - half,\n        door.start.x * GRID_TILE_SIZE + half, door.start.y * GRID_TILE_SIZE + half,\n        door.end.x * GRID_TILE_SIZE + half, door.end.y * GRID_TILE_SIZE + half,\n        door.end.x * GRID_TILE_SIZE - half, door.end.y * GRID_TILE_SIZE - half,\n    ]);\n}\n","import { deleteSelectedObject, moveSelectedObject } from \"../reducers/dungeonReducer\"\n\nconst handleKeyboardEvent = (keyboardEvent, store) => {\n    switch (keyboardEvent.key) {\n        case 'Delete':\n            return store.dispatch(deleteSelectedObject());\n        case 'ArrowLeft':\n            return store.dispatch(moveSelectedObject(-1, 0));\n        case 'ArrowRight':\n            return store.dispatch(moveSelectedObject(1, 0));\n        case 'ArrowDown':\n            return store.dispatch(moveSelectedObject(0, 1));\n        case 'ArrowUp':\n            return store.dispatch(moveSelectedObject(0, -1));\n        default:\n            return;\n    }\n}\n\nexport default handleKeyboardEvent","import { moveViewport, scroll } from \"../reducers/dungeonReducer\";\nimport * as ToolRouter from '../tools/ToolRouter';\n\nexport const handleMouseDown = (mouseEvent, store) => {\n    if (mouseEvent.buttons === 1) {\n        store.dispatch({ type: 'MOUSE_DOWN' });\n    }\n}\n\nexport const handleMouseUp = (mouseEvent, store) => {\n    let state = store.getState();\n    if (state.mouseDown) {\n        store.dispatch({ type: 'MOUSE_UP' });\n        ToolRouter.onMouseUp(store);\n    }\n}\n\nexport const handleMouseMove = (mouseEvent, store) => {\n    if (mouseEvent.buttons === 2) {\n        store.dispatch(moveViewport(mouseEvent.movementX, mouseEvent.movementY));\n    }\n}\n\nexport const handleWheelEvent = (wheelEvent, store) => {\n    store.dispatch(scroll(wheelEvent));\n}\n","import * as PIXI from 'pixi.js';\nimport React from 'react';\nimport { render as renderDungeon } from '../rendering/DungeonRenderer';\nimport store from '../store.js';\nimport handleKeyboardEvent from '../utils/keyboardEventHandlers.js';\nimport * as MouseEventHandler from '../utils/mouseEventHandlers.js';\n\nexport default class DungeonEditor extends React.Component {\n    render() {\n        return <div\n            style={{ height: \"85vh\" }}\n            tabIndex={-1}\n            ref={(element) => this.canvasDiv = element}>\n        </div>\n    }\n\n    componentDidMount() {\n        const app = new PIXI.Application({\n            backgroundColor: 0x5f5f5f,\n            sharedLoader: true,\n            sharedTicker: true,\n            antialias: true\n        });\n        this.app = app;\n        this.canvasDiv.appendChild(app.view);\n        this.app.resizeTo = this.canvasDiv;\n        this.app.resize();\n\n        let graphics = new PIXI.Graphics();\n        graphics.zIndex = Number.MAX_SAFE_INTEGER;\n        app.stage.sortableChildren = true;\n        app.stage.addChild(graphics);\n\n        this.setupInteractions()\n\n        app.ticker.add(() => {\n            renderDungeon(app, graphics);\n        });\n    }\n\n    setupInteractions() {\n        this.canvasDiv.addEventListener(\"wheel\", (wheelEvent) => {\n            MouseEventHandler.handleWheelEvent(wheelEvent, store);\n            wheelEvent.preventDefault();\n        });\n        this.canvasDiv.addEventListener('contextmenu', (event) => {\n            event.preventDefault();\n        });\n        this.canvasDiv.addEventListener('pointerdown', (event) => {\n            MouseEventHandler.handleMouseDown(event, store);\n        });\n        this.canvasDiv.addEventListener('pointerup', (event) => {\n            MouseEventHandler.handleMouseUp(event, store);\n        });\n        this.canvasDiv.addEventListener('pointermove', (pointerEvent) => {\n            MouseEventHandler.handleMouseMove(pointerEvent, store);\n        });\n        this.canvasDiv.addEventListener('keydown', (event) => {\n            handleKeyboardEvent(event, store);\n        });\n    }\n}\n","import React from 'react'\n\nconst PositionEditor = ({ title, x, y, onUpdate }) =>\n    <div className=\"card bg-dark text-light border-secondary mb-3\">\n        <div className=\"card-header border-secondary\">\n            <h5> {title ? title : \"Position\"}</h5>\n        </div>\n        <div className=\"card-body\">\n            <div className=\"form-group\">\n                <label>\n                    X:\n                    <input\n                        className=\"form-control bg-secondary text-light\"\n                        type=\"number\"\n                        value={x}\n                        onChange={(changeEvent) => onUpdate(\n                            parseInt(changeEvent.target.value),\n                            y\n                        )}>\n                    </input>\n                </label>\n                <label>\n                    Y:\n                    <input\n                        className=\"form-control bg-secondary text-light\"\n                        type=\"number\"\n                        value={y}\n                        onChange={(changeEvent) => onUpdate(\n                            x,\n                            parseInt(changeEvent.target.value)\n                        )}>\n                    </input>\n                </label>\n            </div>\n        </div>\n    </div>\n\nexport default PositionEditor","import React from 'react'\n\nconst SizeEditor = ({ title, width, height, onUpdate }) =>\n    <div className=\"card bg-dark text-light border-secondary mb-3\">\n        <div className=\"card-header border-secondary\">\n            <h5> {title ? title : \"Size\"}</h5>\n        </div>\n        <div className=\"card-body\">\n            <div className=\"form-group\">\n                <label>\n                    Width:\n                    <input\n                        className=\"form-control bg-secondary text-light\"\n                        type=\"number\"\n                        value={width}\n                        onChange={(changeEvent) => onUpdate(\n                            parseInt(changeEvent.target.value),\n                            height\n                        )}>\n                    </input>\n                </label>\n                <label>\n                    Height:\n                    <input\n                        className=\"form-control bg-secondary text-light\"\n                        type=\"number\"\n                        value={height}\n                        onChange={(changeEvent) => onUpdate(\n                            width,\n                            parseInt(changeEvent.target.value)\n                        )}>\n                    </input>\n                </label>\n            </div>\n        </div>\n    </div>\n\nexport default SizeEditor","import React from \"react\"\nimport { connect } from 'react-redux'\nimport * as DungeonActions from '../reducers/dungeonReducer'\nimport PositionEditor from \"./PositionEditor\"\nimport SizeEditor from \"./SizeEditor\"\n\nlet StateEditor = ({ dispatch, selectedObjectId, selectedObject, dungeonSize, scrollPansViewport }) => {\n    if (selectedObjectId) {\n        return <React.Fragment>\n            {selectedObject.position &&\n                <PositionEditor\n                    x={selectedObject.position.x}\n                    y={selectedObject.position.y}\n                    onUpdate={(x, y) => dispatch(DungeonActions.setSelectedObjectPosition(x, y))} />\n            }\n            {selectedObject.size &&\n                <SizeEditor\n                    width={selectedObject.size.width}\n                    height={selectedObject.size.height}\n                    onUpdate={(width, height) => dispatch(DungeonActions.setSelectedObjectSize(width, height))} />\n            }\n            {selectedObject.start &&\n                <PositionEditor\n                    title=\"Start\"\n                    x={selectedObject.start.x}\n                    y={selectedObject.start.y}\n                    onUpdate={(x,y) => dispatch(DungeonActions.setSelectedObjectStart(x, y))} />\n            }\n            {selectedObject.end &&\n                <PositionEditor\n                    title=\"End\"\n                    x={selectedObject.end.x}\n                    y={selectedObject.end.y}\n                    onUpdate={(x,y) => dispatch(DungeonActions.setSelectedObjectEnd(x, y))} />\n            }\n            {selectedObjectId &&\n                <div className=\"card bg-dark text-light border-secondary mb-3\">\n                    <div className=\"card-header border-secondary\">\n                        <h5>Actions</h5>\n                    </div>\n                    <div className=\"card-body\">\n                        <button\n                            className=\"btn btn-outline-danger\"\n                            onClick={() => dispatch(DungeonActions.deleteSelectedObject())}>\n                                Delete Object\n                        </button>\n                    </div>\n                </div>\n            }\n        </React.Fragment>\n    }\n    else {\n        return <React.Fragment>\n            <div className=\"card bg-dark text-light border-secondary mb-3\">\n                <div className=\"card-header border-secondary\">\n                    <h5>Instructions</h5>\n                </div>\n                <div className=\"card-body\">\n                    <p><i>Right click</i> to pan the view.</p>\n                    <p><i>Scroll</i> to zoom in and out.</p>\n                    <p><i>Left click and drag</i> to create new spaces with the New Space tool.</p>\n                    <p><i>Left click</i> to select spaces with the Select tool.</p>\n                    <p><i>Arrow keys</i> will move the currently selected space.</p>\n                    <p><i>Delete</i> will delete the currently selected space.</p>\n                </div>\n            </div>\n            <SizeEditor\n                title=\"Dungeon Size\"\n                width={dungeonSize.width}\n                height={dungeonSize.height}\n                onUpdate={(width, height) => dispatch(DungeonActions.setDungeonSize(width, height))} />\n            <div className=\"card bg-dark text-light border-secondary mb-3\">\n                <div className=\"card-header border-secondary\">\n                    <h5>Editor Options</h5>\n                </div>\n                <div className=\"card-body\">\n                    <div>\n                        <label>\n                            <input type='checkbox' value={scrollPansViewport} onChange={(event) => dispatch(DungeonActions.setScrollMovesViewport(event.target.checked))}></input>\n                            Scroll to pan\n                        </label>\n                    </div>\n                </div>\n            </div>\n        </React.Fragment>\n    }\n}\n\nconst mapStateToProps = state => ({\n    selectedObjectId: state.selectedObject,\n    selectedObject: state.dungeon.objects.find(object => object.id === state.selectedObject),\n    dungeonSize: state.dungeon.size,\n    scrollPansViewport: state.scrollPansViewport\n})\n\nStateEditor = connect(mapStateToProps)(StateEditor)\n\nexport default StateEditor\n","import React from \"react\"\n\nconst ToolbarButton = ({toolName, toolId, selectedTool, onClick}) =>\n    <button\n        className={\"btn btn-secondary\" +\n            (selectedTool === toolId ? ' active' : '')}\n        onClick={() => onClick(toolId)}>\n            {toolName}\n    </button>\n\nexport default ToolbarButton;","import React from \"react\"\nimport { connect } from 'react-redux'\nimport { selectTool } from '../reducers/dungeonReducer'\nimport ToolbarButton from \"./ToolbarButton\"\nimport TOOL_TYPE from \"../tools/toolType\"\n\nlet Toolbar = ({ dispatch, selectedTool }) => {\n    const dispatchSelectedTool = (toolId) => dispatch(selectTool(toolId))\n\n    return (\n        <div className=\"btn-group\" role=\"group\">\n            <ToolbarButton\n                toolName='Select'\n                toolId={TOOL_TYPE.SELECT}\n                selectedTool={selectedTool}\n                onClick={dispatchSelectedTool} />\n            <ToolbarButton\n                toolName='New Space'\n                toolId={TOOL_TYPE.NEW_SPACE}\n                selectedTool={selectedTool}\n                onClick={dispatchSelectedTool} />\n            <ToolbarButton\n                toolName='New Wall'\n                toolId={TOOL_TYPE.NEW_WALL}\n                selectedTool={selectedTool}\n                onClick={dispatchSelectedTool} />\n            <ToolbarButton\n                toolName='New Door'\n                toolId={TOOL_TYPE.NEW_DOOR}\n                selectedTool={selectedTool}\n                onClick={dispatchSelectedTool} />\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    selectedTool: state.selectedTool\n})\n\nToolbar = connect(mapStateToProps)(Toolbar)\n\nexport default Toolbar\n","import React from 'react';\nimport DungeonEditor from \"./components/DungeonEditor.js\";\nimport StateEditor from './components/StateEditor';\nimport Toolbar from './components/Toolbar';\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <nav className=\"navbar navbar-dark bg-secondary\">\n        <span className=\"navbar-brand\">\n          Pungeon\n        </span>\n      </nav>\n      <div className=\"px-5\">\n        <div className=\"py-2\">\n          <Toolbar />\n        </div>\n        <div className=\"row\">\n          <div className=\"col-md-9\">\n            <DungeonEditor />\n          </div>\n          <div className=\"col-md-3\">\n            <StateEditor />\n          </div>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app/App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './app/store.js'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}