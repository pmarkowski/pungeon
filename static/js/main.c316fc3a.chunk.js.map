{"version":3,"sources":["app/reducers/editorActionType.js","app/reducers/editorActions.js","app/utils/constants.js","app/dungeonObjects/BaseDungeonObjectOperations.js","app/dungeonObjects/DoorOperations.js","app/dungeonObjects/LabelOperations.js","app/dungeonObjects/WallOperations.js","app/dungeonObjects/SpaceOperations.js","app/dungeonObjects/TokenOperations.js","app/dungeonObjects/DungeonObjectOperations.js","app/utils/createArrayWithUpdatedObject.js","app/reducers/dungeonActionType.js","app/reducers/dungeonReducer.js","app/tools/toolType.js","app/reducers/editorReducer.js","app/reducers/index.js","app/store.js","app/reducers/dungeonActions.js","app/utils/geometry.js","app/tools/AddDoorTool.js","app/tools/AddLabelTool.js","app/tools/AddSpaceRectangleTool.js","app/tools/AddWallTool.js","app/tools/SelectTool.js","app/tools/AddSpacePolygonTool.js","app/tools/AddTokenTool.js","app/tools/ToolRouter.js","app/utils/download.js","app/rendering/DungeonRenderer.js","app/utils/keyboardEventHandlers.js","app/utils/mouseEventHandlers.js","app/components/DungeonEditor.js","app/components/StateEditorCard.js","app/components/PositionEditor.js","app/components/SizeEditor.js","app/components/StateEditor.js","app/components/ToolbarButton.js","app/components/Toolbar.js","app/App.js","serviceWorker.js","index.js"],"names":["EDITOR_ACTION_TYPE","PNG_EXPORTED","EXPORT_TO_PNG_CLICKED","CLEAR_ONGOING_SPACE_POLYGON","ADD_ONGOING_SPACE_POLYGON","MOVE_VIEWPORT","SET_CURRENT_MOUSE_POSITION","SCROLL_EVENT","MOUSE_DOWN","MOUSE_UP","SET_SCROLL_MOVES_VIEWPORT","SELECT_TOOL","SELECT_OBJECT","SELECT_OBJECTS","SELECT_AT_POINT","SELECT_IN_BOUNDING_BOX","KEY_PRESSED","KEY_RELEASED","selectObjects","objectIds","shouldMultiSelect","type","setCurrentMousePosition","x","y","GRID_TILE_SIZE","createDungeonObject","dungeonObjectType","id","uuid","BaseDungeonObjectOperations","object","PIXI","displayObject","isObjectSelected","DOOR_TYPE","DoorOperations","start","end","graphics","door","objectIsSelected","zIndex","clear","beginFill","lineStyle","moveTo","lineTo","half","endFill","tint","hitArea","LABEL_TYPE","LabelOperations","position","label","children","length","labelText","style","fontFamily","fontSize","addChild","fill","text","set","WALL_TYPE","createWall","startX","startY","endX","endY","WallOperations","wall","line","cap","ROUND","this","createWallHitArea","startPoint","endPoint","rise","run","slope","inverseSlope","Math","min","abs","getOffsetAlongSlope","xOffset","yOffset","polygonXOffset","polygonYOffset","distanceTravelledAlongSlope","slopeAngle","atan","cos","sin","SPACE_TYPE","createSpace","points","size","width","height","SpaceOperations","forEach","point","space","drawRect","firstPoint","index","TOKEN_TYPE","createToken","textureUrl","angle","TokenOperations","sprite","token","objectSelectionGraphics","texture","from","process","getChildAt","drawShape","getLocalBounds","removeChildAt","objectOperations","translate","dungeonObject","filter","operation","map","createArrayWithUpdatedObject","array","update","createArrayWithUpdatedObjects","ids","includes","objectCopy","DUNGEON_ACTION_TYPE","NEW_DUNGEON","SET_DUNGEON_SIZE","MOVE_SELECTED_OBJECT","SET_SELECTED_OBJECT_TEXTURE_PATH","SET_SELECTED_OBJECT_ANGLE","SET_SELECTED_OBJECT_LABEL","SET_SELECTED_OBJECT_POSITION","SET_SELECTED_OBJECT_SIZE","SET_SELECTED_OBJECT_START","SET_SELECTED_OBJECT_END","ADD_OBJECT","DELETE_OBJECTS","defaultDungeonState","objects","dungeonReducer","state","action","arrayWithUpdatedObject","selectedObjectIds","deltaX","deltaY","selectedObject","texturePath","objectArray","slice","newObject","newObjectArray","TOOL_TYPE","SELECT","NEW_WALL","NEW_SPACE_RECTANGLE","NEW_SPACE_POLYGON","NEW_DOOR","NEW_LABEL","NEW_TOKEN","defaultEditorState","scrollMovesViewport","selectedTool","scale","mouse","mouseDown","startPosition","currentPosition","keyboard","heldKeys","selectingAtPoint","selectingInBoundingBox","combineReducers","editor","newHeldKeys","key","exportToPngClicked","ongoingSpacePolygon","newPolygonArray","holdingCtrl","scaleDelta","scrollY","minimumScale","maximumScale","newScale","max","scrollX","newSelectedObjectIds","objectId","Set","dungeon","store","createStore","reducer","window","__REDUX_DEVTOOLS_EXTENSION__","addObject","deleteObjects","moveObjects","setSelectedObjectAngle","square","lineLength","v","w","sqrt","getClosestPointOnLine","p","a","b","atob","len","dot","t","AddDoorTool","getState","mousePoint","minDistance","snapPoint","minWallId","scaledStart","scaledEnd","closestPoint","distance","doorWall","find","dispatch","drawCircle","AddLabelTool","dungeonSpaceX","dungeonSpaceY","AddSpaceRectangleTool","floor","ceil","snappedX","snappedY","AddWallTool","round","hoverX","hoverY","isDragging","endPosition","createRectangle","SelectTool","shouldAddToSelection","boundingRectangle","selectAtPoint","AddSpacePolygonTool","pointArray","addOngoingSpacePolygonPoint","AddTokenTool","tokenTextureUrl","toolMap","download","data","filename","downloadLink","document","createElement","href","target","click","render","app","stage","handlePanning","fractionalScale","handleScaling","globalPosition","worldTransform","apply","renderer","plugins","interaction","hitTest","objectIdsToSelect","child","rect1","rect2","num1","num2","doRectanglesIntersect","push","handleSelecting","drawDungeonObjects","drawGrid","exportTexture","generateTexture","extract","base64","exportImage","handleExporting","mouseOverRenderer","renderTool","ToolRouter","mousePosition","getLocalPosition","container","objectIdMap","reduce","containerObjectIds","Object","keys","has","newChildGraphics","createRenderObject","interactive","renderObject","DungeonObjectOperations","removeChild","gridWidth","gridHeight","i","j","handleKeyPressed","keyboardEvent","repeat","handleKeyReleased","handleMouseDown","mouseEvent","buttons","handleMouseUp","onMouseUp","handleMouseMove","movementX","movementY","handleWheelEvent","wheelEvent","getModifierState","DungeonEditor","tabIndex","ref","element","canvasDiv","backgroundColor","sharedLoader","sharedTicker","antialias","appendChild","view","resizeTo","resize","Number","MAX_SAFE_INTEGER","sortableChildren","setupInteractions","ticker","add","renderDungeon","addEventListener","MouseEventHandler","preventDefault","event","pointerEvent","React","Component","StateEditorCard","title","className","PositionEditor","onUpdate","value","onChange","changeEvent","parseInt","SizeEditor","StateEditor","selectedObjectId","dungeonSize","scrollPansViewport","Fragment","undefined","DungeonActions","step","direction","onClick","class","checked","connect","ToolbarButton","toolName","toolId","Toolbar","dispatchSelectedTool","role","App","Boolean","location","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c316fc3a.chunk.js","sourcesContent":["const EDITOR_ACTION_TYPE = {\n    PNG_EXPORTED: 'PNG_EXPORTED',\n    EXPORT_TO_PNG_CLICKED: 'EXPORT_TO_PNG_CLICKED',\n    CLEAR_ONGOING_SPACE_POLYGON: 'CLEAR_ONGOING_SPACE_POLYGON',\n    ADD_ONGOING_SPACE_POLYGON: 'ADD_ONGOING_SPACE_POLYGON',\n    MOVE_VIEWPORT: 'MOVE_VIEWPORT',\n    SET_CURRENT_MOUSE_POSITION: 'SET_CURRENT_MOUSE_POSITION',\n    SCROLL_EVENT: 'SCROLL_EVENT',\n    MOUSE_DOWN: 'MOUSE_DOWN',\n    MOUSE_UP: 'MOUSE_UP',\n    SET_SCROLL_MOVES_VIEWPORT: 'SET_SCROLL_MOVES_VIEWPORT',\n    SELECT_TOOL: 'SELECT_TOOL',\n    SELECT_OBJECT: 'SELECT_OBJECT',\n    SELECT_OBJECTS: 'SELECT_OBJECTS',\n    SELECT_AT_POINT: 'SELECT_AT_POINT',\n    SELECT_IN_BOUNDING_BOX: 'SELECT_IN_BOUNDING_BOX',\n    KEY_PRESSED: 'KEY_PRESSED',\n    KEY_RELEASED: 'KEY_RELEASED'\n}\n\nexport default EDITOR_ACTION_TYPE;\n","import EDITOR_ACTION_TYPE from \"./editorActionType\"\n\nexport const keyPressed = (key) => ({\n    type: EDITOR_ACTION_TYPE.KEY_PRESSED,\n    key\n})\n\nexport const keyReleased = (key) => ({\n    type: EDITOR_ACTION_TYPE.KEY_RELEASED,\n    key\n})\n\nexport const mouseDown = () => ({\n    type: EDITOR_ACTION_TYPE.MOUSE_DOWN\n})\n\nexport const mouseUp = () => ({\n    type: EDITOR_ACTION_TYPE.MOUSE_UP\n})\n\nexport const pngExported = () => ({\n    type: EDITOR_ACTION_TYPE.PNG_EXPORTED\n})\n\nexport const exportToPngClicked = () => ({\n    type: EDITOR_ACTION_TYPE.EXPORT_TO_PNG_CLICKED\n})\n\nexport const clearOngoingSpacePolygonPoint = () => ({\n    type: EDITOR_ACTION_TYPE.CLEAR_ONGOING_SPACE_POLYGON\n})\n\nexport const addOngoingSpacePolygonPoint = (x, y) => ({\n    type: EDITOR_ACTION_TYPE.ADD_ONGOING_SPACE_POLYGON,\n    position: {\n        x: x,\n        y: y\n    }\n})\n\nexport const scroll = (deltaX, deltaY, holdingCtrl) => ({\n    type: EDITOR_ACTION_TYPE.SCROLL_EVENT,\n    scrollX: deltaX,\n    scrollY: deltaY,\n    holdingCtrl: holdingCtrl\n})\n\nexport const moveViewport = (deltaX, deltaY) => ({\n    type: EDITOR_ACTION_TYPE.MOVE_VIEWPORT,\n    deltaX: deltaX,\n    deltaY: deltaY\n})\n\nexport const selectTool = (toolName) => ({\n    type: EDITOR_ACTION_TYPE.SELECT_TOOL,\n    selectedTool: toolName\n})\n\nexport const selectAtPoint = (x, y, shouldMultiSelect) => ({\n    type: EDITOR_ACTION_TYPE.SELECT_AT_POINT,\n    x,\n    y,\n    shouldMultiSelect\n})\n\nexport const selectInBoundingBox = (x, y, width, height, shouldMultiSelect) => ({\n    type: EDITOR_ACTION_TYPE.SELECT_IN_BOUNDING_BOX,\n    x,\n    y,\n    width,\n    height,\n    shouldMultiSelect\n})\n\nexport const selectObject = (objectId, shouldMultiSelect) => ({\n    type: EDITOR_ACTION_TYPE.SELECT_OBJECT,\n    objectId,\n    shouldMultiSelect\n})\n\nexport const selectObjects = (objectIds, shouldMultiSelect) => ({\n    type: EDITOR_ACTION_TYPE.SELECT_OBJECTS,\n    objectIds,\n    shouldMultiSelect\n})\n\nexport const setScrollMovesViewport = (scrollMovesViewport) => ({\n    type: EDITOR_ACTION_TYPE.SET_SCROLL_MOVES_VIEWPORT,\n    scrollMovesViewport: scrollMovesViewport\n})\n\nexport const setCurrentMousePosition = (x, y) => ({\n    type: EDITOR_ACTION_TYPE.SET_CURRENT_MOUSE_POSITION,\n    x: x,\n    y: y\n})\n","export const GRID_TILE_SIZE = 70;","import * as PIXI from 'pixi.js';\nimport { v4 as uuid } from 'uuid';\n\n/**\n * @typedef {{ type: string, id: string }} BaseDungeonObject\n */\n\n/**\n * @returns {BaseDungeonObject}\n */\nexport const createDungeonObject = (dungeonObjectType) => ({\n    id: uuid(),\n    type: dungeonObjectType\n})\n\nexport class BaseDungeonObjectOperations {\n    get dungeonObjectType() { return null; }\n\n    /**\n     * @param {BaseDungeonObject} object\n     * @param {number} x\n     * @param {number} y\n     */\n    translate(object, x, y) {}\n\n    createRenderObject() {\n        return new PIXI.Graphics();\n    }\n\n    /**\n     * @param {PIXI.DisplayObject} graphics\n     * @param {BaseDungeonObject} object\n     * @param {boolean} objectIsSelected\n     */\n    renderObject(displayObject, object, isObjectSelected) {}\n}\n","import * as PIXI from 'pixi.js';\nimport { GRID_TILE_SIZE } from \"../utils/constants\";\nimport { createDungeonObject, BaseDungeonObjectOperations } from './BaseDungeonObjectOperations';\n\n/**\n * @typedef {{\n *  start: {x: number, y: number},\n *  end: {x: number, y: number}\n * } & import('./BaseDungeonObjectOperations').BaseDungeonObject} Door\n */\n\nexport const DOOR_TYPE = \"door\"\n\n/**\n * @returns {Door}\n */\nexport const createDoor = (startX, startY, endX, endY) => {\n    return {\n        ...createDungeonObject(DOOR_TYPE),\n        start: {\n            x: startX,\n            y: startY\n        },\n        end: {\n            x: endX,\n            y: endY\n        }\n    }\n}\n\nexport class DoorOperations extends BaseDungeonObjectOperations {\n    get dungeonObjectType(){ return DOOR_TYPE; }\n\n    translate(object, x, y) {\n        object.start.x += x;\n        object.start.y += y;\n        object.end.x += x;\n        object.end.y += y;\n    }\n\n    renderObject(graphics, door, objectIsSelected) {\n        graphics.zIndex = 3;\n        graphics.clear();\n        graphics.beginFill(0x002b56, 1);\n        graphics.lineStyle(20, 0x002b56, 1, 0.5);\n        graphics.moveTo(door.start.x * GRID_TILE_SIZE, door.start.y * GRID_TILE_SIZE);\n        graphics.lineTo(door.end.x * GRID_TILE_SIZE, door.end.y * GRID_TILE_SIZE);\n        graphics.lineStyle();\n        let half = 20 / 2;\n        graphics.endFill();\n\n        if (objectIsSelected) {\n            graphics.tint = 0xffff33;\n        }\n        else {\n            graphics.tint = 0xffffff;\n        }\n        graphics.hitArea = new PIXI.Polygon([\n            door.start.x * GRID_TILE_SIZE - half, door.start.y * GRID_TILE_SIZE - half,\n            door.start.x * GRID_TILE_SIZE + half, door.start.y * GRID_TILE_SIZE + half,\n            door.end.x * GRID_TILE_SIZE + half, door.end.y * GRID_TILE_SIZE + half,\n            door.end.x * GRID_TILE_SIZE - half, door.end.y * GRID_TILE_SIZE - half,\n        ]);\n    }\n}\n","import * as PIXI from 'pixi.js';\nimport { GRID_TILE_SIZE } from '../utils/constants';\nimport { createDungeonObject, BaseDungeonObjectOperations } from './BaseDungeonObjectOperations';\n\n/**\n * @typedef {{\n *  position: {x: number, y: number},\n *  label: string\n * } & import('./BaseDungeonObjectOperations').BaseDungeonObject} Label\n */\n\nexport const LABEL_TYPE = \"label\"\n\n/**\n * @returns {Label}\n */\nexport const createLabel = (x, y, label) => {\n    return {\n        ...createDungeonObject(LABEL_TYPE),\n        label,\n        position: {\n            x,\n            y\n        }\n    }\n}\n\nexport class LabelOperations extends BaseDungeonObjectOperations {\n    get dungeonObjectType(){ return LABEL_TYPE; }\n\n    translate(object, x, y) {\n        object.position.x += x;\n        object.position.y += y;\n    }\n\n    renderObject(graphics, label, objectIsSelected) {\n        graphics.zIndex = 4;\n        graphics.clear();\n        if (graphics.children.length === 0) {\n            let labelText = new PIXI.Text(label.label);\n            labelText.style.fontFamily = 'Serif';\n            labelText.style.fontSize = 36;\n            graphics.addChild(labelText);\n        }\n\n        let labelText = graphics.children[0];\n\n        if (objectIsSelected) {\n            labelText.style.fill = 0xffff33;\n        }\n        else {\n            labelText.style.fill = 0x000000;\n        }\n\n        labelText.text = label.label;\n        labelText.position.set(\n            label.position.x * GRID_TILE_SIZE,\n            label.position.y * GRID_TILE_SIZE);\n    }\n}\n","import * as PIXI from 'pixi.js';\nimport { GRID_TILE_SIZE } from \"../utils/constants\";\nimport { createDungeonObject, BaseDungeonObjectOperations } from './BaseDungeonObjectOperations';\n\n/**\n * @typedef {{\n *  start: {x: number, y: number},\n *  end: {x: number, y: number}\n * } & import('./BaseDungeonObjectOperations').BaseDungeonObject} Wall\n */\n\n export const WALL_TYPE = \"wall\"\n\n/**\n * @returns {Wall}\n */\nexport const createWall = (startX, startY, endX, endY) => {\n    return {\n        ...createDungeonObject(WALL_TYPE),\n        start: {\n            x: startX,\n            y: startY\n        },\n        end: {\n            x: endX,\n            y: endY\n        }\n    }\n}\n\nexport class WallOperations extends BaseDungeonObjectOperations {\n    get dungeonObjectType(){ return WALL_TYPE; }\n\n    translate(object, x, y) {\n        object.start.x += x;\n        object.start.y += y;\n        object.end.x += x;\n        object.end.y += y;\n    }\n\n    /**\n     *\n     * @param {PIXI.Graphics} graphics\n     * @param {Wall} wall\n     * @param {boolean} objectIsSelected\n     */\n    renderObject(graphics, wall, objectIsSelected) {\n        graphics.zIndex = 2;\n        graphics.clear();\n        graphics.lineStyle(10, 0x0266e6, 1, 0.5);\n        graphics.line.cap = PIXI.LINE_CAP.ROUND;\n        graphics.moveTo(wall.start.x * GRID_TILE_SIZE, wall.start.y * GRID_TILE_SIZE);\n        graphics.lineTo(wall.end.x * GRID_TILE_SIZE, wall.end.y * GRID_TILE_SIZE);\n        graphics.lineStyle();\n        let half = 10 / 2;\n        graphics.endFill();\n\n        if (objectIsSelected) {\n            graphics.tint = 0xffff33;\n        }\n        else {\n            graphics.tint = 0xffffff;\n        }\n        graphics.hitArea = this.createWallHitArea(wall, half);\n    }\n\n    createWallHitArea(wall, half) {\n        if (wall.start.x === wall.end.x && wall.start.y === wall.end.y) {\n            return new PIXI.Circle(\n                wall.start.x * GRID_TILE_SIZE,\n                wall.start.y * GRID_TILE_SIZE,\n                half);\n        }\n        else {\n            let startPoint = wall.start.x <= wall.end.x ? wall.start : wall.end;\n            let endPoint = wall.start.x > wall.end.x ? wall.start : wall.end;\n\n            let rise = endPoint.y - startPoint.y;\n            let run = endPoint.x - startPoint.x;\n            let slope = rise / run;\n            let inverseSlope = -1 / slope;\n\n            if (slope === 0 || inverseSlope === 0) {\n                return new PIXI.Rectangle(\n                    startPoint.x * GRID_TILE_SIZE - half,\n                    Math.min(startPoint.y, endPoint.y) * GRID_TILE_SIZE - half,\n                    run * GRID_TILE_SIZE + half * 2,\n                    Math.abs(rise) * GRID_TILE_SIZE + half * 2\n                )\n            }\n\n            let { xOffset, yOffset} = this.getOffsetAlongSlope(slope, half);\n            let { xOffset: polygonXOffset, yOffset: polygonYOffset } = this.getOffsetAlongSlope(inverseSlope, half);\n\n            return new PIXI.Polygon([\n                startPoint.x * GRID_TILE_SIZE - xOffset - polygonXOffset, startPoint.y * GRID_TILE_SIZE - yOffset - polygonYOffset,\n                startPoint.x * GRID_TILE_SIZE - xOffset + polygonXOffset, startPoint.y * GRID_TILE_SIZE - yOffset + polygonYOffset,\n                endPoint.x   * GRID_TILE_SIZE + xOffset + polygonXOffset, endPoint.y   * GRID_TILE_SIZE + yOffset + polygonYOffset,\n                endPoint.x   * GRID_TILE_SIZE + xOffset - polygonXOffset, endPoint.y   * GRID_TILE_SIZE + yOffset - polygonYOffset,\n            ]);\n        }\n    }\n\n    getOffsetAlongSlope(slope, distanceTravelledAlongSlope) {\n        let slopeAngle = Math.atan(slope);\n        let xOffset = Math.cos(slopeAngle) * distanceTravelledAlongSlope;\n        let yOffset = Math.sin(slopeAngle) * distanceTravelledAlongSlope;\n        return {\n            xOffset: xOffset,\n            yOffset: yOffset\n        };\n    }\n}\n","import { GRID_TILE_SIZE } from \"../utils/constants\";\nimport { createDungeonObject, BaseDungeonObjectOperations } from './BaseDungeonObjectOperations';\n\n/**\n * @typedef {{\n *  position: {x: number, y: number},\n *  size: {width: number, height: number }\n * } & import(\"./BaseDungeonObjectOperations\").BaseDungeonObject} RectangularSpace\n * @typedef {{\n *  points: {x: number, y: number}[]\n * } & import(\"./BaseDungeonObjectOperations\").BaseDungeonObject} PolygonalSpace\n * @typedef {RectangularSpace | PolygonalSpace} Space\n */\n\nexport const SPACE_TYPE = \"space\"\n\n/**\n * @returns {Space}\n */\nexport const createSpace = ({points, startX, startY, endX, endY}) => {\n    if (points) {\n        return {\n            ...createDungeonObject(SPACE_TYPE),\n            points\n        }\n    }\n    else {\n        return {\n            ...createDungeonObject(SPACE_TYPE),\n            position: {\n                x: startX,\n                y: startY\n            },\n            size: {\n                width: endX - startX,\n                height: endY - startY\n            }\n        }\n    }\n}\n\nexport class SpaceOperations extends BaseDungeonObjectOperations {\n    get dungeonObjectType() { return SPACE_TYPE; }\n\n    translate(object, x, y) {\n        if (object.position) {\n            object.position.x += x;\n            object.position.y += y;\n        }\n        else {\n            object.points.forEach(point => {\n                point.x += x;\n                point.y += y;\n            });\n        }\n    }\n\n    renderObject(graphics, space, objectIsSelected) {\n        graphics.clear();\n        graphics.beginFill(0xd6d5d5);\n        if (space.position && space.size) {\n            graphics.drawRect(\n                space.position.x * GRID_TILE_SIZE,\n                space.position.y * GRID_TILE_SIZE,\n                space.size.width * GRID_TILE_SIZE,\n                space.size.height * GRID_TILE_SIZE);\n            graphics.endFill();\n        }\n        else {\n            let firstPoint = space.points[0];\n            graphics.moveTo(firstPoint.x * GRID_TILE_SIZE, firstPoint.y * GRID_TILE_SIZE);\n            for (let index = 0; index < space.points.length; index++) {\n                const point = space.points[index];\n                graphics.lineTo(point.x * GRID_TILE_SIZE, point.y * GRID_TILE_SIZE);\n            }\n            graphics.endFill();\n        }\n\n        if (objectIsSelected) {\n            graphics.tint = 0xffffcc;\n        }\n        else {\n            graphics.tint = 0xffffff;\n        }\n    }\n}\n","import * as PIXI from 'pixi.js'\nimport { GRID_TILE_SIZE } from '../utils/constants';\nimport { BaseDungeonObjectOperations, createDungeonObject } from './BaseDungeonObjectOperations';\n\n/**\n * @typedef {{\n *  textureUrl: string,\n *  position: {x: number, y: number},\n *  size: {width: number, height: number}\n *  angle: number\n * } & import('./BaseDungeonObjectOperations').BaseDungeonObject} Token\n */\n\nexport const TOKEN_TYPE = \"token\"\n\n/**\n * @returns {Token}\n */\nexport const createToken = (textureUrl, x, y, width, height, angle) => {\n    return {\n        ...createDungeonObject(TOKEN_TYPE),\n        textureUrl,\n        position: {\n            x,\n            y\n        },\n        size: {\n            width,\n            height\n        },\n        angle\n    };\n}\n\nexport class TokenOperations extends BaseDungeonObjectOperations {\n    get dungeonObjectType(){ return TOKEN_TYPE; }\n\n    translate(object, x, y) {\n        object.position.x += x;\n        object.position.y += y;\n    }\n\n    createRenderObject() {\n        return new PIXI.Sprite();\n    }\n\n    renderObject(sprite, token, objectIsSelected) {\n        sprite.zIndex = 4;\n        sprite.texture = PIXI.Texture.from(process.env.PUBLIC_URL + token.textureUrl);\n        sprite.x = token.position.x * GRID_TILE_SIZE;\n        sprite.y = token.position.y * GRID_TILE_SIZE;\n        sprite.width = token.size.width * GRID_TILE_SIZE;\n        sprite.height = token.size.height * GRID_TILE_SIZE;\n        sprite.angle = token.angle;\n\n        if (objectIsSelected) {\n            let objectSelectionGraphics;\n            if (sprite.children.length === 0) {\n                objectSelectionGraphics = new PIXI.Graphics();\n                sprite.addChild(objectSelectionGraphics);\n            } else {\n                objectSelectionGraphics = sprite.getChildAt(0);\n            }\n            objectSelectionGraphics.clear();\n            objectSelectionGraphics.lineStyle(5, 0xfffd00);\n            objectSelectionGraphics.drawShape(sprite.getLocalBounds());\n        }\n        else {\n            if (sprite.children.length > 0) {\n                sprite.removeChildAt(0);\n            }\n        }\n    }\n}\n","import { DoorOperations } from \"./DoorOperations\";\nimport { LabelOperations } from \"./LabelOperations\";\nimport { WallOperations } from \"./WallOperations\";\nimport { SpaceOperations } from \"./SpaceOperations\";\nimport { TokenOperations } from \"./TokenOperations\";\n\n/**\n * @typedef { import(\"./DoorOperations\").Door\n * | import(\"./LabelOperations\").Label\n * | import(\"./WallOperations\").Wall\n * | import(\"./SpaceOperations\").Space\n * | import(\"./TokenOperations\").Token} DungeonObject\n */\n\nconst objectOperations = [\n    new DoorOperations(),\n    new LabelOperations(),\n    new WallOperations(),\n    new SpaceOperations(),\n    new TokenOperations()\n]\n\nexport const renderObject = (graphics, dungeonObject, objectIsSelected) =>\n    objectOperations.filter(operation => operation.dungeonObjectType === dungeonObject.type).map(operation => operation.renderObject(graphics, dungeonObject, objectIsSelected))\n\nexport const createRenderObject = (dungeonObject) => {\n    return objectOperations.filter(operation => operation.dungeonObjectType === dungeonObject.type).map(operation => operation.createRenderObject())[0]\n}\n\nexport const translate = (dungeonObject, x, y) =>\n    objectOperations.filter(operation => operation.dungeonObjectType === dungeonObject.type).map(operation => operation.translate(dungeonObject, x, y))\n","export const createArrayWithUpdatedObject = (array, id, update) => {\n    return createArrayWithUpdatedObjects(array, [id], update);\n}\n\n/**\n * @param {import(\"../dungeonObjects/DungeonObject\").BaseDungeonObject[]} array\n * @param {string[]} ids\n * @param {function(object: import(\"../dungeonObjects/DungeonObject\").BaseDungeonObject) : void} update\n */\nexport const createArrayWithUpdatedObjects = (array, ids, update) => {\n    return array.map(object => {\n        if (ids.includes(object.id)) {\n            let objectCopy = {...object};\n            update(objectCopy);\n            return objectCopy;\n        }\n        else {\n            return object;\n        }\n    })\n}\n","const DUNGEON_ACTION_TYPE = {\n    NEW_DUNGEON: 'NEW_DUNGEON',\n    SET_DUNGEON_SIZE: 'SET_DUNGEON_SIZE',\n    MOVE_SELECTED_OBJECT: 'MOVE_SELECTED_OBJECT',\n    SET_SELECTED_OBJECT_TEXTURE_PATH: 'SET_SELECTED_OBJECT_TEXTURE_PATH',\n    SET_SELECTED_OBJECT_ANGLE: 'SET_SELECTED_OBJECT_ANGLE',\n    SET_SELECTED_OBJECT_LABEL: 'SET_SELECTED_OBJECT_LABEL',\n    SET_SELECTED_OBJECT_POSITION: 'SET_SELECTED_OBJECT_POSITION',\n    SET_SELECTED_OBJECT_SIZE: 'SET_SELECTED_OBJECT_SIZE',\n    SET_SELECTED_OBJECT_START: 'SET_SELECTED_OBJECT_START',\n    SET_SELECTED_OBJECT_END: 'SET_SELECTED_OBJECT_END',\n    ADD_OBJECT: 'ADD_OBJECT',\n    DELETE_OBJECTS: 'DELETE_OBJECTS'\n}\n\nexport default DUNGEON_ACTION_TYPE;\n","import { translate } from '../dungeonObjects/DungeonObjectOperations';\nimport { createSpace } from '../dungeonObjects/SpaceOperations';\nimport { createToken } from '../dungeonObjects/TokenOperations';\nimport { createWall } from '../dungeonObjects/WallOperations';\nimport { createArrayWithUpdatedObject, createArrayWithUpdatedObjects } from '../utils/createArrayWithUpdatedObject'\nimport DUNGEON_ACTION_TYPE from './dungeonActionType'\n/**\n * @typedef {defaultDungeonState} DungeonState\n */\nconst defaultDungeonState = {\n    size: {\n        width: 28,\n        height: 32\n    },\n    /** @type {import('../dungeonObjects/DungeonObjectOperations').DungeonObject[]} */\n    objects: [\n        createToken(\"/assets/stairs.png\", 2, 4, 1, 2, 0),\n        createSpace({startX: 1, startY: 1, endX: 6, endY: 6}),\n        createSpace({startX: 6, startY: 4, endX: 13, endY: 13}),\n        createSpace({startX: 15, startY: 15, endX: 21, endY: 22}),\n        createSpace({startX: 21, startY: 19, endX: 25, endY: 28}),\n        createWall(1, 1, 1, 6),\n        createWall(6, 6, 1, 6),\n        createWall(6, 13, 6, 6),\n        createWall(13, 13, 6, 13),\n        createWall(13, 4, 13, 13),\n        createWall(6, 4, 13, 4),\n        createWall(6, 1, 6, 4),\n        createWall(1, 1, 6, 1),\n        createWall(15, 15, 15, 22),\n        createWall(21, 22, 15, 22),\n        createWall(21, 15, 15, 15),\n        createWall(21, 19, 21, 15),\n        createWall(25, 19, 21, 19),\n        createWall(21, 22, 21, 28),\n        createWall(21, 28, 25, 28),\n        createWall(25, 19, 25, 28)\n    ]\n  }\n\nexport const dungeonReducer = (state = defaultDungeonState, action) => {\n    switch (action.type) {\n        case DUNGEON_ACTION_TYPE.NEW_DUNGEON: {\n            return {\n                size: {\n                    width: 24,\n                    height: 32\n                },\n                objects: []\n            }\n        }\n        case DUNGEON_ACTION_TYPE.SET_DUNGEON_SIZE: {\n            return {\n                ...state,\n                size: {\n                    width: action.width,\n                    height: action.height\n                }\n            }\n        }\n        case DUNGEON_ACTION_TYPE.MOVE_SELECTED_OBJECT: {\n            let arrayWithUpdatedObject = createArrayWithUpdatedObjects(\n                state.objects,\n                action.selectedObjectIds,\n                (object) => translate(object, action.deltaX, action.deltaY));\n            return {\n                ...state,\n                objects: arrayWithUpdatedObject\n            };\n        }\n        case DUNGEON_ACTION_TYPE.SET_SELECTED_OBJECT_TEXTURE_PATH: {\n            let arrayWithUpdatedObject = createArrayWithUpdatedObject(\n                state.objects,\n                action.selectedObject,\n                (object) => object.textureUrl = action.texturePath);\n            return {\n                ...state,\n                objects: arrayWithUpdatedObject\n            };\n        }\n        case DUNGEON_ACTION_TYPE.SET_SELECTED_OBJECT_ANGLE: {\n            let arrayWithUpdatedObject = createArrayWithUpdatedObject(\n                state.objects,\n                action.selectedObject,\n                (object) => object.angle = action.angle);\n            return {\n                ...state,\n                objects: arrayWithUpdatedObject\n            };\n        }\n        case DUNGEON_ACTION_TYPE.SET_SELECTED_OBJECT_LABEL: {\n            let arrayWithUpdatedObject = createArrayWithUpdatedObject(\n                state.objects,\n                action.selectedObject,\n                (object) => object.label = action.label);\n            return {\n                ...state,\n                objects: arrayWithUpdatedObject\n            };\n        }\n        case DUNGEON_ACTION_TYPE.SET_SELECTED_OBJECT_POSITION: {\n            let arrayWithUpdatedObject = createArrayWithUpdatedObject(\n                state.objects,\n                action.selectedObject,\n                (object) => object.position = {\n                    x: action.x,\n                    y: action.y\n                });\n            return {\n                ...state,\n                objects: arrayWithUpdatedObject\n            };\n        }\n        case DUNGEON_ACTION_TYPE.SET_SELECTED_OBJECT_SIZE: {\n            let arrayWithUpdatedObject = createArrayWithUpdatedObject(\n                state.objects,\n                action.selectedObject,\n                (object) => object.size = {\n                    width: action.width,\n                    height: action.height\n                });\n            return {\n                ...state,\n                objects: arrayWithUpdatedObject\n            };\n        }\n        case DUNGEON_ACTION_TYPE.SET_SELECTED_OBJECT_START: {\n            let arrayWithUpdatedObject = createArrayWithUpdatedObject(\n                state.objects,\n                action.selectedObject,\n                (object) => object.start = {\n                    x: action.x,\n                    y: action.y\n                });\n            return {\n                ...state,\n                objects: arrayWithUpdatedObject\n            };\n        }\n        case DUNGEON_ACTION_TYPE.SET_SELECTED_OBJECT_END: {\n            let arrayWithUpdatedObject = createArrayWithUpdatedObject(\n                state.objects,\n                action.selectedObject,\n                (object) => object.end = {\n                    x: action.x,\n                    y: action.y\n                });\n            return {\n                ...state,\n                objects: arrayWithUpdatedObject,\n            };\n\n        }\n        case DUNGEON_ACTION_TYPE.ADD_OBJECT: {\n            let objectArray = state.objects.slice();\n            objectArray = [...objectArray, action.newObject];\n            return {\n                ...state,\n                objects: objectArray\n            };\n        }\n        case DUNGEON_ACTION_TYPE.DELETE_OBJECTS: {\n            let objectIds = action.objectIds;\n            if (objectIds) {\n                let newObjectArray = state.objects\n                    .filter(object => !objectIds.includes(object.id));\n                return {\n                    ...state,\n                    objects: newObjectArray\n                }\n            }\n            else {\n                return state;\n            }\n        }\n        default:\n            return state\n    }\n};\n\nexport default dungeonReducer\n","const TOOL_TYPE = {\n    SELECT: \"select\",\n    NEW_WALL: \"new_wall\",\n    NEW_SPACE_RECTANGLE: \"new_space_rectangle\",\n    NEW_SPACE_POLYGON: \"new_space_polygon\",\n    NEW_DOOR: \"new_door\",\n    NEW_LABEL: \"new_label\",\n    NEW_TOKEN: \"new_token\"\n};\n\nexport default TOOL_TYPE;\n","import TOOL_TYPE from \"../tools/toolType\";\nimport DUNGEON_ACTION_TYPE from \"./dungeonActionType\";\nimport EDITOR_ACTION_TYPE from \"./editorActionType\";\n\n/**\n * @typedef {defaultEditorState} EditorState\n */\nexport const defaultEditorState = {\n    scrollMovesViewport: false,\n    selectedTool: TOOL_TYPE.NEW_SPACE_RECTANGLE,\n    scale: 100,\n    position: {\n        x: 0,\n        y: 0\n    },\n    mouse: {\n        mouseDown: false,\n        startPosition: {\n            x: 0,\n            y: 0\n        },\n        currentPosition: {\n            x: 0,\n            y: 0\n        }\n    },\n    keyboard: {\n        heldKeys: {}\n    },\n    /** @type {string[]} */\n    selectedObjectIds: [],\n    /** @type {?{x: number, y: number, shouldMultiSelect: boolean}} */\n    selectingAtPoint: null,\n    /** @type {?{x: number, y: number, width: number, height: number, shouldMultiSelect: boolean}} */\n    selectingInBoundingBox: null\n};\n\nexport const editorReducer = (state = defaultEditorState, action) => {\n    switch (action.type) {\n        case EDITOR_ACTION_TYPE.KEY_PRESSED: {\n            let newHeldKeys = {...state.keyboard.heldKeys};\n            newHeldKeys[action.key] = true;\n            return {\n                ...state,\n                keyboard: {\n                    ...state.keyboard,\n                    heldKeys: newHeldKeys\n                }\n            }\n        }\n        case EDITOR_ACTION_TYPE.KEY_RELEASED: {\n            let newHeldKeys = {...state.keyboard.heldKeys};\n            delete newHeldKeys[action.key];\n            return {\n                ...state,\n                keyboard: {\n                    ...state.keyboard,\n                    heldKeys: newHeldKeys\n                }\n            }\n        }\n        case EDITOR_ACTION_TYPE.PNG_EXPORTED: {\n            return {\n                ...state,\n                exportToPngClicked: null\n            }\n        }\n        case EDITOR_ACTION_TYPE.EXPORT_TO_PNG_CLICKED: {\n            return {\n                ...state,\n                exportToPngClicked: true\n            }\n        }\n        case EDITOR_ACTION_TYPE.CLEAR_ONGOING_SPACE_POLYGON: {\n            return {\n                ...state,\n                ongoingSpacePolygon: null\n            }\n        }\n        case EDITOR_ACTION_TYPE.ADD_ONGOING_SPACE_POLYGON: {\n            let newPolygonArray = [...(state.ongoingSpacePolygon ?? []), action.position]\n            return {\n                ...state,\n                ongoingSpacePolygon: newPolygonArray\n            }\n        }\n        case EDITOR_ACTION_TYPE.MOVE_VIEWPORT: {\n            return {\n                ...state,\n                position: {\n                    x: state.position.x + action.deltaX,\n                    y: state.position.y + action.deltaY\n                }\n            }\n        }\n        case EDITOR_ACTION_TYPE.SET_CURRENT_MOUSE_POSITION: {\n            return {\n                ...state,\n                mouse: {\n                    ...state.mouse,\n                    currentPosition: {\n                        x: action.x,\n                        y: action.y\n                    }\n                }\n            }\n        }\n        case EDITOR_ACTION_TYPE.SCROLL_EVENT: {\n            if (!state.scrollMovesViewport || action.holdingCtrl) {\n                let scaleDelta = 10\n                if (action.scrollY > 0) {\n                    scaleDelta *= -1\n                }\n                let minimumScale = 10;\n                let maximumScale = 200;\n                let newScale = Math.min(Math.max(state.scale + scaleDelta, minimumScale), maximumScale)\n                if (state.scale !== newScale) {\n                    return {\n                        ...state,\n                        scale: newScale,\n                        position: {\n                            x: state.position.x - (state.mouse.currentPosition.x * (scaleDelta / 100)),\n                            y: state.position.y - (state.mouse.currentPosition.y * (scaleDelta / 100)),\n                        }\n                    };\n                }\n                else {\n                    return state;\n                }\n            }\n            else {\n                let scaleDelta = 0.5;\n                return {\n                    ...state,\n                    position: {\n                        x: state.position.x - action.scrollX * scaleDelta,\n                        y: state.position.y - action.scrollY * scaleDelta\n                    }\n                };\n            }\n        }\n        case EDITOR_ACTION_TYPE.MOUSE_DOWN: {\n            return {\n                ...state,\n                mouse: {\n                    ...state.mouse,\n                    mouseDown: true,\n                    startPosition: {\n                      x: state.mouse.currentPosition.x,\n                      y: state.mouse.currentPosition.y\n                    }\n                }\n            };\n        }\n        case EDITOR_ACTION_TYPE.MOUSE_UP: {\n            return {\n                ...state,\n                mouse: {\n                    ...state.mouse,\n                    mouseDown: false\n                }\n            };\n        }\n        case EDITOR_ACTION_TYPE.SET_SCROLL_MOVES_VIEWPORT: {\n            return {\n                ...state,\n                scrollMovesViewport: action.scrollMovesViewport\n            }\n        }\n        case EDITOR_ACTION_TYPE.SELECT_TOOL: {\n            let newSelectedObjectIds = state.selectedObjectIds;\n            if (action.selectedTool !== TOOL_TYPE.SELECT) {\n                newSelectedObjectIds = [];\n            }\n            return {\n                ...state,\n                selectedTool: action.selectedTool,\n                selectedObjectIds: newSelectedObjectIds\n            };\n        }\n        case EDITOR_ACTION_TYPE.SELECT_AT_POINT: {\n            return {\n                ...state,\n                selectingAtPoint: {\n                    x: action.x,\n                    y: action.y,\n                    shouldMultiSelect: action.shouldMultiSelect\n                }\n            }\n        }\n        case EDITOR_ACTION_TYPE.SELECT_IN_BOUNDING_BOX: {\n            return {\n                ...state,\n                selectingInBoundingBox: {\n                    x: action.x,\n                    y: action.y,\n                    width: action.width,\n                    height: action.height,\n                    shouldMultiSelect: action.shouldMultiSelect\n                }\n            }\n        }\n        case EDITOR_ACTION_TYPE.SELECT_OBJECT: {\n            let newSelectedObjectIds;\n            if (action.shouldMultiSelect && state.selectedObjectIds.includes(action.objectId)) {\n                newSelectedObjectIds = state.selectedObjectIds.filter(objectId => objectId !== action.objectId);\n            }\n            else if (action.shouldMultiSelect) {\n                newSelectedObjectIds = [...state.selectedObjectIds, action.objectId];\n            }\n            else {\n                newSelectedObjectIds = [action.objectId];\n            }\n            return {\n                ...state,\n                selectedObjectIds: newSelectedObjectIds,\n                selectingAtPoint: null,\n                selectingInBoundingBox: null\n            }\n        }\n        case EDITOR_ACTION_TYPE.SELECT_OBJECTS: {\n            let newSelectedObjectIds;\n            if (action.shouldMultiSelect) {\n                newSelectedObjectIds = [...new Set([...state.selectedObjectIds, ...action.objectIds])];\n            }\n            else {\n                newSelectedObjectIds = action.objectIds;\n            }\n            return {\n                ...state,\n                selectedObjectIds: newSelectedObjectIds,\n                selectingAtPoint: null,\n                selectingInBoundingBox: null\n            };\n        }\n        case DUNGEON_ACTION_TYPE.DELETE_OBJECTS: {\n            return {\n                ...state,\n                selectedObjectIds: []\n            }\n        }\n        case DUNGEON_ACTION_TYPE.ADD_OBJECT: {\n            return {\n                ...state,\n                selectedObjectIds: [action.newObject.id]\n            }\n        }\n        default: {\n            return {\n                ...state\n            }\n        }\n    }\n}\n","import { combineReducers } from 'redux'\nimport dungeonReducer from './dungeonReducer'\nimport { editorReducer } from './editorReducer'\n\n/**\n * @typedef {{\n *  editor: import('./editorReducer').EditorState,\n *  dungeon: import('./dungeonReducer').DungeonState\n * }} State\n */\n\nexport default combineReducers({\n    editor: editorReducer,\n    dungeon: dungeonReducer\n})\n","import { createStore } from 'redux';\nimport reducer from './reducers/index'\n\nconst store = createStore(reducer,\n  {},\n  typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nexport default store;\n","import DUNGEON_ACTION_TYPE from \"./dungeonActionType\";\n\nexport const clearDungeon = () => ({\n    type: DUNGEON_ACTION_TYPE.NEW_DUNGEON\n})\n\n/**\n * @param {import('../dungeonObjects/DungeonObjectOperations').DungeonObject} object\n */\nexport const addObject = (object) => ({\n    type: DUNGEON_ACTION_TYPE.ADD_OBJECT,\n    newObject: object\n})\n\nexport const deleteObjects = (objectIds) => ({\n    type: DUNGEON_ACTION_TYPE.DELETE_OBJECTS,\n    objectIds\n})\n\nexport const moveObjects = (selectedObjectIds, deltaX, deltaY) => ({\n    type: DUNGEON_ACTION_TYPE.MOVE_SELECTED_OBJECT,\n    selectedObjectIds,\n    deltaX: deltaX,\n    deltaY: deltaY\n})\n\nexport const setSelectedObjectTextureUrl = (selectedObject, texturePath) => ({\n    type: DUNGEON_ACTION_TYPE.SET_SELECTED_OBJECT_TEXTURE_PATH,\n    selectedObject,\n    texturePath: texturePath\n})\n\nexport const setSelectedObjectLabel = (selectedObject, label) => ({\n    type: DUNGEON_ACTION_TYPE.SET_SELECTED_OBJECT_LABEL,\n    selectedObject,\n    label: label\n})\n\nexport const setSelectedObjectPosition = (selectedObject, x, y) => ({\n    type: DUNGEON_ACTION_TYPE.SET_SELECTED_OBJECT_POSITION,\n    selectedObject,\n    x: x,\n    y: y\n})\n\nexport const setSelectedObjectSize = (selectedObject, width, height) => ({\n    type: DUNGEON_ACTION_TYPE.SET_SELECTED_OBJECT_SIZE,\n    selectedObject,\n    width: width,\n    height: height\n})\n\nexport const setSelectedObjectStart = (selectedObject, x, y) => ({\n    type: DUNGEON_ACTION_TYPE.SET_SELECTED_OBJECT_START,\n    selectedObject,\n    x: x,\n    y: y\n})\n\nexport const setSelectedObjectEnd = (selectedObject, x, y) => ({\n    type: DUNGEON_ACTION_TYPE.SET_SELECTED_OBJECT_END,\n    selectedObject,\n    x: x,\n    y: y\n})\n\nexport const setSelectedObjectAngle = (selectedObject, angle) => ({\n    type: DUNGEON_ACTION_TYPE.SET_SELECTED_OBJECT_ANGLE,\n    selectedObject,\n    angle: angle\n})\n\nexport const setDungeonSize = (width, height) => ({\n    type: DUNGEON_ACTION_TYPE.SET_DUNGEON_SIZE,\n    width: width,\n    height: height\n})\n","const square = (x) => x * x;\n\nexport const lineLength = (v, w) => Math.sqrt(square(v.x - w.x) + square(v.y - w.y));\n\nexport const getClosestPointOnLine = (p, a, b) => {\n\n    var atob = { x: b.x - a.x, y: b.y - a.y };\n    var atop = { x: p.x - a.x, y: p.y - a.y };\n    var len = atob.x * atob.x + atob.y * atob.y;\n    var dot = atop.x * atob.x + atop.y * atob.y;\n    var t = Math.min( 1, Math.max( 0, dot / len ) );\n    return {\n        x: a.x + atob.x * t,\n        y: a.y + atob.y * t\n    };\n}\n\n/**\n * @typedef {{x: number, y: number, width: number, height: number}} Rectangle\n * @param {Rectangle} rect1\n * @param {Rectangle} rect2\n */\nexport const doRectanglesIntersect = (rect1, rect2) => {\n    let x = Math.max(rect1.x, rect2.x);\n    let num1 = Math.min(rect1.x + rect1.width, rect2.x + rect2.width);\n    let y = Math.max(rect1.y, rect2.y);\n    let num2 = Math.min(rect1.y + rect1.height, rect2.y + rect2.height);\n    if (num1 >= x && num2 >= y)\n      return true;\n    else\n      return false;\n}\n","import * as PIXI from 'pixi.js';\nimport { createDoor } from \"../dungeonObjects/DoorOperations\";\nimport { WALL_TYPE } from \"../dungeonObjects/WallOperations\";\nimport { addObject } from \"../reducers/dungeonActions\";\nimport { GRID_TILE_SIZE } from \"../utils/constants\";\nimport { getClosestPointOnLine, lineLength } from \"../utils/geometry\";\n\nexport default class AddDoorTool {\n    onMouseUp(store) {\n        let state = store.getState();\n        let mousePoint = state.editor.mouse.currentPosition;\n        let minDistance = 25;\n        let snapPoint = null;\n        let minWallId = null;\n        state.dungeon.objects\n            .filter(object => object.type === WALL_TYPE)\n            .forEach(wall =>{\n                // try each point and get the shortest distance\n                let scaledStart = {\n                    x: wall.start.x * GRID_TILE_SIZE,\n                    y: wall.start.y * GRID_TILE_SIZE\n                };\n                let scaledEnd = {\n                    x: wall.end.x * GRID_TILE_SIZE,\n                    y: wall.end.y * GRID_TILE_SIZE\n                }\n                let closestPoint = getClosestPointOnLine({\n                        x: state.editor.mouse.startPosition.x,\n                        y: state.editor.mouse.startPosition.y\n                    }, scaledStart, scaledEnd);\n                // if the shortest distance of one is < snapping threshold, snap to it\n                let distance = lineLength(closestPoint, {\n                    x: state.editor.mouse.startPosition.x,\n                    y: state.editor.mouse.startPosition.y\n                });\n                if (!minDistance || distance < minDistance) {\n                    minDistance = distance;\n                    snapPoint = closestPoint;\n                    minWallId = wall.id;\n                }\n            });\n\n        let doorWall = state.dungeon.objects.find(wall => wall.id === minWallId);\n\n        if (!doorWall) {\n            return;\n        }\n\n        let scaledStart = {\n            x: doorWall.start.x * GRID_TILE_SIZE,\n            y: doorWall.start.y * GRID_TILE_SIZE\n        };\n        let scaledEnd = {\n            x: doorWall.end.x * GRID_TILE_SIZE,\n            y: doorWall.end.y * GRID_TILE_SIZE\n        }\n        let endPoint = getClosestPointOnLine(mousePoint, scaledStart, scaledEnd);\n        store.dispatch(addObject(createDoor(\n            snapPoint.x / GRID_TILE_SIZE,\n            snapPoint.y / GRID_TILE_SIZE,\n            endPoint.x / GRID_TILE_SIZE,\n            endPoint.y / GRID_TILE_SIZE)));\n    }\n\n    renderTool(state, graphics) {\n        let mousePoint = state.editor.mouse.currentPosition;\n        if (!state.editor.mouse.mouseDown) {\n            // try to snap to the nearest line:\n            // for each line, get the nearest point on the line\n            let minDistance = 25;\n            let snapPoint = null;\n            state.dungeon.objects\n                .filter(object => object.type === WALL_TYPE)\n                .forEach(wall => {\n                    // try each point and get the shortest distance\n                    let scaledStart = {\n                        x: wall.start.x * GRID_TILE_SIZE,\n                        y: wall.start.y * GRID_TILE_SIZE\n                    };\n                    let scaledEnd = {\n                        x: wall.end.x * GRID_TILE_SIZE,\n                        y: wall.end.y * GRID_TILE_SIZE\n                    }\n                    let closestPoint = getClosestPointOnLine(mousePoint, scaledStart, scaledEnd);\n                    // if the shortest distance of one is < snapping threshold, snap to it\n                    let distance = lineLength(closestPoint, mousePoint);\n                    if (!minDistance || distance < minDistance) {\n                        minDistance = distance;\n                        snapPoint = closestPoint;\n                    }\n                });\n            if (snapPoint) {\n                graphics.lineStyle();\n                graphics.beginFill(0xfffd00);\n                graphics.drawCircle(snapPoint.x, snapPoint.y, 2.5);\n                graphics.endFill();\n            }\n        }\n        else {\n            let minDistance = 25;\n            let snapPoint = null;\n            let minWallId = null;\n            state.dungeon.objects\n                .filter(object => object.type === WALL_TYPE)\n                .forEach(wall => {\n                    // try each point and get the shortest distance\n                    let scaledStart = {\n                        x: wall.start.x * GRID_TILE_SIZE,\n                        y: wall.start.y * GRID_TILE_SIZE\n                    };\n                    let scaledEnd = {\n                        x: wall.end.x * GRID_TILE_SIZE,\n                        y: wall.end.y * GRID_TILE_SIZE\n                    }\n                    let closestPoint = getClosestPointOnLine({\n                            x: state.editor.mouse.startPosition.x,\n                            y: state.editor.mouse.startPosition.y\n                        }, scaledStart, scaledEnd);\n                    // if the shortest distance of one is < snapping threshold, snap to it\n                    let distance = lineLength(closestPoint, {\n                        x: state.editor.mouse.startPosition.x,\n                        y: state.editor.mouse.startPosition.y\n                    });\n                    if (!minDistance || distance < minDistance) {\n                        minDistance = distance;\n                        snapPoint = closestPoint;\n                        minWallId = wall.id;\n                    }\n                });\n            // draw a line from the start point\n            if (!snapPoint) {\n                return;\n            }\n\n            let startX = snapPoint.x;\n            let startY = snapPoint.y;\n\n            let doorWall = state.dungeon.objects.find(wall => wall.id === minWallId);\n            let scaledStart = {\n                x: doorWall.start.x * GRID_TILE_SIZE,\n                y: doorWall.start.y * GRID_TILE_SIZE\n            };\n            let scaledEnd = {\n                x: doorWall.end.x * GRID_TILE_SIZE,\n                y: doorWall.end.y * GRID_TILE_SIZE\n            }\n            let endPoint = getClosestPointOnLine(mousePoint, scaledStart, scaledEnd);\n\n            let endX = endPoint.x;\n            let endY = endPoint.y;\n\n            graphics.lineStyle(5, 0xfffd00);\n            graphics.line.cap = PIXI.LINE_CAP.ROUND;\n            graphics.moveTo(startX, startY);\n            graphics.lineTo(endX, endY);\n            graphics.lineStyle();\n        }\n    }\n}\n","import { GRID_TILE_SIZE } from \"../utils/constants\";\nimport { addObject } from \"../reducers/dungeonActions\";\nimport { createLabel } from \"../dungeonObjects/LabelOperations\";\n\nexport default class AddLabelTool {\n    onMouseUp(store) {\n        let state = store.getState();\n        let mousePoint = state.editor.mouse.currentPosition;\n        let dungeonSpaceX = mousePoint.x / GRID_TILE_SIZE;\n        let dungeonSpaceY = mousePoint.y / GRID_TILE_SIZE;\n        store.dispatch(addObject(createLabel(dungeonSpaceX, dungeonSpaceY, \"Text Label\")));\n    }\n\n    renderTool(state, graphics) {\n    }\n}\n","import { GRID_TILE_SIZE } from \"../utils/constants\";\nimport { addObject } from \"../reducers/dungeonActions\";\nimport { createSpace } from \"../dungeonObjects/SpaceOperations\";\n\nexport default class AddSpaceRectangleTool {\n\n    onMouseUp(store) {\n        let state = store.getState();\n        let mousePoint = state.editor.mouse.currentPosition;\n        let startX = Math.floor(Math.min(state.editor.mouse.startPosition.x, mousePoint.x) / GRID_TILE_SIZE);\n        let startY = Math.floor(Math.min(state.editor.mouse.startPosition.y, mousePoint.y) / GRID_TILE_SIZE);\n        let endX = Math.ceil(Math.max(state.editor.mouse.startPosition.x, mousePoint.x) / GRID_TILE_SIZE);\n        let endY = Math.ceil(Math.max(state.editor.mouse.startPosition.y, mousePoint.y) / GRID_TILE_SIZE);\n        store.dispatch(addObject(createSpace({ startX, startY, endX, endY})));\n    }\n\n    renderTool(state, graphics) {\n        let mousePoint = state.editor.mouse.currentPosition;\n        let snappedX, snappedY, width, height;\n        if (state.editor.mouse.mouseDown) {\n            let startX = Math.min(state.editor.mouse.startPosition.x, mousePoint.x);\n            let startY = Math.min(state.editor.mouse.startPosition.y, mousePoint.y);\n            let endX = Math.max(state.editor.mouse.startPosition.x, mousePoint.x);\n            let endY = Math.max(state.editor.mouse.startPosition.y, mousePoint.y);\n            snappedX = Math.floor(startX / GRID_TILE_SIZE) * GRID_TILE_SIZE;\n            snappedY = Math.floor(startY / GRID_TILE_SIZE) * GRID_TILE_SIZE;\n            endX = Math.floor(endX / GRID_TILE_SIZE) * GRID_TILE_SIZE + GRID_TILE_SIZE;\n            endY = Math.floor(endY / GRID_TILE_SIZE) * GRID_TILE_SIZE + GRID_TILE_SIZE;\n            width = endX - snappedX;\n            height = endY - snappedY;\n        }\n        else {\n            // snap to nearest grid point\n            // for now for simplicity let's say top left\n            snappedX = Math.floor(mousePoint.x / GRID_TILE_SIZE) * GRID_TILE_SIZE;\n            snappedY = Math.floor(mousePoint.y / GRID_TILE_SIZE) * GRID_TILE_SIZE;\n            width = GRID_TILE_SIZE;\n            height = GRID_TILE_SIZE;\n        }\n        // draw a hover rect\n        graphics.beginFill(0, 0);\n        graphics.lineStyle(1, 0xfffd00);\n        graphics.drawRect(snappedX, snappedY, width, height);\n        graphics.endFill();\n    }\n}\n","import * as PIXI from 'pixi.js';\nimport { createWall } from \"../dungeonObjects/WallOperations\";\nimport { addObject } from \"../reducers/dungeonActions\";\nimport { GRID_TILE_SIZE } from \"../utils/constants\";\n\nexport default class AddWallTool {\n    onMouseUp(store) {\n        let state = store.getState();\n        let mousePoint = state.editor.mouse.currentPosition;\n        let startX = Math.round(state.editor.mouse.startPosition.x / GRID_TILE_SIZE);\n        let startY = Math.round(state.editor.mouse.startPosition.y / GRID_TILE_SIZE);\n        let endX = Math.round(mousePoint.x / GRID_TILE_SIZE);\n        let endY = Math.round(mousePoint.y / GRID_TILE_SIZE);\n        store.dispatch(addObject(createWall(startX, startY, endX, endY)));\n    }\n\n    renderTool(state, graphics) {\n        let mousePoint = state.editor.mouse.currentPosition;\n        if (state.editor.mouse.mouseDown) {\n            let startX = Math.round(state.editor.mouse.startPosition.x / GRID_TILE_SIZE) * GRID_TILE_SIZE;\n            let startY = Math.round(state.editor.mouse.startPosition.y / GRID_TILE_SIZE) * GRID_TILE_SIZE;\n            let endX = Math.round(mousePoint.x / GRID_TILE_SIZE) * GRID_TILE_SIZE;\n            let endY = Math.round(mousePoint.y / GRID_TILE_SIZE) * GRID_TILE_SIZE;\n            graphics.lineStyle(5, 0xfffd00);\n            graphics.line.cap = PIXI.LINE_CAP.ROUND;\n            graphics.moveTo(startX, startY);\n            graphics.lineTo(endX, endY);\n            graphics.lineStyle();\n            graphics.endFill();\n        }\n        else {\n            // get nearest center point\n            let hoverX = Math.round(mousePoint.x / GRID_TILE_SIZE) * GRID_TILE_SIZE;\n            let hoverY = Math.round(mousePoint.y / GRID_TILE_SIZE) * GRID_TILE_SIZE;\n\n            graphics.lineStyle();\n            graphics.beginFill(0xfffd00);\n            graphics.drawCircle(hoverX, hoverY, 2.5);\n            graphics.endFill();\n        }\n    }\n}\n","import { selectAtPoint, selectInBoundingBox } from \"../reducers/editorActions\";\n\nconst DRAG_THRESHOLD = 5;\n\nconst isDragging = (startPosition, endPosition) => {\n    return Math.abs(endPosition.x - startPosition.x) > DRAG_THRESHOLD ||\n        Math.abs(endPosition.y - startPosition.y) > DRAG_THRESHOLD;\n}\n\nconst createRectangle = (startPosition, endPosition) => ({\n    x: Math.min(startPosition.x, endPosition.x),\n    y: Math.min(startPosition.y, endPosition.y),\n    width: Math.abs(endPosition.x - startPosition.x),\n    height: Math.abs(endPosition.y - startPosition.y)\n})\n\nexport default class SelectTool {\n    onMouseUp(store) {\n        /** @type {import(\"../reducers\").State} */\n        let state = store.getState();\n\n        const startPosition = state.editor.mouse.startPosition;\n        const endPosition = state.editor.mouse.currentPosition;\n        const shouldAddToSelection = state.editor.keyboard.heldKeys[\"Shift\"];\n\n        if (isDragging(startPosition, endPosition)) {\n            let boundingRectangle = createRectangle(startPosition, endPosition);\n            store.dispatch(selectInBoundingBox(\n                boundingRectangle.x,\n                boundingRectangle.y,\n                boundingRectangle.width,\n                boundingRectangle.height,\n                shouldAddToSelection))\n        }\n        else {\n            store.dispatch(selectAtPoint(endPosition.x, endPosition.y, shouldAddToSelection))\n        }\n    }\n\n    /**\n     * @param {import(\"../reducers\").State} state\n     * @param {PIXI.Graphics} graphics\n     */\n    renderTool(state, graphics) {\n        const startPosition = state.editor.mouse.startPosition;\n        const endPosition = state.editor.mouse.currentPosition;\n\n        if (state.editor.mouse.mouseDown && isDragging(startPosition, endPosition)) {\n            let boundingRectangle = createRectangle(startPosition, endPosition);\n            graphics.lineStyle(1, 0xfffd00)\n                .drawRect(boundingRectangle.x, boundingRectangle.y, boundingRectangle.width, boundingRectangle.height)\n                .lineStyle();\n        }\n    }\n}\n","import { GRID_TILE_SIZE } from \"../utils/constants\";\nimport { addObject } from \"../reducers/dungeonActions\";\nimport { addOngoingSpacePolygonPoint, clearOngoingSpacePolygonPoint } from '../reducers/editorActions'\nimport { createSpace } from \"../dungeonObjects/SpaceOperations\";\n\nexport default class AddSpacePolygonTool {\n\n    onMouseUp(store) {\n        let state = store.getState();\n        let mousePoint = state.editor.mouse.currentPosition;\n        let x = Math.round(mousePoint.x / GRID_TILE_SIZE);\n        let y = Math.round(mousePoint.y / GRID_TILE_SIZE);\n\n        let firstPoint = state.editor.ongoingSpacePolygon?.[0];\n        if (firstPoint && firstPoint.x === x && firstPoint.y === y ) {\n            // close it out\n            let pointArray = state.editor.ongoingSpacePolygon;\n            store.dispatch(clearOngoingSpacePolygonPoint());\n            store.dispatch(addObject(createSpace({points: pointArray})));\n        }\n        else {\n            store.dispatch(addOngoingSpacePolygonPoint(x, y));\n        }\n    }\n\n    renderTool(state, graphics) {\n        // if there's no ongoing polygon, just snap to a corner\n        let mousePoint = state.editor.mouse.currentPosition;\n        // get nearest center point\n        let hoverX = Math.round(mousePoint.x / GRID_TILE_SIZE) * GRID_TILE_SIZE;\n        let hoverY = Math.round(mousePoint.y / GRID_TILE_SIZE) * GRID_TILE_SIZE;\n\n        if (!state.editor.ongoingSpacePolygon) {\n            graphics.lineStyle();\n            graphics.beginFill(0xfffd00);\n            graphics.drawCircle(hoverX, hoverY, 2.5);\n            graphics.endFill();\n        }\n        else {\n            graphics.lineStyle(2, 0xfffd00);\n            let firstPoint = state.editor.ongoingSpacePolygon[0];\n            graphics.moveTo(\n                firstPoint.x * GRID_TILE_SIZE,\n                firstPoint.y * GRID_TILE_SIZE);\n            for (let index = 1; index < state.editor.ongoingSpacePolygon.length; index++) {\n                const point = state.editor.ongoingSpacePolygon[index];\n                graphics.lineTo(point.x * GRID_TILE_SIZE, point.y * GRID_TILE_SIZE);\n            }\n            graphics.lineTo(hoverX, hoverY);\n            // then draw to where mouse is hovering over\n            graphics.lineStyle();\n        }\n    }\n}\n","import { GRID_TILE_SIZE } from '../utils/constants';\nimport { addObject } from '../reducers/dungeonActions';\nimport { createToken } from '../dungeonObjects/TokenOperations';\n\nexport default class AddTokenTool {\n    // TODO: Make this configurable based on the currently selected token or something along those lines\n    tokenTextureUrl = '/assets/stairs.png';\n    height = 2;\n    width = 1;\n\n    onMouseUp(store) {\n        let state = store.getState();\n        let mousePoint = state.editor.mouse.currentPosition;\n        let snappedX, snappedY;\n\n        // snap to nearest grid point\n        // for now for simplicity let's say top left\n        snappedX = Math.floor(mousePoint.x / GRID_TILE_SIZE);\n        snappedY = Math.floor(mousePoint.y / GRID_TILE_SIZE);\n\n        store.dispatch(addObject(createToken(\n            this.tokenTextureUrl,\n            snappedX,\n            snappedY,\n            this.width,\n            this.height,\n            0\n        )));\n    }\n\n    renderTool(state, graphics) {\n        // preview the sprite in the current location\n        let mousePoint = state.editor.mouse.currentPosition;\n        let snappedX, snappedY;\n\n        // snap to nearest grid point\n        // for now for simplicity let's say top left\n        snappedX = Math.floor(mousePoint.x / GRID_TILE_SIZE) * GRID_TILE_SIZE;\n        snappedY = Math.floor(mousePoint.y / GRID_TILE_SIZE) * GRID_TILE_SIZE;\n\n        // draw a hover rect\n        graphics.beginFill(0, 0);\n        graphics.lineStyle(1, 0xfffd00);\n        graphics.drawRect(snappedX, snappedY, this.width * GRID_TILE_SIZE, this.height * GRID_TILE_SIZE);\n        graphics.endFill();\n    }\n}\n","import AddDoorTool from \"./AddDoorTool\";\nimport AddLabelTool from \"./AddLabelTool\";\nimport AddSpaceRectangleTool from \"./AddSpaceRectangleTool\";\nimport AddWallTool from \"./AddWallTool\";\nimport SelectTool from \"./SelectTool\";\nimport TOOL_TYPE from \"./toolType\";\nimport AddSpacePolygonTool from \"./AddSpacePolygonTool\";\nimport AddTokenTool from \"./AddTokenTool\";\n\nconst toolMap = {\n    [TOOL_TYPE.NEW_DOOR]: new AddDoorTool(),\n    [TOOL_TYPE.NEW_SPACE_RECTANGLE]: new AddSpaceRectangleTool(),\n    [TOOL_TYPE.NEW_SPACE_POLYGON]: new AddSpacePolygonTool(),\n    [TOOL_TYPE.NEW_WALL]: new AddWallTool(),\n    [TOOL_TYPE.SELECT]: new SelectTool(),\n    [TOOL_TYPE.NEW_LABEL]: new AddLabelTool(),\n    [TOOL_TYPE.NEW_TOKEN]: new AddTokenTool()\n}\n\nexport const onMouseUp = (store) => {\n    let state = store.getState();\n    toolMap[state.editor.selectedTool].onMouseUp(store);\n}\n\nexport const renderTool = (state, graphics) => {\n    toolMap[state.editor.selectedTool].renderTool(state, graphics);\n}\n","let download = (data, filename) => {\n    let downloadLink = document.createElement(\"a\");\n    downloadLink.href = data;\n    downloadLink.download = filename;\n    downloadLink.target = \"_blank\"\n    downloadLink.click();\n}\n\nexport default download;\n","import { pngExported, selectObject, selectObjects, setCurrentMousePosition } from \"../reducers/editorActions\";\nimport store from '../store.js';\nimport { GRID_TILE_SIZE } from '../utils/constants';\nimport * as ToolRouter from '../tools/ToolRouter';\nimport * as DungeonObjectOperations from '../dungeonObjects/DungeonObjectOperations'\nimport download from \"../utils/download\";\nimport * as PIXI from 'pixi.js'\nimport { doRectanglesIntersect } from \"../utils/geometry\";\n\n/**\n * @param {PIXI.Application} app\n * @param {PIXI.Graphics} graphics\n */\nexport const render = (app, graphics) => {\n    /**\n     * @type {import(\"../reducers\").State}\n     */\n    let state = store.getState();\n\n    handlePanning(app, state);\n    handleScaling(state, app);\n\n    handleSelecting(state, app);\n\n    graphics.clear();\n\n    drawDungeonObjects(app.stage, state);\n    drawGrid(graphics, state.dungeon.size.width, state.dungeon.size.height);\n\n    handleExporting(state, app);\n\n    if (app.renderer.plugins.interaction.mouseOverRenderer) {\n        ToolRouter.renderTool(state, graphics);\n\n        let mousePosition = app.renderer.plugins.interaction.mouse.getLocalPosition(app.stage);\n        store.dispatch(setCurrentMousePosition(mousePosition.x, mousePosition.y));\n    }\n    else {\n        store.dispatch(setCurrentMousePosition(null, null));\n    }\n}\nexport default render;\n\nconst drawDungeonObjects = (container, state) => {\n    let objectIdMap = state.dungeon.objects.reduce((map, object) => {\n        map[object.id] = object;\n        return map;\n    }, {});\n\n    let containerObjectIds = new Set(container.children.map(child => child.id));\n    let stateObjectIds = Object.keys(objectIdMap);\n    stateObjectIds.forEach(objectId => {\n        if (!containerObjectIds.has(objectId)) {\n            let newChildGraphics = DungeonObjectOperations.createRenderObject(objectIdMap[objectId]);\n            newChildGraphics.id = objectId;\n            newChildGraphics.interactive = true;\n            container.addChild(newChildGraphics);\n        }\n    });\n\n    // Sync all child graphics with state\n    container.children.forEach(graphics => {\n        if (graphics.id) {\n            let object = objectIdMap[graphics.id];\n            if (object) {\n                DungeonObjectOperations.renderObject(graphics, object, state.editor.selectedObjectIds.includes(graphics.id))\n            }\n            else {\n                container.removeChild(graphics);\n            }\n        }\n    });\n}\n\nconst drawGrid = (graphics, gridWidth, gridHeight) => {\n    graphics.lineStyle(1, 0x444444, 1, 0.5);\n    for (let i = 0; i <= gridWidth; i++) {\n        graphics.moveTo(i * GRID_TILE_SIZE, 0);\n        graphics.lineTo(i * GRID_TILE_SIZE, gridHeight * GRID_TILE_SIZE);\n    }\n\n    for (let j = 0; j <= gridHeight; j++) {\n        graphics.moveTo(0, j * GRID_TILE_SIZE);\n        graphics.lineTo(gridWidth * GRID_TILE_SIZE, j * GRID_TILE_SIZE);\n    }\n}\n\nfunction handleExporting(state, app) {\n    if (state.editor.exportToPngClicked) {\n        exportImage(app);\n    }\n}\n\nfunction handleSelecting(state, app) {\n    if (state.editor.selectingAtPoint) {\n        let mousePoint = new PIXI.Point(\n            state.editor.selectingAtPoint.x,\n            state.editor.selectingAtPoint.y);\n        let globalPosition = app.stage.worldTransform.apply(mousePoint);\n        let selectedObject = app.renderer.plugins.interaction.hitTest(\n            globalPosition);\n\n        if (selectedObject) {\n            store.dispatch(selectObject(selectedObject.id, state.editor.selectingAtPoint.shouldMultiSelect));\n        }\n        else {\n            store.dispatch(selectObjects([], false));\n        }\n    }\n    else if (state.editor.selectingInBoundingBox) {\n        let objectIdsToSelect = [];\n        app.stage.children.forEach(child => {\n            if (doRectanglesIntersect(child.getLocalBounds(), state.editor.selectingInBoundingBox) && child.id) {\n                objectIdsToSelect.push(child.id);\n            }\n        });\n        if (objectIdsToSelect.length > 0) {\n            store.dispatch(selectObjects(objectIdsToSelect, state.editor.selectingInBoundingBox.shouldMultiSelect));\n        }\n        else {\n            store.dispatch(selectObjects([], false));\n        }\n    }\n}\n\nfunction handleScaling(state, app) {\n    let fractionalScale = state.editor.scale / 100;\n    if (app.stage.scale.x !== fractionalScale) {\n        app.stage.scale.set(fractionalScale);\n    }\n}\n\nfunction handlePanning(app, state) {\n    app.stage.position.set(state.editor.position.x, state.editor.position.y);\n}\n\nfunction exportImage(app) {\n    let exportTexture = app.renderer.generateTexture(app.stage,\n        null,\n        1.0 / app.stage.scale.x,\n        new PIXI.Rectangle(\n            app.stage.position.x - 1,\n            app.stage.position.y - 1,\n            app.stage.width,\n            app.stage.height\n        ));\n    download(app.renderer.extract.base64(exportTexture), \"dungeon.png\");\n    store.dispatch(pngExported());\n}\n","import { deleteObjects, moveObjects } from \"../reducers/dungeonActions\"\nimport { keyPressed, keyReleased } from \"../reducers/editorActions\";\n\n/**\n * @param {KeyboardEvent} keyboardEvent\n * @param {import(\"redux\").Store} store\n */\nexport const handleKeyPressed = (keyboardEvent, store) => {\n    if (!keyboardEvent.repeat) {\n        store.dispatch(keyPressed(keyboardEvent.key));\n    }\n    let state = store.getState();\n    switch (keyboardEvent.key) {\n        case 'Delete':\n            return store.dispatch(deleteObjects(state.editor.selectedObjectIds));\n        case 'ArrowLeft':\n            return store.dispatch(moveObjects(state.editor.selectedObjectIds, -1, 0));\n        case 'ArrowRight':\n            return store.dispatch(moveObjects(state.editor.selectedObjectIds, 1, 0));\n        case 'ArrowDown':\n            return store.dispatch(moveObjects(state.editor.selectedObjectIds, 0, 1));\n        case 'ArrowUp':\n            return store.dispatch(moveObjects(state.editor.selectedObjectIds, 0, -1));\n        default:\n            return;\n    }\n}\n\n/**\n * @param {KeyboardEvent} keyboardEvent\n * @param {import(\"redux\").Store} store\n */\nexport const handleKeyReleased = (keyboardEvent, store) => {\n    store.dispatch(keyReleased(keyboardEvent.key));\n}\n","import { mouseDown, mouseUp, moveViewport, scroll } from \"../reducers/editorActions\";\nimport * as ToolRouter from '../tools/ToolRouter';\n\nexport const handleMouseDown = (mouseEvent, store) => {\n    if (mouseEvent.buttons === 1) {\n        store.dispatch(mouseDown());\n    }\n}\n\nexport const handleMouseUp = (mouseEvent, store) => {\n    let state = store.getState();\n    if (state.editor.mouse.mouseDown) {\n        store.dispatch(mouseUp());\n        ToolRouter.onMouseUp(store);\n    }\n}\n\nexport const handleMouseMove = (mouseEvent, store) => {\n    if (mouseEvent.buttons === 2) {\n        store.dispatch(moveViewport(mouseEvent.movementX, mouseEvent.movementY));\n    }\n}\n\nexport const handleWheelEvent = (wheelEvent, store) => {\n    store.dispatch(scroll(\n        wheelEvent.deltaX,\n        wheelEvent.deltaY,\n        wheelEvent.getModifierState('Control')));\n}\n","import * as PIXI from 'pixi.js';\nimport React from 'react';\nimport { render as renderDungeon } from '../rendering/DungeonRenderer';\nimport store from '../store.js';\nimport { handleKeyPressed, handleKeyReleased } from '../utils/keyboardEventHandlers.js';\nimport * as MouseEventHandler from '../utils/mouseEventHandlers.js';\n\nexport default class DungeonEditor extends React.Component {\n    render() {\n        return <div\n            style={{ height: \"85vh\" }}\n            tabIndex={-1}\n            ref={(element) => this.canvasDiv = element}>\n        </div>\n    }\n\n    componentDidMount() {\n        const app = new PIXI.Application({\n            backgroundColor: 0x5f5f5f,\n            sharedLoader: true,\n            sharedTicker: true,\n            antialias: true\n        });\n        this.app = app;\n        this.canvasDiv.appendChild(app.view);\n        this.app.resizeTo = this.canvasDiv;\n        this.app.resize();\n\n        let graphics = new PIXI.Graphics();\n        graphics.zIndex = Number.MAX_SAFE_INTEGER;\n        app.stage.sortableChildren = true;\n        app.stage.addChild(graphics);\n\n        this.setupInteractions()\n\n        app.ticker.add(() => {\n            renderDungeon(app, graphics);\n        });\n    }\n\n    setupInteractions() {\n        this.canvasDiv.addEventListener(\"wheel\", (wheelEvent) => {\n            MouseEventHandler.handleWheelEvent(wheelEvent, store);\n            wheelEvent.preventDefault();\n        });\n        this.canvasDiv.addEventListener('contextmenu', (event) => {\n            event.preventDefault();\n        });\n        this.canvasDiv.addEventListener('pointerdown', (event) => {\n            MouseEventHandler.handleMouseDown(event, store);\n        });\n        this.canvasDiv.addEventListener('pointerup', (event) => {\n            MouseEventHandler.handleMouseUp(event, store);\n        });\n        this.canvasDiv.addEventListener('pointermove', (pointerEvent) => {\n            MouseEventHandler.handleMouseMove(pointerEvent, store);\n        });\n        this.canvasDiv.addEventListener('keydown', (event) => {\n            handleKeyPressed(event, store);\n        });\n        this.canvasDiv.addEventListener('keyup', (event) => {\n            handleKeyReleased(event, store);\n        })\n    }\n}\n","import React from 'react'\n\nconst StateEditorCard = ({title, children}) =>\n    <div className=\"card bg-dark text-light border-secondary mb-3\">\n        <div className=\"card-header border-secondary\">\n            <h5>{title}</h5>\n        </div>\n        <div className=\"card-body\">\n            <div className=\"form-group\">\n                {children}\n            </div>\n        </div>\n    </div>\n\nexport default StateEditorCard\n","import React from 'react'\nimport StateEditorCard from './StateEditorCard'\n\nconst PositionEditor = ({ title, x, y, onUpdate }) =>\n    <StateEditorCard title={title ?? 'Position'}>\n        <label>\n            X:\n            <input\n                className=\"form-control bg-secondary text-light\"\n                type=\"number\"\n                value={x}\n                onChange={(changeEvent) => onUpdate(\n                    parseInt(changeEvent.target.value),\n                    y\n                )}>\n            </input>\n        </label>\n        <label>\n            Y:\n            <input\n                className=\"form-control bg-secondary text-light\"\n                type=\"number\"\n                value={y}\n                onChange={(changeEvent) => onUpdate(\n                    x,\n                    parseInt(changeEvent.target.value)\n                )}>\n            </input>\n        </label>\n    </StateEditorCard>\n\nexport default PositionEditor","import React from 'react'\nimport StateEditorCard from './StateEditorCard'\n\nconst SizeEditor = ({ title, width, height, onUpdate }) =>\n    <StateEditorCard title={title ?? 'Size'}>\n        <label>\n            Width:\n            <input\n                className=\"form-control bg-secondary text-light\"\n                type=\"number\"\n                value={width}\n                onChange={(changeEvent) => onUpdate(\n                    parseInt(changeEvent.target.value),\n                    height\n                )}>\n            </input>\n        </label>\n        <label>\n            Height:\n            <input\n                className=\"form-control bg-secondary text-light\"\n                type=\"number\"\n                value={height}\n                onChange={(changeEvent) => onUpdate(\n                    width,\n                    parseInt(changeEvent.target.value)\n                )}>\n            </input>\n        </label>\n    </StateEditorCard>\n\nexport default SizeEditor","import React from \"react\"\nimport { connect } from 'react-redux'\nimport * as DungeonActions from '../reducers/dungeonActions'\nimport * as EditorActions from '../reducers/editorActions'\nimport PositionEditor from \"./PositionEditor\"\nimport SizeEditor from \"./SizeEditor\"\nimport StateEditorCard from \"./StateEditorCard\"\n\nlet StateEditor = ({ dispatch, selectedObjectId, selectedObject, dungeonSize, scrollPansViewport }) => {\n    if (selectedObjectId) {\n        return <React.Fragment>\n            {selectedObject.label !== undefined &&\n                <StateEditorCard title='Label'>\n                    <label>\n                        Label:\n                        <input\n                            className=\"form-control bg-secondary text-light\"\n                            type=\"text\"\n                            value={selectedObject.label}\n                            onChange={(changeEvent) => dispatch(DungeonActions.setSelectedObjectLabel(selectedObjectId, changeEvent.target.value))}>\n                        </input>\n                    </label>\n                </StateEditorCard>}\n            {selectedObject.textureUrl !== undefined &&\n                <StateEditorCard title=\"Texture Path\">\n                    <label>\n                        Path:\n                        <input\n                            className=\"form-control bg-secondary text-light\"\n                            value={selectedObject.textureUrl}\n                            onChange={(changeEvent) => {dispatch(DungeonActions.setSelectedObjectTextureUrl(selectedObjectId, changeEvent.target.value))}}></input>\n                    </label>\n                </StateEditorCard>\n            }\n            {selectedObject.position &&\n                <PositionEditor\n                    x={selectedObject.position.x}\n                    y={selectedObject.position.y}\n                    onUpdate={(x, y) => dispatch(DungeonActions.setSelectedObjectPosition(selectedObjectId, x, y))} />\n            }\n            {selectedObject.size &&\n                <SizeEditor\n                    width={selectedObject.size.width}\n                    height={selectedObject.size.height}\n                    onUpdate={(width, height) => dispatch(DungeonActions.setSelectedObjectSize(selectedObjectId, width, height))} />\n            }\n            {selectedObject.start &&\n                <PositionEditor\n                    title=\"Start\"\n                    x={selectedObject.start.x}\n                    y={selectedObject.start.y}\n                    onUpdate={(x,y) => dispatch(DungeonActions.setSelectedObjectStart(selectedObjectId, x, y))} />\n            }\n            {selectedObject.end &&\n                <PositionEditor\n                    title=\"End\"\n                    x={selectedObject.end.x}\n                    y={selectedObject.end.y}\n                    onUpdate={(x,y) => dispatch(DungeonActions.setSelectedObjectEnd(selectedObjectId, x, y))} />\n            }\n            {selectedObject.angle !== undefined &&\n                <StateEditorCard title=\"Angle\">\n                    <label>\n                        Angle:\n                        <input\n                            className=\"form-control bg-secondary text-light\"\n                            type=\"number\"\n                            step=\"45\"\n                            min=\"-360\"\n                            max=\"360\"\n                            value={selectedObject.angle}\n                            onChange={(changeEvent) => {dispatch(DungeonActions.setSelectedObjectAngle(selectedObjectId, changeEvent.target.value))}}></input>\n                        <input\n                            className=\"form-control bg-secondary text-light\"\n                            type=\"range\"\n                            step=\"45\"\n                            min=\"-360\"\n                            max=\"360\"\n                            style={{direction: \"rtl\"}}\n                            value={selectedObject.angle}\n                            onChange={(changeEvent) => {dispatch(DungeonActions.setSelectedObjectAngle(selectedObjectId, changeEvent.target.value))}}></input>\n                    </label>\n                </StateEditorCard>\n            }\n            {selectedObjectId &&\n                <StateEditorCard title=\"Actions\">\n                    <button\n                        className=\"btn btn-outline-danger\"\n                        onClick={() => dispatch(DungeonActions.deleteObjects([selectedObjectId]))}>\n                            Delete Object\n                    </button>\n                </StateEditorCard>\n            }\n        </React.Fragment>\n    }\n    else {\n        return <React.Fragment>\n            <StateEditorCard title=\"Instructions\">\n                <p><i>Right click</i> to pan the view.</p>\n                <p><i>Scroll</i> to zoom in and out.</p>\n                <p><i>Left click and drag</i> to create new spaces with the New Space tool.</p>\n                <p><i>Left click</i> to select spaces with the Select tool.</p>\n                <p><i>Arrow keys</i> will move the currently selected space.</p>\n                <p><i>Delete</i> will delete the currently selected space.</p>\n            </StateEditorCard>\n            <StateEditorCard title=\"Actions\">\n                <button\n                    className=\"btn btn-primary form-control mb-2\"\n                    onClick={() => dispatch(EditorActions.exportToPngClicked())}>\n                        Download Dungeon as PNG\n                </button>\n                <button\n                    className=\"btn btn-outline-danger form-control mb-2\"\n                    onClick={() => dispatch(DungeonActions.clearDungeon())}>\n                        New Dungeon\n                </button>\n            </StateEditorCard>\n            <SizeEditor\n                title=\"Dungeon Size\"\n                width={dungeonSize.width}\n                height={dungeonSize.height}\n                onUpdate={(width, height) => dispatch(DungeonActions.setDungeonSize(width, height))} />\n            <StateEditorCard title=\"Editor Options\">\n                <div class=\"form-check\">\n                    <label class=\"form-check-label\">\n                        <input\n                            class=\"form-check-input\"\n                            type='checkbox'\n                            value={scrollPansViewport}\n                            onChange={(event) => dispatch(EditorActions.setScrollMovesViewport(event.target.checked))} />\n                        Scroll to pan\n                    </label>\n                </div>\n            </StateEditorCard>\n        </React.Fragment>\n    }\n}\n\nconst mapStateToProps = state => {\n    let selectedObjectId = state.editor.selectedObjectIds.length === 1 ? state.editor.selectedObjectIds[0] : null;\n    let selectedObject = selectedObjectId ? state.dungeon.objects.find(object => object.id === selectedObjectId) : null;\n    return {\n        selectedObjectId: selectedObjectId,\n        selectedObject: selectedObject,\n        dungeonSize: state.dungeon.size,\n        scrollMovesViewport: state.editor.scrollMovesViewport\n    }\n}\n\nStateEditor = connect(mapStateToProps)(StateEditor)\n\nexport default StateEditor\n","import React from \"react\"\n\nconst ToolbarButton = ({toolName, toolId, selectedTool, onClick}) =>\n    <button\n        className={\"btn btn-secondary\" +\n            (selectedTool === toolId ? ' active' : '')}\n        onClick={() => onClick(toolId)}>\n            {toolName}\n    </button>\n\nexport default ToolbarButton;","import React from \"react\"\nimport { connect } from 'react-redux'\nimport { selectTool } from '../reducers/editorActions'\nimport ToolbarButton from \"./ToolbarButton\"\nimport TOOL_TYPE from \"../tools/toolType\"\n\nlet Toolbar = ({ dispatch, selectedTool }) => {\n    const dispatchSelectedTool = (toolId) => dispatch(selectTool(toolId))\n\n    return (\n        <div className=\"btn-group\" role=\"group\">\n            <ToolbarButton\n                toolName='Select'\n                toolId={TOOL_TYPE.SELECT}\n                selectedTool={selectedTool}\n                onClick={dispatchSelectedTool} />\n            <ToolbarButton\n                toolName='New Rectangular Space'\n                toolId={TOOL_TYPE.NEW_SPACE_RECTANGLE}\n                selectedTool={selectedTool}\n                onClick={dispatchSelectedTool} />\n            <ToolbarButton\n                toolName='New Polygonal Space'\n                toolId={TOOL_TYPE.NEW_SPACE_POLYGON}\n                selectedTool={selectedTool}\n                onClick={dispatchSelectedTool} />\n            <ToolbarButton\n                toolName='New Wall'\n                toolId={TOOL_TYPE.NEW_WALL}\n                selectedTool={selectedTool}\n                onClick={dispatchSelectedTool} />\n            <ToolbarButton\n                toolName='New Door'\n                toolId={TOOL_TYPE.NEW_DOOR}\n                selectedTool={selectedTool}\n                onClick={dispatchSelectedTool} />\n            <ToolbarButton\n                toolName='New Label'\n                toolId={TOOL_TYPE.NEW_LABEL}\n                selectedTool={selectedTool}\n                onClick={dispatchSelectedTool} />\n            <ToolbarButton\n                toolName='New Token'\n                toolId={TOOL_TYPE.NEW_TOKEN}\n                selectedTool={selectedTool}\n                onClick={dispatchSelectedTool} />\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    selectedTool: state.editor.selectedTool\n})\n\nToolbar = connect(mapStateToProps)(Toolbar)\n\nexport default Toolbar\n","import React from 'react';\nimport DungeonEditor from \"./components/DungeonEditor.js\";\nimport StateEditor from './components/StateEditor';\nimport Toolbar from './components/Toolbar';\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <nav className=\"navbar navbar-dark bg-secondary\">\n        <span className=\"navbar-brand\">\n          Pungeon\n        </span>\n      </nav>\n      <div className=\"px-5\">\n        <div className=\"py-2\">\n          <Toolbar />\n        </div>\n        <div className=\"row\">\n          <div className=\"col-md-9\">\n            <DungeonEditor />\n          </div>\n          <div className=\"col-md-3\">\n            <StateEditor />\n          </div>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app/App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './app/store.js'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}