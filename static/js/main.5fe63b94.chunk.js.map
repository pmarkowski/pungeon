{"version":3,"sources":["app/utils/constants.js","app/dungeonObjects/BaseDungeonObjectOperations.js","app/dungeonObjects/DoorOperations.js","app/dungeonObjects/LabelOperations.js","app/dungeonObjects/WallOperations.js","app/dungeonObjects/SpaceOperations.js","app/dungeonObjects/TokenOperations.js","app/dungeonObjects/DungeonObjectOperations.js","app/reducers/editorActionType.js","app/reducers/editorActions.js","app/utils/createArrayWithUpdatedObject.js","app/reducers/dungeonActionType.js","app/reducers/dungeonReducer.js","app/tools/toolType.js","app/reducers/editorReducer.js","app/reducers/index.js","app/store.js","app/reducers/dungeonActions.js","app/utils/geometry.js","app/tools/AddDoorTool.js","app/tools/AddLabelTool.js","app/tools/AddSpacePolygonTool.js","app/tools/AddSpaceRectangleTool.js","app/tools/AddTokenTool.js","app/tools/AddWallTool.js","app/tools/SelectTool.js","app/tools/ToolRouter.js","app/utils/download.js","app/rendering/DungeonRenderer.js","app/rendering/GridRenderer.js","app/utils/keyboardEventHandlers.js","app/utils/mouseEventHandlers.js","app/components/DungeonEditor.js","app/components/StateEditorCard.js","app/components/PositionEditor.js","app/components/SizeEditor.js","app/components/StateEditor.js","app/components/ToolbarButton.js","app/components/Toolbar.js","app/App.js","serviceWorker.js","index.js"],"names":["GRID_TILE_SIZE","createDungeonObject","dungeonObjectType","id","uuid","type","BaseDungeonObjectOperations","object","x","y","PIXI","displayObject","isObjectSelected","DOOR_TYPE","DoorOperations","start","end","graphics","door","objectIsSelected","zIndex","clear","beginFill","lineStyle","moveTo","lineTo","half","endFill","tint","hitArea","LABEL_TYPE","LabelOperations","position","label","children","length","labelText","style","fontFamily","fontSize","addChild","fill","text","set","WALL_TYPE","createWall","startX","startY","endX","endY","WallOperations","wall","line","cap","ROUND","this","createWallHitArea","startPoint","endPoint","rise","run","slope","inverseSlope","Math","min","abs","getOffsetAlongSlope","xOffset","yOffset","polygonXOffset","polygonYOffset","distanceTravelledAlongSlope","slopeAngle","atan","cos","sin","SPACE_TYPE","createSpace","points","size","width","height","SpaceOperations","forEach","point","space","drawRect","firstPoint","index","TOKEN_TYPE","createToken","textureUrl","angle","TokenOperations","sprite","token","objectSelectionGraphics","texture","from","process","getChildAt","drawShape","getLocalBounds","removeChildAt","objectOperations","renderObject","dungeonObject","filter","operation","map","createRenderObject","translate","EDITOR_ACTION_TYPE","PNG_EXPORTED","EXPORT_TO_PNG_CLICKED","CLEAR_ONGOING_SPACE_POLYGON","ADD_ONGOING_SPACE_POLYGON","MOVE_VIEWPORT","SET_CURRENT_MOUSE_POSITION","SCROLL_EVENT","MOUSE_DOWN","MOUSE_UP","SET_SCROLL_MOVES_VIEWPORT","SELECT_TOOL","SELECT_OBJECT","SELECT_OBJECTS","KEY_PRESSED","KEY_RELEASED","selectObject","objectId","shouldMultiSelect","selectObjects","objectIds","setCurrentMousePosition","createArrayWithUpdatedObject","array","update","createArrayWithUpdatedObjects","ids","includes","objectCopy","DUNGEON_ACTION_TYPE","NEW_DUNGEON","SET_DUNGEON_SIZE","MOVE_SELECTED_OBJECT","SET_SELECTED_OBJECT_TEXTURE_PATH","SET_SELECTED_OBJECT_ANGLE","SET_SELECTED_OBJECT_LABEL","SET_SELECTED_OBJECT_POSITION","SET_SELECTED_OBJECT_SIZE","SET_SELECTED_OBJECT_START","SET_SELECTED_OBJECT_END","ADD_OBJECT","DELETE_OBJECTS","SET_DUNGEON_NAME","defaultDungeonState","name","objects","dungeonReducer","state","action","arrayWithUpdatedObject","selectedObjectIds","deltaX","deltaY","selectedObject","texturePath","objectArray","slice","newObject","newObjectArray","TOOL_TYPE","SELECT","NEW_WALL","NEW_SPACE_RECTANGLE","NEW_SPACE_POLYGON","NEW_DOOR","NEW_LABEL","NEW_TOKEN","defaultEditorState","scrollMovesViewport","selectedTool","scale","mouse","mouseDown","startPosition","currentPosition","keyboard","heldKeys","combineReducers","editor","newHeldKeys","key","exportToPngClicked","ongoingSpacePolygon","newPolygonArray","holdingCtrl","scaleDelta","scrollY","minimumScale","maximumScale","newScale","max","scrollX","newSelectedObjectIds","Set","dungeon","store","createStore","reducer","window","__REDUX_DEVTOOLS_EXTENSION__","addObject","deleteObjects","moveObjects","setSelectedObjectAngle","square","lineLength","v","w","sqrt","getClosestPointOnLine","p","a","b","atob","len","dot","t","AddDoorTool","getState","mousePoint","minDistance","snapPoint","minWallId","scaledStart","scaledEnd","closestPoint","distance","doorWall","find","dispatch","drawCircle","AddLabelTool","dungeonSpaceX","dungeonSpaceY","AddSpacePolygonTool","round","pointArray","addOngoingSpacePolygonPoint","hoverX","hoverY","AddSpaceRectangleTool","floor","ceil","snappedX","snappedY","AddTokenTool","tokenTextureUrl","AddWallTool","pastDragThreshold","endPosition","getTranslation","createRectangle","startedMove","STATES","SelectTool","alpha","dungeonRenderObject","removeChildren","Number","MAX_SAFE_INTEGER","app","shouldAddToSelection","mousePointInGlobalCoordinates","stage","worldTransform","apply","hitObject","renderer","plugins","interaction","hitTest","hitObjectIsAlreadySelected","currentStates","lastHitId","isDragging","boundingRectangle","objectIdsToSelect","child","rect1","rect2","num1","num2","doRectanglesIntersect","push","resetGraphicsAfterMoving","initializeGraphicsForMoving","JSON","parse","stringify","renderObjectCopy","toolMap","download","data","filename","downloadLink","document","createElement","href","target","click","render","gridRenderer","handlePanning","fractionalScale","handleScaling","drawDungeonObjects","renderGrid","exportTexture","generateTexture","normalizedDungeonName","toLowerCase","replace","extract","base64","exportImage","handleExporting","mouseOverRenderer","renderTool","ToolRouter","mousePosition","getLocalPosition","container","objectIdMap","reduce","containerObjectIds","Object","keys","has","newChildGraphics","DungeonObjectOperations","interactive","cursor","removeChild","GridRenderer","gridWidth","gridHeight","i","j","handleKeyPressed","keyboardEvent","repeat","preventDefault","ctrlKey","handleKeyReleased","handleMouseDown","mouseEvent","buttons","onMouseDown","handleMouseUp","onMouseUp","handleMouseMove","mouseMovementScaledByDisplayScaling","movementX","devicePixelRatio","movementY","handleWheelEvent","wheelEvent","getModifierState","DungeonEditor","tabIndex","ref","element","canvasDiv","backgroundColor","sharedLoader","sharedTicker","antialias","appendChild","view","resizeTo","resize","sortableChildren","setupInteractions","ticker","add","renderDungeon","addEventListener","MouseEventHandler","event","pointerEvent","React","Component","StateEditorCard","title","className","PositionEditor","onUpdate","value","onChange","changeEvent","parseInt","SizeEditor","StateEditor","selectedObjectId","dungeonName","dungeonSize","scrollPansViewport","Fragment","undefined","DungeonActions","step","direction","onClick","checked","connect","ToolbarButton","toolName","toolId","Toolbar","dispatchSelectedTool","role","App","Boolean","location","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.5fe63b94.chunk.js","sourcesContent":["export const GRID_TILE_SIZE = 70;\n","import * as PIXI from 'pixi.js';\nimport { v4 as uuid } from 'uuid';\n\n/**\n * @typedef {{ type: string, id: string }} BaseDungeonObject\n */\n\n/**\n * @returns {BaseDungeonObject}\n */\nexport const createDungeonObject = (dungeonObjectType) => ({\n    id: uuid(),\n    type: dungeonObjectType\n})\n\nexport class BaseDungeonObjectOperations {\n    get dungeonObjectType() { return null; }\n\n    /**\n     * @param {BaseDungeonObject} object\n     * @param {number} x\n     * @param {number} y\n     */\n    translate(object, x, y) {}\n\n    createRenderObject() {\n        return new PIXI.Graphics();\n    }\n\n    /**\n     * @param {PIXI.DisplayObject} displayObject\n     * @param {BaseDungeonObject} object\n     * @param {boolean} objectIsSelected\n     */\n    renderObject(displayObject, object, isObjectSelected) {}\n}\n","import * as PIXI from 'pixi.js';\nimport { GRID_TILE_SIZE } from \"../utils/constants\";\nimport { createDungeonObject, BaseDungeonObjectOperations } from './BaseDungeonObjectOperations';\n\n/**\n * @typedef {{\n *  start: {x: number, y: number},\n *  end: {x: number, y: number}\n * } & import('./BaseDungeonObjectOperations').BaseDungeonObject} Door\n */\n\nexport const DOOR_TYPE = \"door\"\n\n/**\n * @returns {Door}\n */\nexport const createDoor = (startX, startY, endX, endY) => {\n    return {\n        ...createDungeonObject(DOOR_TYPE),\n        start: {\n            x: startX,\n            y: startY\n        },\n        end: {\n            x: endX,\n            y: endY\n        }\n    }\n}\n\nexport class DoorOperations extends BaseDungeonObjectOperations {\n    get dungeonObjectType(){ return DOOR_TYPE; }\n\n    translate(object, x, y) {\n        object.start.x += x;\n        object.start.y += y;\n        object.end.x += x;\n        object.end.y += y;\n    }\n\n    renderObject(graphics, door, objectIsSelected) {\n        graphics.zIndex = 3;\n        graphics.clear();\n        graphics.beginFill(0x002b56, 1);\n        graphics.lineStyle(20, 0x002b56, 1, 0.5);\n        graphics.moveTo(door.start.x * GRID_TILE_SIZE, door.start.y * GRID_TILE_SIZE);\n        graphics.lineTo(door.end.x * GRID_TILE_SIZE, door.end.y * GRID_TILE_SIZE);\n        graphics.lineStyle();\n        let half = 20 / 2;\n        graphics.endFill();\n\n        if (objectIsSelected) {\n            graphics.tint = 0xffff33;\n        }\n        else {\n            graphics.tint = 0xffffff;\n        }\n        graphics.hitArea = new PIXI.Polygon([\n            door.start.x * GRID_TILE_SIZE - half, door.start.y * GRID_TILE_SIZE - half,\n            door.start.x * GRID_TILE_SIZE + half, door.start.y * GRID_TILE_SIZE + half,\n            door.end.x * GRID_TILE_SIZE + half, door.end.y * GRID_TILE_SIZE + half,\n            door.end.x * GRID_TILE_SIZE - half, door.end.y * GRID_TILE_SIZE - half,\n        ]);\n    }\n}\n","import * as PIXI from 'pixi.js';\nimport { GRID_TILE_SIZE } from '../utils/constants';\nimport { createDungeonObject, BaseDungeonObjectOperations } from './BaseDungeonObjectOperations';\n\n/**\n * @typedef {{\n *  position: {x: number, y: number},\n *  label: string\n * } & import('./BaseDungeonObjectOperations').BaseDungeonObject} Label\n */\n\nexport const LABEL_TYPE = \"label\"\n\n/**\n * @returns {Label}\n */\nexport const createLabel = (x, y, label) => {\n    return {\n        ...createDungeonObject(LABEL_TYPE),\n        label,\n        position: {\n            x,\n            y\n        }\n    }\n}\n\nexport class LabelOperations extends BaseDungeonObjectOperations {\n    get dungeonObjectType(){ return LABEL_TYPE; }\n\n    translate(object, x, y) {\n        object.position.x += x;\n        object.position.y += y;\n    }\n\n    renderObject(graphics, label, objectIsSelected) {\n        graphics.zIndex = 4;\n        graphics.clear();\n        if (graphics.children.length === 0) {\n            let labelText = new PIXI.Text(label.label);\n            labelText.style.fontFamily = 'Serif';\n            labelText.style.fontSize = 36;\n            graphics.addChild(labelText);\n        }\n\n        let labelText = graphics.children[0];\n\n        if (objectIsSelected) {\n            labelText.style.fill = 0xffff33;\n        }\n        else {\n            labelText.style.fill = 0x000000;\n        }\n\n        labelText.text = label.label;\n        labelText.position.set(\n            label.position.x * GRID_TILE_SIZE,\n            label.position.y * GRID_TILE_SIZE);\n    }\n}\n","import * as PIXI from 'pixi.js';\nimport { GRID_TILE_SIZE } from \"../utils/constants\";\nimport { createDungeonObject, BaseDungeonObjectOperations } from './BaseDungeonObjectOperations';\n\n/**\n * @typedef {{\n *  start: {x: number, y: number},\n *  end: {x: number, y: number}\n * } & import('./BaseDungeonObjectOperations').BaseDungeonObject} Wall\n */\n\n export const WALL_TYPE = \"wall\"\n\n/**\n * @returns {Wall}\n */\nexport const createWall = (startX, startY, endX, endY) => {\n    return {\n        ...createDungeonObject(WALL_TYPE),\n        start: {\n            x: startX,\n            y: startY\n        },\n        end: {\n            x: endX,\n            y: endY\n        }\n    }\n}\n\nexport class WallOperations extends BaseDungeonObjectOperations {\n    get dungeonObjectType(){ return WALL_TYPE; }\n\n    translate(object, x, y) {\n        object.start.x += x;\n        object.start.y += y;\n        object.end.x += x;\n        object.end.y += y;\n    }\n\n    /**\n     *\n     * @param {PIXI.Graphics} graphics\n     * @param {Wall} wall\n     * @param {boolean} objectIsSelected\n     */\n    renderObject(graphics, wall, objectIsSelected) {\n        graphics.zIndex = 2;\n        graphics.clear();\n        graphics.lineStyle(10, 0x0266e6, 1, 0.5);\n        graphics.line.cap = PIXI.LINE_CAP.ROUND;\n        graphics.moveTo(wall.start.x * GRID_TILE_SIZE, wall.start.y * GRID_TILE_SIZE);\n        graphics.lineTo(wall.end.x * GRID_TILE_SIZE, wall.end.y * GRID_TILE_SIZE);\n        graphics.lineStyle();\n        let half = 10 / 2;\n        graphics.endFill();\n\n        if (objectIsSelected) {\n            graphics.tint = 0xffff33;\n        }\n        else {\n            graphics.tint = 0xffffff;\n        }\n        graphics.hitArea = this.createWallHitArea(wall, half);\n    }\n\n    createWallHitArea(wall, half) {\n        if (wall.start.x === wall.end.x && wall.start.y === wall.end.y) {\n            return new PIXI.Circle(\n                wall.start.x * GRID_TILE_SIZE,\n                wall.start.y * GRID_TILE_SIZE,\n                half);\n        }\n        else {\n            let startPoint = wall.start.x <= wall.end.x ? wall.start : wall.end;\n            let endPoint = wall.start.x > wall.end.x ? wall.start : wall.end;\n\n            let rise = endPoint.y - startPoint.y;\n            let run = endPoint.x - startPoint.x;\n            let slope = rise / run;\n            let inverseSlope = -1 / slope;\n\n            if (slope === 0 || inverseSlope === 0) {\n                return new PIXI.Rectangle(\n                    startPoint.x * GRID_TILE_SIZE - half,\n                    Math.min(startPoint.y, endPoint.y) * GRID_TILE_SIZE - half,\n                    run * GRID_TILE_SIZE + half * 2,\n                    Math.abs(rise) * GRID_TILE_SIZE + half * 2\n                )\n            }\n\n            let { xOffset, yOffset} = this.getOffsetAlongSlope(slope, half);\n            let { xOffset: polygonXOffset, yOffset: polygonYOffset } = this.getOffsetAlongSlope(inverseSlope, half);\n\n            return new PIXI.Polygon([\n                startPoint.x * GRID_TILE_SIZE - xOffset - polygonXOffset, startPoint.y * GRID_TILE_SIZE - yOffset - polygonYOffset,\n                startPoint.x * GRID_TILE_SIZE - xOffset + polygonXOffset, startPoint.y * GRID_TILE_SIZE - yOffset + polygonYOffset,\n                endPoint.x   * GRID_TILE_SIZE + xOffset + polygonXOffset, endPoint.y   * GRID_TILE_SIZE + yOffset + polygonYOffset,\n                endPoint.x   * GRID_TILE_SIZE + xOffset - polygonXOffset, endPoint.y   * GRID_TILE_SIZE + yOffset - polygonYOffset,\n            ]);\n        }\n    }\n\n    getOffsetAlongSlope(slope, distanceTravelledAlongSlope) {\n        let slopeAngle = Math.atan(slope);\n        let xOffset = Math.cos(slopeAngle) * distanceTravelledAlongSlope;\n        let yOffset = Math.sin(slopeAngle) * distanceTravelledAlongSlope;\n        return {\n            xOffset: xOffset,\n            yOffset: yOffset\n        };\n    }\n}\n","import { GRID_TILE_SIZE } from \"../utils/constants\";\nimport { createDungeonObject, BaseDungeonObjectOperations } from './BaseDungeonObjectOperations';\n\n/**\n * @typedef {{\n *  position: {x: number, y: number},\n *  size: {width: number, height: number }\n * } & import(\"./BaseDungeonObjectOperations\").BaseDungeonObject} RectangularSpace\n * @typedef {{\n *  points: {x: number, y: number}[]\n * } & import(\"./BaseDungeonObjectOperations\").BaseDungeonObject} PolygonalSpace\n * @typedef {RectangularSpace | PolygonalSpace} Space\n */\n\nexport const SPACE_TYPE = \"space\"\n\n/**\n * @returns {Space}\n */\nexport const createSpace = ({points, startX, startY, endX, endY}) => {\n    if (points) {\n        return {\n            ...createDungeonObject(SPACE_TYPE),\n            points\n        }\n    }\n    else {\n        return {\n            ...createDungeonObject(SPACE_TYPE),\n            position: {\n                x: startX,\n                y: startY\n            },\n            size: {\n                width: endX - startX,\n                height: endY - startY\n            }\n        }\n    }\n}\n\nexport class SpaceOperations extends BaseDungeonObjectOperations {\n    get dungeonObjectType() { return SPACE_TYPE; }\n\n    translate(object, x, y) {\n        if (object.position) {\n            object.position.x += x;\n            object.position.y += y;\n        }\n        else {\n            object.points.forEach(point => {\n                point.x += x;\n                point.y += y;\n            });\n        }\n    }\n\n    renderObject(graphics, space, objectIsSelected) {\n        graphics.clear();\n        graphics.beginFill(0xd6d5d5);\n        if (space.position && space.size) {\n            graphics.drawRect(\n                space.position.x * GRID_TILE_SIZE,\n                space.position.y * GRID_TILE_SIZE,\n                space.size.width * GRID_TILE_SIZE,\n                space.size.height * GRID_TILE_SIZE);\n            graphics.endFill();\n        }\n        else {\n            let firstPoint = space.points[0];\n            graphics.moveTo(firstPoint.x * GRID_TILE_SIZE, firstPoint.y * GRID_TILE_SIZE);\n            for (let index = 0; index < space.points.length; index++) {\n                const point = space.points[index];\n                graphics.lineTo(point.x * GRID_TILE_SIZE, point.y * GRID_TILE_SIZE);\n            }\n            graphics.endFill();\n        }\n\n        if (objectIsSelected) {\n            graphics.tint = 0xffffcc;\n        }\n        else {\n            graphics.tint = 0xffffff;\n        }\n    }\n}\n","import * as PIXI from 'pixi.js'\nimport { GRID_TILE_SIZE } from '../utils/constants';\nimport { BaseDungeonObjectOperations, createDungeonObject } from './BaseDungeonObjectOperations';\n\n/**\n * @typedef {{\n *  textureUrl: string,\n *  position: {x: number, y: number},\n *  size: {width: number, height: number}\n *  angle: number\n * } & import('./BaseDungeonObjectOperations').BaseDungeonObject} Token\n */\n\nexport const TOKEN_TYPE = \"token\"\n\n/**\n * @returns {Token}\n */\nexport const createToken = (textureUrl, x, y, width, height, angle) => {\n    return {\n        ...createDungeonObject(TOKEN_TYPE),\n        textureUrl,\n        position: {\n            x,\n            y\n        },\n        size: {\n            width,\n            height\n        },\n        angle\n    };\n}\n\nexport class TokenOperations extends BaseDungeonObjectOperations {\n    get dungeonObjectType(){ return TOKEN_TYPE; }\n\n    translate(object, x, y) {\n        object.position.x += x;\n        object.position.y += y;\n    }\n\n    createRenderObject() {\n        return new PIXI.Sprite();\n    }\n\n    renderObject(sprite, token, objectIsSelected) {\n        sprite.zIndex = 4;\n        sprite.texture = PIXI.Texture.from(process.env.PUBLIC_URL + token.textureUrl);\n        sprite.x = token.position.x * GRID_TILE_SIZE;\n        sprite.y = token.position.y * GRID_TILE_SIZE;\n        sprite.width = token.size.width * GRID_TILE_SIZE;\n        sprite.height = token.size.height * GRID_TILE_SIZE;\n        sprite.angle = token.angle;\n\n        if (objectIsSelected) {\n            let objectSelectionGraphics;\n            if (sprite.children.length === 0) {\n                objectSelectionGraphics = new PIXI.Graphics();\n                sprite.addChild(objectSelectionGraphics);\n            } else {\n                objectSelectionGraphics = sprite.getChildAt(0);\n            }\n            objectSelectionGraphics.clear();\n            objectSelectionGraphics.lineStyle(5, 0xfffd00);\n            objectSelectionGraphics.drawShape(sprite.getLocalBounds());\n        }\n        else {\n            if (sprite.children.length > 0) {\n                sprite.removeChildAt(0);\n            }\n        }\n    }\n}\n","import { DoorOperations } from \"./DoorOperations\";\nimport { LabelOperations } from \"./LabelOperations\";\nimport { WallOperations } from \"./WallOperations\";\nimport { SpaceOperations } from \"./SpaceOperations\";\nimport { TokenOperations } from \"./TokenOperations\";\n\n/**\n * @typedef { import(\"./DoorOperations\").Door\n * | import(\"./LabelOperations\").Label\n * | import(\"./WallOperations\").Wall\n * | import(\"./SpaceOperations\").Space\n * | import(\"./TokenOperations\").Token} DungeonObject\n */\n\nconst objectOperations = [\n    new DoorOperations(),\n    new LabelOperations(),\n    new WallOperations(),\n    new SpaceOperations(),\n    new TokenOperations()\n]\n\nexport const renderObject = (graphics, dungeonObject, objectIsSelected) =>\n    objectOperations.filter(operation => operation.dungeonObjectType === dungeonObject.type).map(operation => operation.renderObject(graphics, dungeonObject, objectIsSelected))\n\nexport const createRenderObject = (dungeonObject) => {\n    return objectOperations.filter(operation => operation.dungeonObjectType === dungeonObject.type).map(operation => operation.createRenderObject())[0]\n}\n\nexport const translate = (dungeonObject, x, y) =>\n    objectOperations.filter(operation => operation.dungeonObjectType === dungeonObject.type).map(operation => operation.translate(dungeonObject, x, y))\n","const EDITOR_ACTION_TYPE = {\n    PNG_EXPORTED: 'PNG_EXPORTED',\n    EXPORT_TO_PNG_CLICKED: 'EXPORT_TO_PNG_CLICKED',\n    CLEAR_ONGOING_SPACE_POLYGON: 'CLEAR_ONGOING_SPACE_POLYGON',\n    ADD_ONGOING_SPACE_POLYGON: 'ADD_ONGOING_SPACE_POLYGON',\n    MOVE_VIEWPORT: 'MOVE_VIEWPORT',\n    SET_CURRENT_MOUSE_POSITION: 'SET_CURRENT_MOUSE_POSITION',\n    SCROLL_EVENT: 'SCROLL_EVENT',\n    MOUSE_DOWN: 'MOUSE_DOWN',\n    MOUSE_UP: 'MOUSE_UP',\n    SET_SCROLL_MOVES_VIEWPORT: 'SET_SCROLL_MOVES_VIEWPORT',\n    SELECT_TOOL: 'SELECT_TOOL',\n    SELECT_OBJECT: 'SELECT_OBJECT',\n    SELECT_OBJECTS: 'SELECT_OBJECTS',\n    KEY_PRESSED: 'KEY_PRESSED',\n    KEY_RELEASED: 'KEY_RELEASED'\n}\n\nexport default EDITOR_ACTION_TYPE;\n","import EDITOR_ACTION_TYPE from \"./editorActionType\"\n\nexport const keyPressed = (key) => ({\n    type: EDITOR_ACTION_TYPE.KEY_PRESSED,\n    key\n})\n\nexport const keyReleased = (key) => ({\n    type: EDITOR_ACTION_TYPE.KEY_RELEASED,\n    key\n})\n\nexport const mouseDown = () => ({\n    type: EDITOR_ACTION_TYPE.MOUSE_DOWN\n})\n\nexport const mouseUp = () => ({\n    type: EDITOR_ACTION_TYPE.MOUSE_UP\n})\n\nexport const pngExported = () => ({\n    type: EDITOR_ACTION_TYPE.PNG_EXPORTED\n})\n\nexport const exportToPngClicked = () => ({\n    type: EDITOR_ACTION_TYPE.EXPORT_TO_PNG_CLICKED\n})\n\nexport const clearOngoingSpacePolygonPoint = () => ({\n    type: EDITOR_ACTION_TYPE.CLEAR_ONGOING_SPACE_POLYGON\n})\n\nexport const addOngoingSpacePolygonPoint = (x, y) => ({\n    type: EDITOR_ACTION_TYPE.ADD_ONGOING_SPACE_POLYGON,\n    position: {\n        x: x,\n        y: y\n    }\n})\n\nexport const scroll = (deltaX, deltaY, holdingCtrl) => ({\n    type: EDITOR_ACTION_TYPE.SCROLL_EVENT,\n    scrollX: deltaX,\n    scrollY: deltaY,\n    holdingCtrl: holdingCtrl\n})\n\nexport const moveViewport = (deltaX, deltaY) => ({\n    type: EDITOR_ACTION_TYPE.MOVE_VIEWPORT,\n    deltaX: deltaX,\n    deltaY: deltaY\n})\n\nexport const selectTool = (toolName) => ({\n    type: EDITOR_ACTION_TYPE.SELECT_TOOL,\n    selectedTool: toolName\n})\n\nexport const selectObject = (objectId, shouldMultiSelect) => ({\n    type: EDITOR_ACTION_TYPE.SELECT_OBJECT,\n    objectId,\n    shouldMultiSelect\n})\n\nexport const selectObjects = (objectIds, shouldMultiSelect) => ({\n    type: EDITOR_ACTION_TYPE.SELECT_OBJECTS,\n    objectIds,\n    shouldMultiSelect\n})\n\nexport const setScrollMovesViewport = (scrollMovesViewport) => ({\n    type: EDITOR_ACTION_TYPE.SET_SCROLL_MOVES_VIEWPORT,\n    scrollMovesViewport: scrollMovesViewport\n})\n\nexport const setCurrentMousePosition = (x, y) => ({\n    type: EDITOR_ACTION_TYPE.SET_CURRENT_MOUSE_POSITION,\n    x: x,\n    y: y\n})\n","export const createArrayWithUpdatedObject = (array, id, update) => {\n    return createArrayWithUpdatedObjects(array, [id], update);\n}\n\n/**\n * @param {import(\"../dungeonObjects/DungeonObject\").BaseDungeonObject[]} array\n * @param {string[]} ids\n * @param {function(object: import(\"../dungeonObjects/DungeonObject\").BaseDungeonObject) : void} update\n */\nexport const createArrayWithUpdatedObjects = (array, ids, update) => {\n    return array.map(object => {\n        if (ids.includes(object.id)) {\n            let objectCopy = {...object};\n            update(objectCopy);\n            return objectCopy;\n        }\n        else {\n            return object;\n        }\n    })\n}\n","const DUNGEON_ACTION_TYPE = {\n    NEW_DUNGEON: 'NEW_DUNGEON',\n    SET_DUNGEON_SIZE: 'SET_DUNGEON_SIZE',\n    MOVE_SELECTED_OBJECT: 'MOVE_SELECTED_OBJECT',\n    SET_SELECTED_OBJECT_TEXTURE_PATH: 'SET_SELECTED_OBJECT_TEXTURE_PATH',\n    SET_SELECTED_OBJECT_ANGLE: 'SET_SELECTED_OBJECT_ANGLE',\n    SET_SELECTED_OBJECT_LABEL: 'SET_SELECTED_OBJECT_LABEL',\n    SET_SELECTED_OBJECT_POSITION: 'SET_SELECTED_OBJECT_POSITION',\n    SET_SELECTED_OBJECT_SIZE: 'SET_SELECTED_OBJECT_SIZE',\n    SET_SELECTED_OBJECT_START: 'SET_SELECTED_OBJECT_START',\n    SET_SELECTED_OBJECT_END: 'SET_SELECTED_OBJECT_END',\n    ADD_OBJECT: 'ADD_OBJECT',\n    DELETE_OBJECTS: 'DELETE_OBJECTS',\n    SET_DUNGEON_NAME: 'SET_DUNGEON_NAME'\n}\n\nexport default DUNGEON_ACTION_TYPE;\n","import { translate } from '../dungeonObjects/DungeonObjectOperations';\nimport { createSpace } from '../dungeonObjects/SpaceOperations';\nimport { createToken } from '../dungeonObjects/TokenOperations';\nimport { createWall } from '../dungeonObjects/WallOperations';\nimport { createArrayWithUpdatedObject, createArrayWithUpdatedObjects } from '../utils/createArrayWithUpdatedObject'\nimport DUNGEON_ACTION_TYPE from './dungeonActionType'\n/**\n * @typedef {defaultDungeonState} DungeonState\n */\nconst defaultDungeonState = {\n    name: \"Dungeon\",\n    size: {\n        width: 28,\n        height: 32\n    },\n    /** @type {import('../dungeonObjects/DungeonObjectOperations').DungeonObject[]} */\n    objects: [\n        createToken(\"/assets/stairs.png\", 2, 4, 1, 2, 0),\n        createSpace({startX: 1, startY: 1, endX: 6, endY: 6}),\n        createSpace({startX: 6, startY: 4, endX: 13, endY: 13}),\n        createSpace({startX: 15, startY: 15, endX: 21, endY: 22}),\n        createSpace({startX: 21, startY: 19, endX: 25, endY: 28}),\n        createWall(1, 1, 1, 6),\n        createWall(6, 6, 1, 6),\n        createWall(6, 13, 6, 6),\n        createWall(13, 13, 6, 13),\n        createWall(13, 4, 13, 13),\n        createWall(6, 4, 13, 4),\n        createWall(6, 1, 6, 4),\n        createWall(1, 1, 6, 1),\n        createWall(15, 15, 15, 22),\n        createWall(21, 22, 15, 22),\n        createWall(21, 15, 15, 15),\n        createWall(21, 19, 21, 15),\n        createWall(25, 19, 21, 19),\n        createWall(21, 22, 21, 28),\n        createWall(21, 28, 25, 28),\n        createWall(25, 19, 25, 28)\n    ]\n  }\n\nexport const dungeonReducer = (state = defaultDungeonState, action) => {\n    switch (action.type) {\n        case DUNGEON_ACTION_TYPE.NEW_DUNGEON: {\n            return {\n                name: \"Untitled Dungeon\",\n                size: {\n                    width: 24,\n                    height: 32\n                },\n                objects: []\n            }\n        }\n        case DUNGEON_ACTION_TYPE.SET_DUNGEON_NAME: {\n            return {\n                ...state,\n                name: action.name\n            }\n        }\n        case DUNGEON_ACTION_TYPE.SET_DUNGEON_SIZE: {\n            return {\n                ...state,\n                size: {\n                    width: action.width,\n                    height: action.height\n                }\n            }\n        }\n        case DUNGEON_ACTION_TYPE.MOVE_SELECTED_OBJECT: {\n            let arrayWithUpdatedObject = createArrayWithUpdatedObjects(\n                state.objects,\n                action.selectedObjectIds,\n                (object) => translate(object, action.deltaX, action.deltaY));\n            return {\n                ...state,\n                objects: arrayWithUpdatedObject\n            };\n        }\n        case DUNGEON_ACTION_TYPE.SET_SELECTED_OBJECT_TEXTURE_PATH: {\n            let arrayWithUpdatedObject = createArrayWithUpdatedObject(\n                state.objects,\n                action.selectedObject,\n                (object) => object.textureUrl = action.texturePath);\n            return {\n                ...state,\n                objects: arrayWithUpdatedObject\n            };\n        }\n        case DUNGEON_ACTION_TYPE.SET_SELECTED_OBJECT_ANGLE: {\n            let arrayWithUpdatedObject = createArrayWithUpdatedObject(\n                state.objects,\n                action.selectedObject,\n                (object) => object.angle = action.angle);\n            return {\n                ...state,\n                objects: arrayWithUpdatedObject\n            };\n        }\n        case DUNGEON_ACTION_TYPE.SET_SELECTED_OBJECT_LABEL: {\n            let arrayWithUpdatedObject = createArrayWithUpdatedObject(\n                state.objects,\n                action.selectedObject,\n                (object) => object.label = action.label);\n            return {\n                ...state,\n                objects: arrayWithUpdatedObject\n            };\n        }\n        case DUNGEON_ACTION_TYPE.SET_SELECTED_OBJECT_POSITION: {\n            let arrayWithUpdatedObject = createArrayWithUpdatedObject(\n                state.objects,\n                action.selectedObject,\n                (object) => object.position = {\n                    x: action.x,\n                    y: action.y\n                });\n            return {\n                ...state,\n                objects: arrayWithUpdatedObject\n            };\n        }\n        case DUNGEON_ACTION_TYPE.SET_SELECTED_OBJECT_SIZE: {\n            let arrayWithUpdatedObject = createArrayWithUpdatedObject(\n                state.objects,\n                action.selectedObject,\n                (object) => object.size = {\n                    width: action.width,\n                    height: action.height\n                });\n            return {\n                ...state,\n                objects: arrayWithUpdatedObject\n            };\n        }\n        case DUNGEON_ACTION_TYPE.SET_SELECTED_OBJECT_START: {\n            let arrayWithUpdatedObject = createArrayWithUpdatedObject(\n                state.objects,\n                action.selectedObject,\n                (object) => object.start = {\n                    x: action.x,\n                    y: action.y\n                });\n            return {\n                ...state,\n                objects: arrayWithUpdatedObject\n            };\n        }\n        case DUNGEON_ACTION_TYPE.SET_SELECTED_OBJECT_END: {\n            let arrayWithUpdatedObject = createArrayWithUpdatedObject(\n                state.objects,\n                action.selectedObject,\n                (object) => object.end = {\n                    x: action.x,\n                    y: action.y\n                });\n            return {\n                ...state,\n                objects: arrayWithUpdatedObject,\n            };\n\n        }\n        case DUNGEON_ACTION_TYPE.ADD_OBJECT: {\n            let objectArray = state.objects.slice();\n            objectArray = [...objectArray, action.newObject];\n            return {\n                ...state,\n                objects: objectArray\n            };\n        }\n        case DUNGEON_ACTION_TYPE.DELETE_OBJECTS: {\n            let objectIds = action.objectIds;\n            if (objectIds) {\n                let newObjectArray = state.objects\n                    .filter(object => !objectIds.includes(object.id));\n                return {\n                    ...state,\n                    objects: newObjectArray\n                }\n            }\n            else {\n                return state;\n            }\n        }\n        default:\n            return state\n    }\n};\n\nexport default dungeonReducer\n","const TOOL_TYPE = {\n    SELECT: \"select\",\n    NEW_WALL: \"new_wall\",\n    NEW_SPACE_RECTANGLE: \"new_space_rectangle\",\n    NEW_SPACE_POLYGON: \"new_space_polygon\",\n    NEW_DOOR: \"new_door\",\n    NEW_LABEL: \"new_label\",\n    NEW_TOKEN: \"new_token\"\n};\n\nexport default TOOL_TYPE;\n","import TOOL_TYPE from \"../tools/toolType\";\nimport DUNGEON_ACTION_TYPE from \"./dungeonActionType\";\nimport EDITOR_ACTION_TYPE from \"./editorActionType\";\n\n/**\n * @typedef {defaultEditorState} EditorState\n */\nexport const defaultEditorState = {\n    scrollMovesViewport: false,\n    selectedTool: TOOL_TYPE.NEW_SPACE_RECTANGLE,\n    scale: 100,\n    position: {\n        x: 0,\n        y: 0\n    },\n    mouse: {\n        mouseDown: false,\n        startPosition: {\n            x: 0,\n            y: 0\n        },\n        currentPosition: {\n            x: 0,\n            y: 0\n        }\n    },\n    keyboard: {\n        heldKeys: {}\n    },\n    /** @type {string[]} */\n    selectedObjectIds: []\n};\n\n/**\n * @returns {EditorState}\n */\nexport const editorReducer = (state = defaultEditorState, action) => {\n    switch (action.type) {\n        case EDITOR_ACTION_TYPE.KEY_PRESSED: {\n            let newHeldKeys = {...state.keyboard.heldKeys};\n            newHeldKeys[action.key] = true;\n            return {\n                ...state,\n                keyboard: {\n                    ...state.keyboard,\n                    heldKeys: newHeldKeys\n                }\n            }\n        }\n        case EDITOR_ACTION_TYPE.KEY_RELEASED: {\n            let newHeldKeys = {...state.keyboard.heldKeys};\n            delete newHeldKeys[action.key];\n            return {\n                ...state,\n                keyboard: {\n                    ...state.keyboard,\n                    heldKeys: newHeldKeys\n                }\n            }\n        }\n        case EDITOR_ACTION_TYPE.PNG_EXPORTED: {\n            return {\n                ...state,\n                exportToPngClicked: null\n            }\n        }\n        case EDITOR_ACTION_TYPE.EXPORT_TO_PNG_CLICKED: {\n            return {\n                ...state,\n                exportToPngClicked: true\n            }\n        }\n        case EDITOR_ACTION_TYPE.CLEAR_ONGOING_SPACE_POLYGON: {\n            return {\n                ...state,\n                ongoingSpacePolygon: null\n            }\n        }\n        case EDITOR_ACTION_TYPE.ADD_ONGOING_SPACE_POLYGON: {\n            let newPolygonArray = [...(state.ongoingSpacePolygon ?? []), action.position]\n            return {\n                ...state,\n                ongoingSpacePolygon: newPolygonArray\n            }\n        }\n        case EDITOR_ACTION_TYPE.MOVE_VIEWPORT: {\n            return {\n                ...state,\n                position: {\n                    x: state.position.x + action.deltaX,\n                    y: state.position.y + action.deltaY\n                }\n            }\n        }\n        case EDITOR_ACTION_TYPE.SET_CURRENT_MOUSE_POSITION: {\n            return {\n                ...state,\n                mouse: {\n                    ...state.mouse,\n                    currentPosition: {\n                        x: action.x,\n                        y: action.y\n                    }\n                }\n            }\n        }\n        case EDITOR_ACTION_TYPE.SCROLL_EVENT: {\n            if (!state.scrollMovesViewport || action.holdingCtrl) {\n                let scaleDelta = 10\n                if (action.scrollY > 0) {\n                    scaleDelta *= -1\n                }\n                let minimumScale = 10;\n                let maximumScale = 200;\n                let newScale = Math.min(Math.max(state.scale + scaleDelta, minimumScale), maximumScale)\n                if (state.scale !== newScale) {\n                    return {\n                        ...state,\n                        scale: newScale,\n                        position: {\n                            x: state.position.x - (state.mouse.currentPosition.x * (scaleDelta / 100)),\n                            y: state.position.y - (state.mouse.currentPosition.y * (scaleDelta / 100)),\n                        }\n                    };\n                }\n                else {\n                    return state;\n                }\n            }\n            else {\n                let scaleDelta = 0.5;\n                return {\n                    ...state,\n                    position: {\n                        x: state.position.x - action.scrollX * scaleDelta,\n                        y: state.position.y - action.scrollY * scaleDelta\n                    }\n                };\n            }\n        }\n        case EDITOR_ACTION_TYPE.MOUSE_DOWN: {\n            return {\n                ...state,\n                mouse: {\n                    ...state.mouse,\n                    mouseDown: true,\n                    startPosition: {\n                      x: state.mouse.currentPosition.x,\n                      y: state.mouse.currentPosition.y\n                    }\n                }\n            };\n        }\n        case EDITOR_ACTION_TYPE.MOUSE_UP: {\n            return {\n                ...state,\n                mouse: {\n                    ...state.mouse,\n                    mouseDown: false\n                }\n            };\n        }\n        case EDITOR_ACTION_TYPE.SET_SCROLL_MOVES_VIEWPORT: {\n            return {\n                ...state,\n                scrollMovesViewport: action.scrollMovesViewport\n            }\n        }\n        case EDITOR_ACTION_TYPE.SELECT_TOOL: {\n            let newSelectedObjectIds = state.selectedObjectIds;\n            if (action.selectedTool !== TOOL_TYPE.SELECT) {\n                newSelectedObjectIds = [];\n            }\n            return {\n                ...state,\n                selectedTool: action.selectedTool,\n                selectedObjectIds: newSelectedObjectIds\n            };\n        }\n        case EDITOR_ACTION_TYPE.SELECT_OBJECT: {\n            let newSelectedObjectIds;\n            if (action.shouldMultiSelect && state.selectedObjectIds.includes(action.objectId)) {\n                newSelectedObjectIds = state.selectedObjectIds.filter(objectId => objectId !== action.objectId);\n            }\n            else if (action.shouldMultiSelect) {\n                newSelectedObjectIds = [...state.selectedObjectIds, action.objectId];\n            }\n            else {\n                newSelectedObjectIds = [action.objectId];\n            }\n            return {\n                ...state,\n                selectedObjectIds: newSelectedObjectIds\n            }\n        }\n        case EDITOR_ACTION_TYPE.SELECT_OBJECTS: {\n            let newSelectedObjectIds;\n            if (action.shouldMultiSelect) {\n                newSelectedObjectIds = [...new Set([...state.selectedObjectIds, ...action.objectIds])];\n            }\n            else {\n                newSelectedObjectIds = action.objectIds;\n            }\n            return {\n                ...state,\n                selectedObjectIds: newSelectedObjectIds\n            };\n        }\n        case DUNGEON_ACTION_TYPE.DELETE_OBJECTS: {\n            return {\n                ...state,\n                selectedObjectIds: []\n            }\n        }\n        case DUNGEON_ACTION_TYPE.ADD_OBJECT: {\n            return {\n                ...state,\n                selectedObjectIds: [action.newObject.id]\n            }\n        }\n        default: {\n            return {\n                ...state\n            }\n        }\n    }\n}\n","import { combineReducers } from 'redux'\nimport dungeonReducer from './dungeonReducer'\nimport { editorReducer } from './editorReducer'\n\n/**\n * @typedef {{\n *  editor: import('./editorReducer').EditorState,\n *  dungeon: import('./dungeonReducer').DungeonState\n * }} State\n */\n\nexport default combineReducers({\n    editor: editorReducer,\n    dungeon: dungeonReducer\n})\n","import { createStore } from 'redux';\nimport reducer from './reducers/index'\n\nconst store = createStore(reducer,\n  {},\n  typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nexport default store;\n","import DUNGEON_ACTION_TYPE from \"./dungeonActionType\";\n\nexport const clearDungeon = () => ({\n    type: DUNGEON_ACTION_TYPE.NEW_DUNGEON\n})\n\nexport const setDungeonName = (dungeonName) => ({\n    type: DUNGEON_ACTION_TYPE.SET_DUNGEON_NAME,\n    name: dungeonName\n})\n\n/**\n * @param {import('../dungeonObjects/DungeonObjectOperations').DungeonObject} object\n */\nexport const addObject = (object) => ({\n    type: DUNGEON_ACTION_TYPE.ADD_OBJECT,\n    newObject: object\n})\n\nexport const deleteObjects = (objectIds) => ({\n    type: DUNGEON_ACTION_TYPE.DELETE_OBJECTS,\n    objectIds\n})\n\nexport const moveObjects = (selectedObjectIds, deltaX, deltaY) => ({\n    type: DUNGEON_ACTION_TYPE.MOVE_SELECTED_OBJECT,\n    selectedObjectIds,\n    deltaX: deltaX,\n    deltaY: deltaY\n})\n\nexport const setSelectedObjectTextureUrl = (selectedObject, texturePath) => ({\n    type: DUNGEON_ACTION_TYPE.SET_SELECTED_OBJECT_TEXTURE_PATH,\n    selectedObject,\n    texturePath: texturePath\n})\n\nexport const setSelectedObjectLabel = (selectedObject, label) => ({\n    type: DUNGEON_ACTION_TYPE.SET_SELECTED_OBJECT_LABEL,\n    selectedObject,\n    label: label\n})\n\nexport const setSelectedObjectPosition = (selectedObject, x, y) => ({\n    type: DUNGEON_ACTION_TYPE.SET_SELECTED_OBJECT_POSITION,\n    selectedObject,\n    x: x,\n    y: y\n})\n\nexport const setSelectedObjectSize = (selectedObject, width, height) => ({\n    type: DUNGEON_ACTION_TYPE.SET_SELECTED_OBJECT_SIZE,\n    selectedObject,\n    width: width,\n    height: height\n})\n\nexport const setSelectedObjectStart = (selectedObject, x, y) => ({\n    type: DUNGEON_ACTION_TYPE.SET_SELECTED_OBJECT_START,\n    selectedObject,\n    x: x,\n    y: y\n})\n\nexport const setSelectedObjectEnd = (selectedObject, x, y) => ({\n    type: DUNGEON_ACTION_TYPE.SET_SELECTED_OBJECT_END,\n    selectedObject,\n    x: x,\n    y: y\n})\n\nexport const setSelectedObjectAngle = (selectedObject, angle) => ({\n    type: DUNGEON_ACTION_TYPE.SET_SELECTED_OBJECT_ANGLE,\n    selectedObject,\n    angle: angle\n})\n\nexport const setDungeonSize = (width, height) => ({\n    type: DUNGEON_ACTION_TYPE.SET_DUNGEON_SIZE,\n    width: width,\n    height: height\n})\n","const square = (x) => x * x;\n\nexport const lineLength = (v, w) => Math.sqrt(square(v.x - w.x) + square(v.y - w.y));\n\nexport const getClosestPointOnLine = (p, a, b) => {\n\n    var atob = { x: b.x - a.x, y: b.y - a.y };\n    var atop = { x: p.x - a.x, y: p.y - a.y };\n    var len = atob.x * atob.x + atob.y * atob.y;\n    var dot = atop.x * atob.x + atop.y * atob.y;\n    var t = Math.min( 1, Math.max( 0, dot / len ) );\n    return {\n        x: a.x + atob.x * t,\n        y: a.y + atob.y * t\n    };\n}\n\n/**\n * @typedef {{x: number, y: number, width: number, height: number}} Rectangle\n * @param {Rectangle} rect1\n * @param {Rectangle} rect2\n */\nexport const doRectanglesIntersect = (rect1, rect2) => {\n    let x = Math.max(rect1.x, rect2.x);\n    let num1 = Math.min(rect1.x + rect1.width, rect2.x + rect2.width);\n    let y = Math.max(rect1.y, rect2.y);\n    let num2 = Math.min(rect1.y + rect1.height, rect2.y + rect2.height);\n    if (num1 >= x && num2 >= y)\n      return true;\n    else\n      return false;\n}\n","import * as PIXI from 'pixi.js';\nimport { createDoor } from \"../dungeonObjects/DoorOperations\";\nimport { WALL_TYPE } from \"../dungeonObjects/WallOperations\";\nimport { addObject } from \"../reducers/dungeonActions\";\nimport { GRID_TILE_SIZE } from \"../utils/constants\";\nimport { getClosestPointOnLine, lineLength } from \"../utils/geometry\";\n\nexport default class AddDoorTool {\n    onMouseUp(store) {\n        let state = store.getState();\n        let mousePoint = state.editor.mouse.currentPosition;\n        let minDistance = 25;\n        let snapPoint = null;\n        let minWallId = null;\n        state.dungeon.objects\n            .filter(object => object.type === WALL_TYPE)\n            .forEach(wall =>{\n                // try each point and get the shortest distance\n                let scaledStart = {\n                    x: wall.start.x * GRID_TILE_SIZE,\n                    y: wall.start.y * GRID_TILE_SIZE\n                };\n                let scaledEnd = {\n                    x: wall.end.x * GRID_TILE_SIZE,\n                    y: wall.end.y * GRID_TILE_SIZE\n                }\n                let closestPoint = getClosestPointOnLine({\n                        x: state.editor.mouse.startPosition.x,\n                        y: state.editor.mouse.startPosition.y\n                    }, scaledStart, scaledEnd);\n                // if the shortest distance of one is < snapping threshold, snap to it\n                let distance = lineLength(closestPoint, {\n                    x: state.editor.mouse.startPosition.x,\n                    y: state.editor.mouse.startPosition.y\n                });\n                if (!minDistance || distance < minDistance) {\n                    minDistance = distance;\n                    snapPoint = closestPoint;\n                    minWallId = wall.id;\n                }\n            });\n\n        let doorWall = state.dungeon.objects.find(wall => wall.id === minWallId);\n\n        if (!doorWall) {\n            return;\n        }\n\n        let scaledStart = {\n            x: doorWall.start.x * GRID_TILE_SIZE,\n            y: doorWall.start.y * GRID_TILE_SIZE\n        };\n        let scaledEnd = {\n            x: doorWall.end.x * GRID_TILE_SIZE,\n            y: doorWall.end.y * GRID_TILE_SIZE\n        }\n        let endPoint = getClosestPointOnLine(mousePoint, scaledStart, scaledEnd);\n        store.dispatch(addObject(createDoor(\n            snapPoint.x / GRID_TILE_SIZE,\n            snapPoint.y / GRID_TILE_SIZE,\n            endPoint.x / GRID_TILE_SIZE,\n            endPoint.y / GRID_TILE_SIZE)));\n    }\n\n    renderTool(state, graphics) {\n        let mousePoint = state.editor.mouse.currentPosition;\n        if (!state.editor.mouse.mouseDown) {\n            // try to snap to the nearest line:\n            // for each line, get the nearest point on the line\n            let minDistance = 25;\n            let snapPoint = null;\n            state.dungeon.objects\n                .filter(object => object.type === WALL_TYPE)\n                .forEach(wall => {\n                    // try each point and get the shortest distance\n                    let scaledStart = {\n                        x: wall.start.x * GRID_TILE_SIZE,\n                        y: wall.start.y * GRID_TILE_SIZE\n                    };\n                    let scaledEnd = {\n                        x: wall.end.x * GRID_TILE_SIZE,\n                        y: wall.end.y * GRID_TILE_SIZE\n                    }\n                    let closestPoint = getClosestPointOnLine(mousePoint, scaledStart, scaledEnd);\n                    // if the shortest distance of one is < snapping threshold, snap to it\n                    let distance = lineLength(closestPoint, mousePoint);\n                    if (!minDistance || distance < minDistance) {\n                        minDistance = distance;\n                        snapPoint = closestPoint;\n                    }\n                });\n            if (snapPoint) {\n                graphics.lineStyle();\n                graphics.beginFill(0xfffd00);\n                graphics.drawCircle(snapPoint.x, snapPoint.y, 2.5);\n                graphics.endFill();\n            }\n        }\n        else {\n            let minDistance = 25;\n            let snapPoint = null;\n            let minWallId = null;\n            state.dungeon.objects\n                .filter(object => object.type === WALL_TYPE)\n                .forEach(wall => {\n                    // try each point and get the shortest distance\n                    let scaledStart = {\n                        x: wall.start.x * GRID_TILE_SIZE,\n                        y: wall.start.y * GRID_TILE_SIZE\n                    };\n                    let scaledEnd = {\n                        x: wall.end.x * GRID_TILE_SIZE,\n                        y: wall.end.y * GRID_TILE_SIZE\n                    }\n                    let closestPoint = getClosestPointOnLine({\n                            x: state.editor.mouse.startPosition.x,\n                            y: state.editor.mouse.startPosition.y\n                        }, scaledStart, scaledEnd);\n                    // if the shortest distance of one is < snapping threshold, snap to it\n                    let distance = lineLength(closestPoint, {\n                        x: state.editor.mouse.startPosition.x,\n                        y: state.editor.mouse.startPosition.y\n                    });\n                    if (!minDistance || distance < minDistance) {\n                        minDistance = distance;\n                        snapPoint = closestPoint;\n                        minWallId = wall.id;\n                    }\n                });\n            // draw a line from the start point\n            if (!snapPoint) {\n                return;\n            }\n\n            let startX = snapPoint.x;\n            let startY = snapPoint.y;\n\n            let doorWall = state.dungeon.objects.find(wall => wall.id === minWallId);\n            let scaledStart = {\n                x: doorWall.start.x * GRID_TILE_SIZE,\n                y: doorWall.start.y * GRID_TILE_SIZE\n            };\n            let scaledEnd = {\n                x: doorWall.end.x * GRID_TILE_SIZE,\n                y: doorWall.end.y * GRID_TILE_SIZE\n            }\n            let endPoint = getClosestPointOnLine(mousePoint, scaledStart, scaledEnd);\n\n            let endX = endPoint.x;\n            let endY = endPoint.y;\n\n            graphics.lineStyle(5, 0xfffd00);\n            graphics.line.cap = PIXI.LINE_CAP.ROUND;\n            graphics.moveTo(startX, startY);\n            graphics.lineTo(endX, endY);\n            graphics.lineStyle();\n        }\n    }\n}\n","import { GRID_TILE_SIZE } from \"../utils/constants\";\nimport { addObject } from \"../reducers/dungeonActions\";\nimport { createLabel } from \"../dungeonObjects/LabelOperations\";\n\nexport default class AddLabelTool {\n    onMouseUp(store) {\n        let state = store.getState();\n        let mousePoint = state.editor.mouse.currentPosition;\n        let dungeonSpaceX = mousePoint.x / GRID_TILE_SIZE;\n        let dungeonSpaceY = mousePoint.y / GRID_TILE_SIZE;\n        store.dispatch(addObject(createLabel(dungeonSpaceX, dungeonSpaceY, \"Text Label\")));\n    }\n\n    renderTool(state, graphics) {\n    }\n}\n","import { GRID_TILE_SIZE } from \"../utils/constants\";\nimport { addObject } from \"../reducers/dungeonActions\";\nimport { addOngoingSpacePolygonPoint, clearOngoingSpacePolygonPoint } from '../reducers/editorActions'\nimport { createSpace } from \"../dungeonObjects/SpaceOperations\";\n\nexport default class AddSpacePolygonTool {\n\n    onMouseUp(store) {\n        let state = store.getState();\n        let mousePoint = state.editor.mouse.currentPosition;\n        let x = Math.round(mousePoint.x / GRID_TILE_SIZE);\n        let y = Math.round(mousePoint.y / GRID_TILE_SIZE);\n\n        let firstPoint = state.editor.ongoingSpacePolygon?.[0];\n        if (firstPoint && firstPoint.x === x && firstPoint.y === y ) {\n            // close it out\n            let pointArray = state.editor.ongoingSpacePolygon;\n            store.dispatch(clearOngoingSpacePolygonPoint());\n            store.dispatch(addObject(createSpace({points: pointArray})));\n        }\n        else {\n            store.dispatch(addOngoingSpacePolygonPoint(x, y));\n        }\n    }\n\n    renderTool(state, graphics) {\n        // if there's no ongoing polygon, just snap to a corner\n        let mousePoint = state.editor.mouse.currentPosition;\n        // get nearest center point\n        let hoverX = Math.round(mousePoint.x / GRID_TILE_SIZE) * GRID_TILE_SIZE;\n        let hoverY = Math.round(mousePoint.y / GRID_TILE_SIZE) * GRID_TILE_SIZE;\n\n        if (!state.editor.ongoingSpacePolygon) {\n            graphics.lineStyle();\n            graphics.beginFill(0xfffd00);\n            graphics.drawCircle(hoverX, hoverY, 2.5);\n            graphics.endFill();\n        }\n        else {\n            graphics.lineStyle(2, 0xfffd00);\n            let firstPoint = state.editor.ongoingSpacePolygon[0];\n            graphics.moveTo(\n                firstPoint.x * GRID_TILE_SIZE,\n                firstPoint.y * GRID_TILE_SIZE);\n            for (let index = 1; index < state.editor.ongoingSpacePolygon.length; index++) {\n                const point = state.editor.ongoingSpacePolygon[index];\n                graphics.lineTo(point.x * GRID_TILE_SIZE, point.y * GRID_TILE_SIZE);\n            }\n            graphics.lineTo(hoverX, hoverY);\n            // then draw to where mouse is hovering over\n            graphics.lineStyle();\n        }\n    }\n}\n","import { GRID_TILE_SIZE } from \"../utils/constants\";\nimport { addObject } from \"../reducers/dungeonActions\";\nimport { createSpace } from \"../dungeonObjects/SpaceOperations\";\n\nexport default class AddSpaceRectangleTool {\n\n    onMouseUp(store) {\n        let state = store.getState();\n        let mousePoint = state.editor.mouse.currentPosition;\n        let startX = Math.floor(Math.min(state.editor.mouse.startPosition.x, mousePoint.x) / GRID_TILE_SIZE);\n        let startY = Math.floor(Math.min(state.editor.mouse.startPosition.y, mousePoint.y) / GRID_TILE_SIZE);\n        let endX = Math.ceil(Math.max(state.editor.mouse.startPosition.x, mousePoint.x) / GRID_TILE_SIZE);\n        let endY = Math.ceil(Math.max(state.editor.mouse.startPosition.y, mousePoint.y) / GRID_TILE_SIZE);\n        store.dispatch(addObject(createSpace({ startX, startY, endX, endY})));\n    }\n\n    renderTool(state, graphics) {\n        let mousePoint = state.editor.mouse.currentPosition;\n        let snappedX, snappedY, width, height;\n        if (state.editor.mouse.mouseDown) {\n            let startX = Math.min(state.editor.mouse.startPosition.x, mousePoint.x);\n            let startY = Math.min(state.editor.mouse.startPosition.y, mousePoint.y);\n            let endX = Math.max(state.editor.mouse.startPosition.x, mousePoint.x);\n            let endY = Math.max(state.editor.mouse.startPosition.y, mousePoint.y);\n            snappedX = Math.floor(startX / GRID_TILE_SIZE) * GRID_TILE_SIZE;\n            snappedY = Math.floor(startY / GRID_TILE_SIZE) * GRID_TILE_SIZE;\n            endX = Math.floor(endX / GRID_TILE_SIZE) * GRID_TILE_SIZE + GRID_TILE_SIZE;\n            endY = Math.floor(endY / GRID_TILE_SIZE) * GRID_TILE_SIZE + GRID_TILE_SIZE;\n            width = endX - snappedX;\n            height = endY - snappedY;\n        }\n        else {\n            // snap to nearest grid point\n            // for now for simplicity let's say top left\n            snappedX = Math.floor(mousePoint.x / GRID_TILE_SIZE) * GRID_TILE_SIZE;\n            snappedY = Math.floor(mousePoint.y / GRID_TILE_SIZE) * GRID_TILE_SIZE;\n            width = GRID_TILE_SIZE;\n            height = GRID_TILE_SIZE;\n        }\n        // draw a hover rect\n        graphics.beginFill(0, 0);\n        graphics.lineStyle(1, 0xfffd00);\n        graphics.drawRect(snappedX, snappedY, width, height);\n        graphics.endFill();\n    }\n}\n","import { GRID_TILE_SIZE } from '../utils/constants';\nimport { addObject } from '../reducers/dungeonActions';\nimport { createToken } from '../dungeonObjects/TokenOperations';\n\nexport default class AddTokenTool {\n    // TODO: Make this configurable based on the currently selected token or something along those lines\n    tokenTextureUrl = '/assets/stairs.png';\n    height = 2;\n    width = 1;\n\n    onMouseUp(store) {\n        let state = store.getState();\n        let mousePoint = state.editor.mouse.currentPosition;\n        let snappedX, snappedY;\n\n        // snap to nearest grid point\n        // for now for simplicity let's say top left\n        snappedX = Math.floor(mousePoint.x / GRID_TILE_SIZE);\n        snappedY = Math.floor(mousePoint.y / GRID_TILE_SIZE);\n\n        store.dispatch(addObject(createToken(\n            this.tokenTextureUrl,\n            snappedX,\n            snappedY,\n            this.width,\n            this.height,\n            0\n        )));\n    }\n\n    renderTool(state, graphics) {\n        // preview the sprite in the current location\n        let mousePoint = state.editor.mouse.currentPosition;\n        let snappedX, snappedY;\n\n        // snap to nearest grid point\n        // for now for simplicity let's say top left\n        snappedX = Math.floor(mousePoint.x / GRID_TILE_SIZE) * GRID_TILE_SIZE;\n        snappedY = Math.floor(mousePoint.y / GRID_TILE_SIZE) * GRID_TILE_SIZE;\n\n        // draw a hover rect\n        graphics.beginFill(0, 0);\n        graphics.lineStyle(1, 0xfffd00);\n        graphics.drawRect(snappedX, snappedY, this.width * GRID_TILE_SIZE, this.height * GRID_TILE_SIZE);\n        graphics.endFill();\n    }\n}\n","import * as PIXI from 'pixi.js';\nimport { createWall } from \"../dungeonObjects/WallOperations\";\nimport { addObject } from \"../reducers/dungeonActions\";\nimport { GRID_TILE_SIZE } from \"../utils/constants\";\n\nexport default class AddWallTool {\n    onMouseUp(store) {\n        let state = store.getState();\n        let mousePoint = state.editor.mouse.currentPosition;\n        let startX = Math.round(state.editor.mouse.startPosition.x / GRID_TILE_SIZE);\n        let startY = Math.round(state.editor.mouse.startPosition.y / GRID_TILE_SIZE);\n        let endX = Math.round(mousePoint.x / GRID_TILE_SIZE);\n        let endY = Math.round(mousePoint.y / GRID_TILE_SIZE);\n        store.dispatch(addObject(createWall(startX, startY, endX, endY)));\n    }\n\n    renderTool(state, graphics) {\n        let mousePoint = state.editor.mouse.currentPosition;\n        if (state.editor.mouse.mouseDown) {\n            let startX = Math.round(state.editor.mouse.startPosition.x / GRID_TILE_SIZE) * GRID_TILE_SIZE;\n            let startY = Math.round(state.editor.mouse.startPosition.y / GRID_TILE_SIZE) * GRID_TILE_SIZE;\n            let endX = Math.round(mousePoint.x / GRID_TILE_SIZE) * GRID_TILE_SIZE;\n            let endY = Math.round(mousePoint.y / GRID_TILE_SIZE) * GRID_TILE_SIZE;\n            graphics.lineStyle(5, 0xfffd00);\n            graphics.line.cap = PIXI.LINE_CAP.ROUND;\n            graphics.moveTo(startX, startY);\n            graphics.lineTo(endX, endY);\n            graphics.lineStyle();\n            graphics.endFill();\n        }\n        else {\n            // get nearest center point\n            let hoverX = Math.round(mousePoint.x / GRID_TILE_SIZE) * GRID_TILE_SIZE;\n            let hoverY = Math.round(mousePoint.y / GRID_TILE_SIZE) * GRID_TILE_SIZE;\n\n            graphics.lineStyle();\n            graphics.beginFill(0xfffd00);\n            graphics.drawCircle(hoverX, hoverY, 2.5);\n            graphics.endFill();\n        }\n    }\n}\n","import * as PIXI from 'pixi.js';\nimport { createRenderObject, renderObject, translate } from '../dungeonObjects/DungeonObjectOperations';\nimport { moveObjects } from '../reducers/dungeonActions';\nimport { selectObject, selectObjects } from \"../reducers/editorActions\";\nimport { GRID_TILE_SIZE } from \"../utils/constants\";\nimport { doRectanglesIntersect } from '../utils/geometry';\n\nconst DRAG_THRESHOLD = 5;\n\nconst pastDragThreshold = (startPosition, endPosition) => {\n    return Math.abs(endPosition.x - startPosition.x) > DRAG_THRESHOLD ||\n        Math.abs(endPosition.y - startPosition.y) > DRAG_THRESHOLD;\n}\n\nconst getTranslation = (endPosition, startPosition) => ({\n    deltaX: Math.round((endPosition.x - startPosition.x) / GRID_TILE_SIZE),\n    deltaY: Math.round((endPosition.y - startPosition.y) / GRID_TILE_SIZE)\n})\n\nconst createRectangle = (startPosition, endPosition) => ({\n    x: Math.min(startPosition.x, endPosition.x),\n    y: Math.min(startPosition.y, endPosition.y),\n    width: Math.abs(endPosition.x - startPosition.x),\n    height: Math.abs(endPosition.y - startPosition.y)\n})\n\nlet startedMove = false;\n\n/**\n * Possible states to be in. Values correspond to powers of 2,\n * since in some cases it is possible to be in multiple states.\n */\nconst STATES = {\n    SELECTING_IN_BOUNDING_BOX: 1,\n    POSSIBLY_DRAGGING_TO_MOVE: 2,\n    POSSIBLY_SELECTING_LAST_HIT_OBJECT: 4,\n    POSSIBLY_DESELECTING_LAST_HIT_OBJECT: 8\n};\n\nexport default class SelectTool {\n    /**\n     * @private\n     */\n    initializeGraphicsForMoving(graphics, state) {\n        this.graphics = graphics;\n        this.graphics.zIndex = 9;\n        this.graphics.alpha = 0.5;\n        state.dungeon.objects\n            .filter(dungeonObject => state.editor.selectedObjectIds.includes(dungeonObject.id))\n            .forEach(dungeonObject => {\n                let dungeonRenderObject = createRenderObject(dungeonObject);\n                dungeonRenderObject.id = dungeonObject.id;\n                this.graphics.addChild(dungeonRenderObject);\n            });\n    }\n\n    /**\n     * @private\n     */\n    resetGraphicsAfterMoving() {\n        this.graphics.removeChildren(0, this.graphics.children.length);\n        this.graphics.zIndex = Number.MAX_SAFE_INTEGER;\n        this.graphics.alpha = 1;\n        this.graphics = null;\n        startedMove = false;\n    }\n\n    // TODO: Consider injecting `app` via ctor instead of function\n    onMouseDown(store, app) {\n        /** @type {import(\"../reducers\").State} */\n        let state = store.getState();\n\n        const currentPosition = state.editor.mouse.currentPosition;\n        const shouldAddToSelection = state.editor.keyboard.heldKeys[\"Shift\"];\n\n        let mousePoint = new PIXI.Point(\n            currentPosition.x,\n            currentPosition.y);\n        let mousePointInGlobalCoordinates = app.stage.worldTransform.apply(mousePoint);\n\n        let hitObject = app.renderer.plugins.interaction.hitTest(\n            mousePointInGlobalCoordinates);\n        let hitObjectIsAlreadySelected = hitObject && state.editor.selectedObjectIds.includes(hitObject.id);\n\n        if (!hitObject && !shouldAddToSelection) {\n            store.dispatch(selectObjects([], false));\n            this.currentStates = STATES.SELECTING_IN_BOUNDING_BOX;\n        }\n        else if (!hitObject && shouldAddToSelection) {\n            this.currentStates = STATES.SELECTING_IN_BOUNDING_BOX;\n        }\n        else if (hitObject && shouldAddToSelection && hitObjectIsAlreadySelected) {\n            this.currentStates = STATES.POSSIBLY_DRAGGING_TO_MOVE | STATES.POSSIBLY_DESELECTING_LAST_HIT_OBJECT;\n            this.lastHitId = hitObject.id;\n        }\n        else if (hitObject && shouldAddToSelection && !hitObjectIsAlreadySelected) {\n            store.dispatch(selectObject(hitObject.id, shouldAddToSelection));\n            this.currentStates = STATES.POSSIBLY_DRAGGING_TO_MOVE;\n        }\n        else if (hitObject && !shouldAddToSelection) {\n            if (!hitObjectIsAlreadySelected) {\n                store.dispatch(selectObject(hitObject.id, shouldAddToSelection));\n            }\n            this.currentStates = STATES.POSSIBLY_DRAGGING_TO_MOVE | STATES.POSSIBLY_SELECTING_LAST_HIT_OBJECT;\n            this.lastHitId = hitObject.id\n        }\n    }\n\n    onMouseUp(store, app) {\n        /** @type {import(\"../reducers\").State} */\n        let state = store.getState();\n\n        const startPosition = state.editor.mouse.startPosition;\n        const endPosition = state.editor.mouse.currentPosition;\n        const shouldAddToSelection = state.editor.keyboard.heldKeys[\"Shift\"];\n        const isDragging = pastDragThreshold(startPosition, endPosition);\n\n        if (this.currentStates === STATES.SELECTING_IN_BOUNDING_BOX && isDragging) {\n            let boundingRectangle = createRectangle(startPosition, endPosition);\n\n            let objectIdsToSelect = [];\n            app.stage.children.forEach(child => {\n                if (doRectanglesIntersect(child.getLocalBounds(), boundingRectangle) && child.id) {\n                    objectIdsToSelect.push(child.id);\n                }\n            });\n            store.dispatch(selectObjects(objectIdsToSelect, shouldAddToSelection));\n\n        }\n        else if ((this.currentStates & STATES.POSSIBLY_DESELECTING_LAST_HIT_OBJECT) && !isDragging) {\n            store.dispatch(selectObject(this.lastHitId, true));\n        }\n        else if ((this.currentStates & STATES.POSSIBLY_SELECTING_LAST_HIT_OBJECT) && !isDragging) {\n            store.dispatch(selectObject(this.lastHitId, false));\n        }\n        else if ((this.currentStates & STATES.POSSIBLY_DRAGGING_TO_MOVE) && isDragging) {\n            let {deltaX, deltaY} = getTranslation(\n                state.editor.mouse.currentPosition,\n                state.editor.mouse.startPosition);\n\n            if (deltaX !== 0 || deltaY !== 0) {\n                store.dispatch(moveObjects(\n                    state.editor.selectedObjectIds,\n                    deltaX,\n                    deltaY));\n            }\n\n            this.resetGraphicsAfterMoving();\n        }\n\n        delete this.currentStates;\n        delete this.lastHitId;\n    }\n\n    /**\n     * @param {import(\"../reducers\").State} state\n     * @param {PIXI.Graphics} graphics\n     */\n    renderTool(state, graphics) {\n        const startPosition = state.editor.mouse.startPosition;\n        const endPosition = state.editor.mouse.currentPosition;\n        const isDragging = pastDragThreshold(startPosition, endPosition);\n\n        if (this.currentStates === STATES.SELECTING_IN_BOUNDING_BOX && isDragging) {\n            let boundingRectangle = createRectangle(startPosition, endPosition);\n            graphics.lineStyle(1, 0xfffd00)\n                .drawRect(boundingRectangle.x, boundingRectangle.y, boundingRectangle.width, boundingRectangle.height)\n                .lineStyle();\n        }\n        else if ((this.currentStates & STATES.POSSIBLY_DRAGGING_TO_MOVE) && isDragging) {\n            if (!this.graphics) {\n                this.initializeGraphicsForMoving(graphics, state);\n            }\n\n            let {deltaX, deltaY} = getTranslation(\n                state.editor.mouse.currentPosition,\n                state.editor.mouse.startPosition\n            );\n\n            if (!startedMove && (Math.abs(deltaX) > 0 || Math.abs(deltaY) > 0)) {\n                startedMove = true;\n            }\n\n            if (startedMove) {\n                state.dungeon.objects\n                    .filter(dungeonObject => state.editor.selectedObjectIds.includes(dungeonObject.id))\n                    .forEach(dungeonObject => {\n                        let objectCopy = JSON.parse(JSON.stringify(dungeonObject));\n                        translate(objectCopy, deltaX, deltaY);\n                        let renderObjectCopy = this.graphics.children.filter(child => child.id === objectCopy.id)[0];\n                        renderObject(renderObjectCopy, objectCopy, false);\n                    });\n            }\n        }\n    }\n}\n","import AddDoorTool from \"./AddDoorTool\";\nimport AddLabelTool from \"./AddLabelTool\";\nimport AddSpacePolygonTool from \"./AddSpacePolygonTool\";\nimport AddSpaceRectangleTool from \"./AddSpaceRectangleTool\";\nimport AddTokenTool from \"./AddTokenTool\";\nimport AddWallTool from \"./AddWallTool\";\nimport SelectTool from \"./SelectTool\";\nimport TOOL_TYPE from \"./toolType\";\n\nconst toolMap = {\n    [TOOL_TYPE.NEW_DOOR]: new AddDoorTool(),\n    [TOOL_TYPE.NEW_SPACE_RECTANGLE]: new AddSpaceRectangleTool(),\n    [TOOL_TYPE.NEW_SPACE_POLYGON]: new AddSpacePolygonTool(),\n    [TOOL_TYPE.NEW_WALL]: new AddWallTool(),\n    [TOOL_TYPE.SELECT]: new SelectTool(),\n    [TOOL_TYPE.NEW_LABEL]: new AddLabelTool(),\n    [TOOL_TYPE.NEW_TOKEN]: new AddTokenTool()\n}\n\nexport const onMouseDown = (store, app) => {\n    let state = store.getState();\n    toolMap[state.editor.selectedTool].onMouseDown?.(store, app);\n}\n\nexport const onMouseUp = (store, app) => {\n    /** @type {import(\"../reducers\").State} */\n    let state = store.getState();\n    toolMap[state.editor.selectedTool].onMouseUp(store, app);\n}\n\nexport const renderTool = (state, graphics) => {\n    toolMap[state.editor.selectedTool].renderTool(state, graphics);\n}\n","let download = (data, filename) => {\n    let downloadLink = document.createElement(\"a\");\n    downloadLink.href = data;\n    downloadLink.download = filename;\n    downloadLink.target = \"_blank\"\n    downloadLink.click();\n}\n\nexport default download;\n","import * as PIXI from 'pixi.js';\nimport * as DungeonObjectOperations from '../dungeonObjects/DungeonObjectOperations';\nimport { pngExported, setCurrentMousePosition } from \"../reducers/editorActions\";\nimport store from '../store.js';\nimport * as ToolRouter from '../tools/ToolRouter';\nimport TOOL_TYPE from '../tools/toolType';\nimport download from \"../utils/download\";\n\n/**\n * @param {PIXI.Application} app\n * @param {PIXI.Graphics} graphics\n * @param {GridRenderer} gridRenderer\n */\nexport const render = (app, graphics, gridRenderer) => {\n    /**\n     * @type {import(\"../reducers\").State}\n     */\n    let state = store.getState();\n\n    handlePanning(app, state);\n    handleScaling(state, app);\n\n    drawDungeonObjects(app.stage, state);\n    gridRenderer.renderGrid(state.dungeon.size.width, state.dungeon.size.height);\n\n    handleExporting(state, app);\n\n    if (app.renderer.plugins.interaction.mouseOverRenderer) {\n        graphics.clear();\n        ToolRouter.renderTool(state, graphics);\n\n        let mousePosition = app.renderer.plugins.interaction.mouse.getLocalPosition(app.stage);\n        store.dispatch(setCurrentMousePosition(mousePosition.x, mousePosition.y));\n    }\n    else {\n        store.dispatch(setCurrentMousePosition(null, null));\n    }\n}\nexport default render;\n\nconst drawDungeonObjects = (container, state) => {\n    let objectIdMap = state.dungeon.objects.reduce((map, object) => {\n        map[object.id] = object;\n        return map;\n    }, {});\n\n    let containerObjectIds = new Set(container.children.map(child => child.id));\n    let stateObjectIds = Object.keys(objectIdMap);\n    stateObjectIds.forEach(objectId => {\n        if (!containerObjectIds.has(objectId)) {\n            let newChildGraphics = DungeonObjectOperations.createRenderObject(objectIdMap[objectId]);\n            newChildGraphics.id = objectId;\n            newChildGraphics.interactive = true;\n            container.addChild(newChildGraphics);\n        }\n    });\n\n    // Sync all child graphics with state\n    container.children.forEach(graphics => {\n        if (graphics.id) {\n            let object = objectIdMap[graphics.id];\n            if (object) {\n                if (state.editor.selectedTool === TOOL_TYPE.SELECT) {\n                    graphics.cursor = \"move\";\n                }\n                else {\n                    graphics.cursor = \"default\";\n                }\n                DungeonObjectOperations.renderObject(graphics, object, state.editor.selectedObjectIds.includes(graphics.id))\n            }\n            else {\n                container.removeChild(graphics);\n            }\n        }\n    });\n}\n\nfunction handleExporting(state, app) {\n    if (state.editor.exportToPngClicked) {\n        exportImage(app, state);\n    }\n}\n\nfunction handleScaling(state, app) {\n    let fractionalScale = state.editor.scale / 100;\n    if (app.stage.scale.x !== fractionalScale) {\n        app.stage.scale.set(fractionalScale);\n    }\n}\n\nfunction handlePanning(app, state) {\n    app.stage.position.set(state.editor.position.x, state.editor.position.y);\n}\n\nfunction exportImage(app, state) {\n    let exportTexture = app.renderer.generateTexture(app.stage,\n        null,\n        1.0 / app.stage.scale.x,\n        new PIXI.Rectangle(\n            app.stage.position.x - 1,\n            app.stage.position.y - 1,\n            app.stage.width,\n            app.stage.height\n        ));\n    let normalizedDungeonName = state.dungeon.name.toLowerCase().replace(/\\s/g, '_');\n    let filename = `${normalizedDungeonName}_${state.dungeon.size.width}x${state.dungeon.size.height}.png`;\n    download(app.renderer.extract.base64(exportTexture), filename);\n    store.dispatch(pngExported());\n}\n","import * as PIXI from 'pixi.js'\nimport { GRID_TILE_SIZE } from '../utils/constants';\n\nexport class GridRenderer {\n    createRenderObject() {\n        this.graphics = new PIXI.Graphics();\n        this.graphics.zIndex = 10;\n        return this.graphics;\n    }\n\n    renderGrid(gridWidth, gridHeight) {\n        this.graphics.clear();\n        this.graphics.lineStyle(1, 0x444444, 1, 0.5);\n        for (let i = 0; i <= gridWidth; i++) {\n            this.graphics.moveTo(i * GRID_TILE_SIZE, 0);\n            this.graphics.lineTo(i * GRID_TILE_SIZE, gridHeight * GRID_TILE_SIZE);\n        }\n\n        for (let j = 0; j <= gridHeight; j++) {\n            this.graphics.moveTo(0, j * GRID_TILE_SIZE);\n            this.graphics.lineTo(gridWidth * GRID_TILE_SIZE, j * GRID_TILE_SIZE);\n        }\n        this.graphics.lineStyle();\n    }\n}\n","import { deleteObjects, moveObjects } from \"../reducers/dungeonActions\";\nimport { keyPressed, keyReleased, selectObjects } from \"../reducers/editorActions\";\nimport TOOL_TYPE from \"../tools/toolType\";\n\n/**\n * @param {KeyboardEvent} keyboardEvent\n * @param {import(\"redux\").Store} store\n */\nexport const handleKeyPressed = (keyboardEvent, store) => {\n    if (!keyboardEvent.repeat) {\n        store.dispatch(keyPressed(keyboardEvent.key));\n    }\n    /**\n     * @type {import(\"../reducers\").State}\n     */\n    let state = store.getState();\n    switch (keyboardEvent.key) {\n        case 'Delete':\n            return store.dispatch(deleteObjects(state.editor.selectedObjectIds));\n        case 'ArrowLeft':\n            return store.dispatch(moveObjects(state.editor.selectedObjectIds, -1, 0));\n        case 'ArrowRight':\n            return store.dispatch(moveObjects(state.editor.selectedObjectIds, 1, 0));\n        case 'ArrowDown':\n            return store.dispatch(moveObjects(state.editor.selectedObjectIds, 0, 1));\n        case 'ArrowUp':\n            return store.dispatch(moveObjects(state.editor.selectedObjectIds, 0, -1));\n        case 'a':\n        case 'A':\n            keyboardEvent.preventDefault();\n            if (state.editor.selectedTool === TOOL_TYPE.SELECT && keyboardEvent.ctrlKey) {\n                store.dispatch(selectObjects(state.dungeon.objects.map(object => object.id)))\n            }\n            return;\n        default:\n            return;\n    }\n}\n\n/**\n * @param {KeyboardEvent} keyboardEvent\n * @param {import(\"redux\").Store} store\n */\nexport const handleKeyReleased = (keyboardEvent, store) => {\n    store.dispatch(keyReleased(keyboardEvent.key));\n}\n","import { mouseDown, mouseUp, moveViewport, scroll } from \"../reducers/editorActions\";\nimport * as ToolRouter from '../tools/ToolRouter';\n\nexport const handleMouseDown = (mouseEvent, store, app) => {\n    if (mouseEvent.buttons === 1) {\n        store.dispatch(mouseDown());\n        ToolRouter.onMouseDown(store, app);\n    }\n}\n\nexport const handleMouseUp = (mouseEvent, store, app) => {\n    let state = store.getState();\n    if (state.editor.mouse.mouseDown) {\n        store.dispatch(mouseUp());\n        ToolRouter.onMouseUp(store, app);\n    }\n}\n\nexport const handleMouseMove = (mouseEvent, store) => {\n    if (mouseEvent.buttons === 2) {\n        let mouseMovementScaledByDisplayScaling = {\n            movementX: mouseEvent.movementX / window.devicePixelRatio,\n            movementY: mouseEvent.movementY / window.devicePixelRatio\n        }\n        store.dispatch(moveViewport(\n            mouseMovementScaledByDisplayScaling.movementX,\n            mouseMovementScaledByDisplayScaling.movementY));\n    }\n}\n\nexport const handleWheelEvent = (wheelEvent, store) => {\n    store.dispatch(scroll(\n        wheelEvent.deltaX,\n        wheelEvent.deltaY,\n        wheelEvent.getModifierState('Control')));\n}\n","import * as PIXI from 'pixi.js';\nimport React from 'react';\nimport { render as renderDungeon } from '../rendering/DungeonRenderer';\nimport { GridRenderer } from '../rendering/GridRenderer';\nimport store from '../store.js';\nimport { handleKeyPressed, handleKeyReleased } from '../utils/keyboardEventHandlers.js';\nimport * as MouseEventHandler from '../utils/mouseEventHandlers.js';\n\nexport default class DungeonEditor extends React.Component {\n    render() {\n        return <div\n            style={{ height: \"85vh\" }}\n            tabIndex={-1}\n            ref={(element) => this.canvasDiv = element}>\n        </div>\n    }\n\n    componentDidMount() {\n        const app = new PIXI.Application({\n            backgroundColor: 0x5f5f5f,\n            sharedLoader: true,\n            sharedTicker: true,\n            antialias: true\n        });\n        this.app = app;\n        this.canvasDiv.appendChild(app.view);\n        this.app.resizeTo = this.canvasDiv;\n        this.app.resize();\n\n        let graphics = new PIXI.Graphics();\n        graphics.zIndex = Number.MAX_SAFE_INTEGER;\n        app.stage.sortableChildren = true;\n        app.stage.addChild(graphics);\n\n        this.setupInteractions(app)\n\n        let gridRenderer = new GridRenderer();\n        app.stage.addChild(gridRenderer.createRenderObject());\n\n        app.ticker.add(() => {\n            renderDungeon(app, graphics, gridRenderer);\n        });\n    }\n\n    setupInteractions(app) {\n        this.canvasDiv.addEventListener(\"wheel\", (wheelEvent) => {\n            MouseEventHandler.handleWheelEvent(wheelEvent, store);\n            wheelEvent.preventDefault();\n        });\n        this.canvasDiv.addEventListener('contextmenu', (event) => {\n            event.preventDefault();\n        });\n        this.canvasDiv.addEventListener('pointerdown', (event) => {\n            MouseEventHandler.handleMouseDown(event, store, app);\n        });\n        this.canvasDiv.addEventListener('pointerup', (event) => {\n            MouseEventHandler.handleMouseUp(event, store, app);\n        });\n        this.canvasDiv.addEventListener('pointermove', (pointerEvent) => {\n            MouseEventHandler.handleMouseMove(pointerEvent, store);\n        });\n        this.canvasDiv.addEventListener('keydown', (event) => {\n            handleKeyPressed(event, store);\n        });\n        this.canvasDiv.addEventListener('keyup', (event) => {\n            handleKeyReleased(event, store);\n        })\n    }\n}\n","import React from 'react'\n\nconst StateEditorCard = ({title, children}) =>\n    <div className=\"card bg-dark text-light border-secondary mb-3\">\n        <div className=\"card-header border-secondary\">\n            <h5>{title}</h5>\n        </div>\n        <div className=\"card-body\">\n            <div className=\"form-group\">\n                {children}\n            </div>\n        </div>\n    </div>\n\nexport default StateEditorCard\n","import React from 'react'\nimport StateEditorCard from './StateEditorCard'\n\nconst PositionEditor = ({ title, x, y, onUpdate }) =>\n    <StateEditorCard title={title ?? 'Position'}>\n        <label>\n            X:\n            <input\n                className=\"form-control bg-secondary text-light\"\n                type=\"number\"\n                value={x}\n                onChange={(changeEvent) => onUpdate(\n                    parseInt(changeEvent.target.value),\n                    y\n                )}>\n            </input>\n        </label>\n        <label>\n            Y:\n            <input\n                className=\"form-control bg-secondary text-light\"\n                type=\"number\"\n                value={y}\n                onChange={(changeEvent) => onUpdate(\n                    x,\n                    parseInt(changeEvent.target.value)\n                )}>\n            </input>\n        </label>\n    </StateEditorCard>\n\nexport default PositionEditor","import React from 'react'\nimport StateEditorCard from './StateEditorCard'\n\nconst SizeEditor = ({ title, width, height, onUpdate }) =>\n    <StateEditorCard title={title ?? 'Size'}>\n        <label>\n            Width:\n            <input\n                className=\"form-control bg-secondary text-light\"\n                type=\"number\"\n                value={width}\n                onChange={(changeEvent) => onUpdate(\n                    parseInt(changeEvent.target.value),\n                    height\n                )}>\n            </input>\n        </label>\n        <label>\n            Height:\n            <input\n                className=\"form-control bg-secondary text-light\"\n                type=\"number\"\n                value={height}\n                onChange={(changeEvent) => onUpdate(\n                    width,\n                    parseInt(changeEvent.target.value)\n                )}>\n            </input>\n        </label>\n    </StateEditorCard>\n\nexport default SizeEditor","import React from \"react\"\nimport { connect } from 'react-redux'\nimport * as DungeonActions from '../reducers/dungeonActions'\nimport * as EditorActions from '../reducers/editorActions'\nimport PositionEditor from \"./PositionEditor\"\nimport SizeEditor from \"./SizeEditor\"\nimport StateEditorCard from \"./StateEditorCard\"\n\nlet StateEditor = ({ dispatch, selectedObjectId, selectedObject, dungeonName, dungeonSize, scrollPansViewport }) => {\n    if (selectedObjectId) {\n        return <React.Fragment>\n            {selectedObject.label !== undefined &&\n                <StateEditorCard title='Label'>\n                    <label>\n                        Label:\n                        <input\n                            className=\"form-control bg-secondary text-light\"\n                            type=\"text\"\n                            value={selectedObject.label}\n                            onChange={(changeEvent) => dispatch(DungeonActions.setSelectedObjectLabel(selectedObjectId, changeEvent.target.value))}>\n                        </input>\n                    </label>\n                </StateEditorCard>}\n            {selectedObject.textureUrl !== undefined &&\n                <StateEditorCard title=\"Texture Path\">\n                    <label>\n                        Path:\n                        <input\n                            className=\"form-control bg-secondary text-light\"\n                            value={selectedObject.textureUrl}\n                            onChange={(changeEvent) => {dispatch(DungeonActions.setSelectedObjectTextureUrl(selectedObjectId, changeEvent.target.value))}}></input>\n                    </label>\n                </StateEditorCard>\n            }\n            {selectedObject.position &&\n                <PositionEditor\n                    x={selectedObject.position.x}\n                    y={selectedObject.position.y}\n                    onUpdate={(x, y) => dispatch(DungeonActions.setSelectedObjectPosition(selectedObjectId, x, y))} />\n            }\n            {selectedObject.size &&\n                <SizeEditor\n                    width={selectedObject.size.width}\n                    height={selectedObject.size.height}\n                    onUpdate={(width, height) => dispatch(DungeonActions.setSelectedObjectSize(selectedObjectId, width, height))} />\n            }\n            {selectedObject.start &&\n                <PositionEditor\n                    title=\"Start\"\n                    x={selectedObject.start.x}\n                    y={selectedObject.start.y}\n                    onUpdate={(x,y) => dispatch(DungeonActions.setSelectedObjectStart(selectedObjectId, x, y))} />\n            }\n            {selectedObject.end &&\n                <PositionEditor\n                    title=\"End\"\n                    x={selectedObject.end.x}\n                    y={selectedObject.end.y}\n                    onUpdate={(x,y) => dispatch(DungeonActions.setSelectedObjectEnd(selectedObjectId, x, y))} />\n            }\n            {selectedObject.angle !== undefined &&\n                <StateEditorCard title=\"Angle\">\n                    <label>\n                        Angle:\n                        <input\n                            className=\"form-control bg-secondary text-light\"\n                            type=\"number\"\n                            step=\"45\"\n                            min=\"-360\"\n                            max=\"360\"\n                            value={selectedObject.angle}\n                            onChange={(changeEvent) => {dispatch(DungeonActions.setSelectedObjectAngle(selectedObjectId, changeEvent.target.value))}}></input>\n                        <input\n                            className=\"form-control bg-secondary text-light\"\n                            type=\"range\"\n                            step=\"45\"\n                            min=\"-360\"\n                            max=\"360\"\n                            style={{direction: \"rtl\"}}\n                            value={selectedObject.angle}\n                            onChange={(changeEvent) => {dispatch(DungeonActions.setSelectedObjectAngle(selectedObjectId, changeEvent.target.value))}}></input>\n                    </label>\n                </StateEditorCard>\n            }\n            {selectedObjectId &&\n                <StateEditorCard title=\"Actions\">\n                    <button\n                        className=\"btn btn-outline-danger\"\n                        onClick={() => dispatch(DungeonActions.deleteObjects([selectedObjectId]))}>\n                            Delete Object\n                    </button>\n                </StateEditorCard>\n            }\n        </React.Fragment>\n    }\n    else {\n        return <React.Fragment>\n            <StateEditorCard title=\"Instructions\">\n                <p><i>Right click</i> to pan the view.</p>\n                <p><i>Scroll</i> to zoom in and out.</p>\n                <p><i>Left click and drag</i> to create new spaces with the New Space tool.</p>\n                <p><i>Left click</i> to select spaces with the Select tool.</p>\n                <p><i>Arrow keys</i> will move the currently selected space.</p>\n                <p><i>Delete</i> will delete the currently selected space.</p>\n            </StateEditorCard>\n            <StateEditorCard title=\"Actions\">\n                <button\n                    className=\"btn btn-primary form-control mb-2\"\n                    onClick={() => dispatch(EditorActions.exportToPngClicked())}>\n                        Download Dungeon as PNG\n                </button>\n                <button\n                    className=\"btn btn-outline-danger form-control mb-2\"\n                    onClick={() => dispatch(DungeonActions.clearDungeon())}>\n                        New Dungeon\n                </button>\n            </StateEditorCard>\n            <StateEditorCard title=\"Dungeon Properties\">\n                <label>\n                    Dungeon Name:\n                    <input\n                        className=\"form-control bg-secondary text-light\"\n                        value={dungeonName}\n                        onChange={(changeEvent) => dispatch(DungeonActions.setDungeonName(changeEvent.target.value)) } />\n                </label>\n            </StateEditorCard>\n            <SizeEditor\n                title=\"Dungeon Size\"\n                width={dungeonSize.width}\n                height={dungeonSize.height}\n                onUpdate={(width, height) => dispatch(DungeonActions.setDungeonSize(width, height))} />\n            <StateEditorCard title=\"Editor Options\">\n                <div className=\"form-check\">\n                    <label className=\"form-check-label\">\n                        <input\n                            className=\"form-check-input\"\n                            type='checkbox'\n                            value={scrollPansViewport}\n                            onChange={(event) => dispatch(EditorActions.setScrollMovesViewport(event.target.checked))} />\n                        Scroll to pan\n                    </label>\n                </div>\n            </StateEditorCard>\n        </React.Fragment>\n    }\n}\n\nconst mapStateToProps = state => {\n    let selectedObjectId = state.editor.selectedObjectIds.length === 1 ? state.editor.selectedObjectIds[0] : null;\n    let selectedObject = selectedObjectId ? state.dungeon.objects.find(object => object.id === selectedObjectId) : null;\n    return {\n        selectedObjectId: selectedObjectId,\n        selectedObject: selectedObject,\n        dungeonName: state.dungeon.name,\n        dungeonSize: state.dungeon.size,\n        scrollMovesViewport: state.editor.scrollMovesViewport\n    }\n}\n\nStateEditor = connect(mapStateToProps)(StateEditor)\n\nexport default StateEditor\n","import React from \"react\"\n\nconst ToolbarButton = ({toolName, toolId, selectedTool, onClick}) =>\n    <button\n        className={\"btn btn-secondary\" +\n            (selectedTool === toolId ? ' active' : '')}\n        onClick={() => onClick(toolId)}>\n            {toolName}\n    </button>\n\nexport default ToolbarButton;","import React from \"react\"\nimport { connect } from 'react-redux'\nimport { selectTool } from '../reducers/editorActions'\nimport ToolbarButton from \"./ToolbarButton\"\nimport TOOL_TYPE from \"../tools/toolType\"\n\nlet Toolbar = ({ dispatch, selectedTool }) => {\n    const dispatchSelectedTool = (toolId) => dispatch(selectTool(toolId))\n\n    return (\n        <div className=\"btn-group\" role=\"group\">\n            <ToolbarButton\n                toolName='Select'\n                toolId={TOOL_TYPE.SELECT}\n                selectedTool={selectedTool}\n                onClick={dispatchSelectedTool} />\n            <ToolbarButton\n                toolName='New Rectangular Space'\n                toolId={TOOL_TYPE.NEW_SPACE_RECTANGLE}\n                selectedTool={selectedTool}\n                onClick={dispatchSelectedTool} />\n            <ToolbarButton\n                toolName='New Polygonal Space'\n                toolId={TOOL_TYPE.NEW_SPACE_POLYGON}\n                selectedTool={selectedTool}\n                onClick={dispatchSelectedTool} />\n            <ToolbarButton\n                toolName='New Wall'\n                toolId={TOOL_TYPE.NEW_WALL}\n                selectedTool={selectedTool}\n                onClick={dispatchSelectedTool} />\n            <ToolbarButton\n                toolName='New Door'\n                toolId={TOOL_TYPE.NEW_DOOR}\n                selectedTool={selectedTool}\n                onClick={dispatchSelectedTool} />\n            <ToolbarButton\n                toolName='New Label'\n                toolId={TOOL_TYPE.NEW_LABEL}\n                selectedTool={selectedTool}\n                onClick={dispatchSelectedTool} />\n            <ToolbarButton\n                toolName='New Token'\n                toolId={TOOL_TYPE.NEW_TOKEN}\n                selectedTool={selectedTool}\n                onClick={dispatchSelectedTool} />\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    selectedTool: state.editor.selectedTool\n})\n\nToolbar = connect(mapStateToProps)(Toolbar)\n\nexport default Toolbar\n","import React from 'react';\nimport DungeonEditor from \"./components/DungeonEditor.js\";\nimport StateEditor from './components/StateEditor';\nimport Toolbar from './components/Toolbar';\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <nav className=\"navbar navbar-dark bg-secondary\">\n        <span className=\"navbar-brand\">\n          Pungeon\n        </span>\n      </nav>\n      <div className=\"px-5\">\n        <div className=\"py-2\">\n          <Toolbar />\n        </div>\n        <div className=\"row\">\n          <div className=\"col-md-9\">\n            <DungeonEditor />\n          </div>\n          <div className=\"col-md-3\">\n            <StateEditor />\n          </div>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app/App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './app/store.js'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}