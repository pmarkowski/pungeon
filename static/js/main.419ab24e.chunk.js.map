{"version":3,"sources":["app/reducers/editorActionType.js","app/reducers/editorActions.js","app/utils/createArrayWithUpdatedObject.js","app/reducers/dungeonActionType.js","app/reducers/dungeonReducer.js","app/tools/toolType.js","app/reducers/editorReducer.js","app/reducers/index.js","app/store.js","app/utils/constants.js","app/utils/dungeonObjectTypes.js","app/reducers/dungeonActions.js","app/utils/geometry.js","app/tools/AddDoorTool.js","app/tools/AddLabelTool.js","app/tools/AddSpaceRectangleTool.js","app/tools/AddWallTool.js","app/tools/SelectTool.js","app/tools/AddSpacePolygonTool.js","app/tools/AddTokenTool.js","app/tools/ToolRouter.js","app/rendering/GraphicsRenderer.js","app/rendering/DoorRenderer.js","app/rendering/LabelRenderer.js","app/rendering/WallRenderer.js","app/rendering/SpaceRenderer.js","app/rendering/TokenRenderer.js","app/rendering/RenderRouter.js","app/utils/download.js","app/rendering/DungeonRenderer.js","app/utils/keyboardEventHandlers.js","app/utils/mouseEventHandlers.js","app/components/DungeonEditor.js","app/components/StateEditorCard.js","app/components/PositionEditor.js","app/components/SizeEditor.js","app/components/StateEditor.js","app/components/ToolbarButton.js","app/components/Toolbar.js","app/App.js","serviceWorker.js","index.js"],"names":["EDITOR_ACTION_TYPE","PNG_EXPORTED","EXPORT_TO_PNG_CLICKED","CLEAR_ONGOING_SPACE_POLYGON","ADD_ONGOING_SPACE_POLYGON","MOVE_VIEWPORT","SET_CURRENT_MOUSE_POSITION","SCROLL_EVENT","MOUSE_DOWN","MOUSE_UP","SET_SCROLL_MOVES_VIEWPORT","SELECT_TOOL","SELECT_OBJECT","SELECT_OBJECTS","SELECT_AT_POINT","SELECT_IN_BOUNDING_BOX","KEY_PRESSED","KEY_RELEASED","selectObjects","objectIds","shouldMultiSelect","type","setCurrentMousePosition","x","y","createArrayWithUpdatedObject","array","id","update","map","object","objectCopy","DUNGEON_ACTION_TYPE","NEW_DUNGEON","SET_DUNGEON_SIZE","MOVE_SELECTED_OBJECT","SET_SELECTED_OBJECT_TEXTURE_PATH","SET_SELECTED_OBJECT_ANGLE","SET_SELECTED_OBJECT_LABEL","SET_SELECTED_OBJECT_POSITION","SET_SELECTED_OBJECT_SIZE","SET_SELECTED_OBJECT_START","SET_SELECTED_OBJECT_END","ADD_OBJECT","DELETE_OBJECTS","dungeonReducer","state","action","size","width","height","objects","arrayWithUpdatedObject","selectedObject","position","deltaX","deltaY","textureUrl","texturePath","angle","label","start","end","objectArray","slice","newObject","newObjectArray","filter","includes","TOOL_TYPE","SELECT","NEW_WALL","NEW_SPACE_RECTANGLE","NEW_SPACE_POLYGON","NEW_DOOR","NEW_LABEL","NEW_TOKEN","defaultEditorState","scrollMovesViewport","selectedTool","scale","mouse","mouseDown","startPosition","currentPosition","keyboard","heldKeys","selectedObjectIds","selectingAtPoint","selectingInBoundingBox","combineReducers","editor","newHeldKeys","key","exportToPngClicked","ongoingSpacePolygon","newPolygonArray","holdingCtrl","scaleDelta","scrollY","minimumScale","maximumScale","newScale","Math","min","max","scrollX","newSelectedObjectIds","objectId","Set","dungeon","store","createStore","reducer","window","__REDUX_DEVTOOLS_EXTENSION__","GRID_TILE_SIZE","DUNGEON_OBJECT_TYPE","SPACE","WALL","DOOR","LABEL","TOKEN","deleteObjects","moveSelectedObject","setSelectedObjectAngle","square","lineLength","v","w","sqrt","getClosestPointOnLine","p","a","b","atob","len","dot","t","AddDoorTool","getState","mousePoint","minDistance","snapPoint","minWallId","forEach","wall","scaledStart","scaledEnd","closestPoint","distance","doorWall","find","startX","startY","endX","endY","endPoint","dispatch","uuid","graphics","lineStyle","moveTo","lineTo","beginFill","drawCircle","endFill","AddLabelTool","labelText","dungeonSpaceX","dungeonSpaceY","AddSpaceRectangleTool","floor","ceil","addSpace","snappedX","snappedY","drawRect","AddWallTool","round","addWall","hoverX","hoverY","isDragging","endPosition","abs","createRectangle","SelectTool","shouldAddToSelection","boundingRectangle","selectAtPoint","AddSpacePolygonTool","positionArray","firstPoint","pointArray","points","addOngoingSpacePolygonPoint","index","length","point","AddTokenTool","tokenTextureUrl","this","toolMap","GraphicsRenderer","PIXI","DoorRenderer","door","objectIsSelected","zIndex","clear","half","tint","hitArea","LabelRenderer","children","style","fontFamily","fontSize","addChild","fill","text","set","WallRenderer","createWallHitArea","startPoint","rise","run","slope","inverseSlope","getOffsetAlongSlope","xOffset","yOffset","polygonXOffset","polygonYOffset","distanceTravelledAlongSlope","slopeAngle","atan","cos","sin","SpaceRenderer","space","TokenRenderer","sprite","token","objectSelectionGraphics","texture","from","process","getChildAt","drawShape","getLocalBounds","removeChildAt","rendererMap","download","data","filename","downloadLink","document","createElement","href","target","click","render","app","stage","handlePanning","fractionalScale","handleScaling","globalPosition","worldTransform","apply","renderer","plugins","interaction","hitTest","objectIdsToSelect","child","rect1","rect2","num1","num2","doRectanglesIntersect","push","handleSelecting","drawDungeonObjects","drawGrid","exportTexture","generateTexture","extract","base64","exportImage","handleExporting","mouseOverRenderer","renderTool","ToolRouter","mousePosition","getLocalPosition","container","objectIdMap","reduce","containerObjectIds","Object","keys","has","newChildGraphics","dungeonObject","createRenderObject","interactive","renderObject","RenderRouter","removeChild","gridWidth","gridHeight","i","j","handleKeyPressed","keyboardEvent","repeat","handleKeyReleased","handleMouseDown","mouseEvent","buttons","handleMouseUp","onMouseUp","handleMouseMove","movementX","movementY","handleWheelEvent","wheelEvent","getModifierState","DungeonEditor","tabIndex","ref","element","canvasDiv","backgroundColor","sharedLoader","sharedTicker","antialias","appendChild","view","resizeTo","resize","Number","MAX_SAFE_INTEGER","sortableChildren","setupInteractions","ticker","add","renderDungeon","addEventListener","MouseEventHandler","preventDefault","event","pointerEvent","React","Component","StateEditorCard","title","className","PositionEditor","onUpdate","value","onChange","changeEvent","parseInt","SizeEditor","StateEditor","selectedObjectId","dungeonSize","scrollPansViewport","Fragment","undefined","DungeonActions","step","direction","onClick","checked","connect","ToolbarButton","toolName","toolId","Toolbar","dispatchSelectedTool","role","App","Boolean","location","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.419ab24e.chunk.js","sourcesContent":["const EDITOR_ACTION_TYPE = {\n    PNG_EXPORTED: 'PNG_EXPORTED',\n    EXPORT_TO_PNG_CLICKED: 'EXPORT_TO_PNG_CLICKED',\n    CLEAR_ONGOING_SPACE_POLYGON: 'CLEAR_ONGOING_SPACE_POLYGON',\n    ADD_ONGOING_SPACE_POLYGON: 'ADD_ONGOING_SPACE_POLYGON',\n    MOVE_VIEWPORT: 'MOVE_VIEWPORT',\n    SET_CURRENT_MOUSE_POSITION: 'SET_CURRENT_MOUSE_POSITION',\n    SCROLL_EVENT: 'SCROLL_EVENT',\n    MOUSE_DOWN: 'MOUSE_DOWN',\n    MOUSE_UP: 'MOUSE_UP',\n    SET_SCROLL_MOVES_VIEWPORT: 'SET_SCROLL_MOVES_VIEWPORT',\n    SELECT_TOOL: 'SELECT_TOOL',\n    SELECT_OBJECT: 'SELECT_OBJECT',\n    SELECT_OBJECTS: 'SELECT_OBJECTS',\n    SELECT_AT_POINT: 'SELECT_AT_POINT',\n    SELECT_IN_BOUNDING_BOX: 'SELECT_IN_BOUNDING_BOX',\n    KEY_PRESSED: 'KEY_PRESSED',\n    KEY_RELEASED: 'KEY_RELEASED'\n}\n\nexport default EDITOR_ACTION_TYPE;\n","import EDITOR_ACTION_TYPE from \"./editorActionType\"\n\nexport const keyPressed = (key) => ({\n    type: EDITOR_ACTION_TYPE.KEY_PRESSED,\n    key\n})\n\nexport const keyReleased = (key) => ({\n    type: EDITOR_ACTION_TYPE.KEY_RELEASED,\n    key\n})\n\nexport const mouseDown = () => ({\n    type: EDITOR_ACTION_TYPE.MOUSE_DOWN\n})\n\nexport const mouseUp = () => ({\n    type: EDITOR_ACTION_TYPE.MOUSE_UP\n})\n\nexport const pngExported = () => ({\n    type: EDITOR_ACTION_TYPE.PNG_EXPORTED\n})\n\nexport const exportToPngClicked = () => ({\n    type: EDITOR_ACTION_TYPE.EXPORT_TO_PNG_CLICKED\n})\n\nexport const clearOngoingSpacePolygonPoint = () => ({\n    type: EDITOR_ACTION_TYPE.CLEAR_ONGOING_SPACE_POLYGON\n})\n\nexport const addOngoingSpacePolygonPoint = (x, y) => ({\n    type: EDITOR_ACTION_TYPE.ADD_ONGOING_SPACE_POLYGON,\n    position: {\n        x: x,\n        y: y\n    }\n})\n\nexport const scroll = (deltaX, deltaY, holdingCtrl) => ({\n    type: EDITOR_ACTION_TYPE.SCROLL_EVENT,\n    scrollX: deltaX,\n    scrollY: deltaY,\n    holdingCtrl: holdingCtrl\n})\n\nexport const moveViewport = (deltaX, deltaY) => ({\n    type: EDITOR_ACTION_TYPE.MOVE_VIEWPORT,\n    deltaX: deltaX,\n    deltaY: deltaY\n})\n\nexport const selectTool = (toolName) => ({\n    type: EDITOR_ACTION_TYPE.SELECT_TOOL,\n    selectedTool: toolName\n})\n\nexport const selectAtPoint = (x, y, shouldMultiSelect) => ({\n    type: EDITOR_ACTION_TYPE.SELECT_AT_POINT,\n    x,\n    y,\n    shouldMultiSelect\n})\n\nexport const selectInBoundingBox = (x, y, width, height, shouldMultiSelect) => ({\n    type: EDITOR_ACTION_TYPE.SELECT_IN_BOUNDING_BOX,\n    x,\n    y,\n    width,\n    height,\n    shouldMultiSelect\n})\n\nexport const selectObject = (objectId, shouldMultiSelect) => ({\n    type: EDITOR_ACTION_TYPE.SELECT_OBJECT,\n    objectId,\n    shouldMultiSelect\n})\n\nexport const selectObjects = (objectIds, shouldMultiSelect) => ({\n    type: EDITOR_ACTION_TYPE.SELECT_OBJECTS,\n    objectIds,\n    shouldMultiSelect\n})\n\nexport const setScrollMovesViewport = (scrollMovesViewport) => ({\n    type: EDITOR_ACTION_TYPE.SET_SCROLL_MOVES_VIEWPORT,\n    scrollMovesViewport: scrollMovesViewport\n})\n\nexport const setCurrentMousePosition = (x, y) => ({\n    type: EDITOR_ACTION_TYPE.SET_CURRENT_MOUSE_POSITION,\n    x: x,\n    y: y\n})\n","export const createArrayWithUpdatedObject = (array, id, update) => {\n    return array.map(object => {\n        if (object.id === id) {\n            let objectCopy = {...object};\n            update(objectCopy);\n            return objectCopy;\n        }\n        else {\n            return object;\n        }\n    })\n}\n","const DUNGEON_ACTION_TYPE = {\n    NEW_DUNGEON: 'NEW_DUNGEON',\n    SET_DUNGEON_SIZE: 'SET_DUNGEON_SIZE',\n    MOVE_SELECTED_OBJECT: 'MOVE_SELECTED_OBJECT',\n    SET_SELECTED_OBJECT_TEXTURE_PATH: 'SET_SELECTED_OBJECT_TEXTURE_PATH',\n    SET_SELECTED_OBJECT_ANGLE: 'SET_SELECTED_OBJECT_ANGLE',\n    SET_SELECTED_OBJECT_LABEL: 'SET_SELECTED_OBJECT_LABEL',\n    SET_SELECTED_OBJECT_POSITION: 'SET_SELECTED_OBJECT_POSITION',\n    SET_SELECTED_OBJECT_SIZE: 'SET_SELECTED_OBJECT_SIZE',\n    SET_SELECTED_OBJECT_START: 'SET_SELECTED_OBJECT_START',\n    SET_SELECTED_OBJECT_END: 'SET_SELECTED_OBJECT_END',\n    ADD_OBJECT: 'ADD_OBJECT',\n    DELETE_OBJECTS: 'DELETE_OBJECTS'\n}\n\nexport default DUNGEON_ACTION_TYPE;\n","import { createArrayWithUpdatedObject } from '../utils/createArrayWithUpdatedObject'\nimport DUNGEON_ACTION_TYPE from './dungeonActionType'\n\nexport const dungeonReducer = (state = {}, action) => {\n    switch (action.type) {\n        case DUNGEON_ACTION_TYPE.NEW_DUNGEON: {\n            return {\n                size: {\n                    width: 24,\n                    height: 32\n                },\n                objects: []\n            }\n        }\n        case DUNGEON_ACTION_TYPE.SET_DUNGEON_SIZE: {\n            return {\n                ...state,\n                size: {\n                    width: action.width,\n                    height: action.height\n                }\n            }\n        }\n        case DUNGEON_ACTION_TYPE.MOVE_SELECTED_OBJECT: {\n            let arrayWithUpdatedObject = createArrayWithUpdatedObject(\n                state.objects,\n                action.selectedObject,\n                (object) => object.position = {\n                    x: object.position.x + action.deltaX,\n                    y: object.position.y + action.deltaY\n                });\n            return {\n                ...state,\n                objects: arrayWithUpdatedObject\n            };\n        }\n        case DUNGEON_ACTION_TYPE.SET_SELECTED_OBJECT_TEXTURE_PATH: {\n            let arrayWithUpdatedObject = createArrayWithUpdatedObject(\n                state.objects,\n                action.selectedObject,\n                (object) => object.textureUrl = action.texturePath);\n            return {\n                ...state,\n                objects: arrayWithUpdatedObject\n            };\n        }\n        case DUNGEON_ACTION_TYPE.SET_SELECTED_OBJECT_ANGLE: {\n            let arrayWithUpdatedObject = createArrayWithUpdatedObject(\n                state.objects,\n                action.selectedObject,\n                (object) => object.angle = action.angle);\n            return {\n                ...state,\n                objects: arrayWithUpdatedObject\n            };\n        }\n        case DUNGEON_ACTION_TYPE.SET_SELECTED_OBJECT_LABEL: {\n            let arrayWithUpdatedObject = createArrayWithUpdatedObject(\n                state.objects,\n                action.selectedObject,\n                (object) => object.label = action.label);\n            return {\n                ...state,\n                objects: arrayWithUpdatedObject\n            };\n        }\n        case DUNGEON_ACTION_TYPE.SET_SELECTED_OBJECT_POSITION: {\n            let arrayWithUpdatedObject = createArrayWithUpdatedObject(\n                state.objects,\n                action.selectedObject,\n                (object) => object.position = {\n                    x: action.x,\n                    y: action.y\n                });\n            return {\n                ...state,\n                objects: arrayWithUpdatedObject\n            };\n        }\n        case DUNGEON_ACTION_TYPE.SET_SELECTED_OBJECT_SIZE: {\n            let arrayWithUpdatedObject = createArrayWithUpdatedObject(\n                state.objects,\n                action.selectedObject,\n                (object) => object.size = {\n                    width: action.width,\n                    height: action.height\n                });\n            return {\n                ...state,\n                objects: arrayWithUpdatedObject\n            };\n        }\n        case DUNGEON_ACTION_TYPE.SET_SELECTED_OBJECT_START: {\n            let arrayWithUpdatedObject = createArrayWithUpdatedObject(\n                state.objects,\n                action.selectedObject,\n                (object) => object.start = {\n                    x: action.x,\n                    y: action.y\n                });\n            return {\n                ...state,\n                objects: arrayWithUpdatedObject\n            };\n        }\n        case DUNGEON_ACTION_TYPE.SET_SELECTED_OBJECT_END: {\n            let arrayWithUpdatedObject = createArrayWithUpdatedObject(\n                state.objects,\n                action.selectedObject,\n                (object) => object.end = {\n                    x: action.x,\n                    y: action.y\n                });\n            return {\n                ...state,\n                objects: arrayWithUpdatedObject,\n            };\n\n        }\n        case DUNGEON_ACTION_TYPE.ADD_OBJECT: {\n            let objectArray = state.objects.slice();\n            objectArray = [...objectArray, action.newObject];\n            return {\n                ...state,\n                objects: objectArray\n            };\n        }\n        case DUNGEON_ACTION_TYPE.DELETE_OBJECTS: {\n            let objectIds = action.objectIds;\n            if (objectIds) {\n                let newObjectArray = state.objects\n                    .filter(object => !objectIds.includes(object.id));\n                return {\n                    ...state,\n                    objects: newObjectArray\n                }\n            }\n            else {\n                return state;\n            }\n        }\n        default:\n            return state\n    }\n};\n\nexport default dungeonReducer\n","const TOOL_TYPE = {\n    SELECT: \"select\",\n    NEW_WALL: \"new_wall\",\n    NEW_SPACE_RECTANGLE: \"new_space_rectangle\",\n    NEW_SPACE_POLYGON: \"new_space_polygon\",\n    NEW_DOOR: \"new_door\",\n    NEW_LABEL: \"new_label\",\n    NEW_TOKEN: \"new_token\"\n};\n\nexport default TOOL_TYPE;\n","import TOOL_TYPE from \"../tools/toolType\";\nimport DUNGEON_ACTION_TYPE from \"./dungeonActionType\";\nimport EDITOR_ACTION_TYPE from \"./editorActionType\";\n\n/**\n * @typedef {defaultEditorState} EditorState\n */\nexport const defaultEditorState = {\n    scrollMovesViewport: false,\n    selectedTool: TOOL_TYPE.NEW_SPACE_RECTANGLE,\n    scale: 100,\n    position: {\n        x: 0,\n        y: 0\n    },\n    mouse: {\n        mouseDown: false,\n        startPosition: {\n            x: 0,\n            y: 0\n        },\n        currentPosition: {\n            x: 0,\n            y: 0\n        }\n    },\n    keyboard: {\n        heldKeys: {}\n    },\n    /** @type {string[]} */\n    selectedObjectIds: [],\n    /** @type {?{x: number, y: number, shouldMultiSelect: boolean}} */\n    selectingAtPoint: null,\n    /** @type {?{x: number, y: number, width: number, height: number, shouldMultiSelect: boolean}} */\n    selectingInBoundingBox: null\n};\n\nexport const editorReducer = (state = defaultEditorState, action) => {\n    switch (action.type) {\n        case EDITOR_ACTION_TYPE.KEY_PRESSED: {\n            let newHeldKeys = {...state.keyboard.heldKeys};\n            newHeldKeys[action.key] = true;\n            return {\n                ...state,\n                keyboard: {\n                    ...state.keyboard,\n                    heldKeys: newHeldKeys\n                }\n            }\n        }\n        case EDITOR_ACTION_TYPE.KEY_RELEASED: {\n            let newHeldKeys = {...state.keyboard.heldKeys};\n            delete newHeldKeys[action.key];\n            return {\n                ...state,\n                keyboard: {\n                    ...state.keyboard,\n                    heldKeys: newHeldKeys\n                }\n            }\n        }\n        case EDITOR_ACTION_TYPE.PNG_EXPORTED: {\n            return {\n                ...state,\n                exportToPngClicked: null\n            }\n        }\n        case EDITOR_ACTION_TYPE.EXPORT_TO_PNG_CLICKED: {\n            return {\n                ...state,\n                exportToPngClicked: true\n            }\n        }\n        case EDITOR_ACTION_TYPE.CLEAR_ONGOING_SPACE_POLYGON: {\n            return {\n                ...state,\n                ongoingSpacePolygon: null\n            }\n        }\n        case EDITOR_ACTION_TYPE.ADD_ONGOING_SPACE_POLYGON: {\n            let newPolygonArray = [...(state.ongoingSpacePolygon ?? []), action.position]\n            return {\n                ...state,\n                ongoingSpacePolygon: newPolygonArray\n            }\n        }\n        case EDITOR_ACTION_TYPE.MOVE_VIEWPORT: {\n            return {\n                ...state,\n                position: {\n                    x: state.position.x + action.deltaX,\n                    y: state.position.y + action.deltaY\n                }\n            }\n        }\n        case EDITOR_ACTION_TYPE.SET_CURRENT_MOUSE_POSITION: {\n            return {\n                ...state,\n                mouse: {\n                    ...state.mouse,\n                    currentPosition: {\n                        x: action.x,\n                        y: action.y\n                    }\n                }\n            }\n        }\n        case EDITOR_ACTION_TYPE.SCROLL_EVENT: {\n            if (!state.scrollMovesViewport || action.holdingCtrl) {\n                let scaleDelta = 10\n                if (action.scrollY > 0) {\n                    scaleDelta *= -1\n                }\n                let minimumScale = 10;\n                let maximumScale = 200;\n                let newScale = Math.min(Math.max(state.scale + scaleDelta, minimumScale), maximumScale)\n                if (state.scale !== newScale) {\n                    return {\n                        ...state,\n                        scale: newScale,\n                        position: {\n                            x: state.position.x - (state.mouse.currentPosition.x * (scaleDelta / 100)),\n                            y: state.position.y - (state.mouse.currentPosition.y * (scaleDelta / 100)),\n                        }\n                    };\n                }\n                else {\n                    return state;\n                }\n            }\n            else {\n                let scaleDelta = 0.5;\n                return {\n                    ...state,\n                    position: {\n                        x: state.position.x - action.scrollX * scaleDelta,\n                        y: state.position.y - action.scrollY * scaleDelta\n                    }\n                };\n            }\n        }\n        case EDITOR_ACTION_TYPE.MOUSE_DOWN: {\n            return {\n                ...state,\n                mouse: {\n                    ...state.mouse,\n                    mouseDown: true,\n                    startPosition: {\n                      x: state.mouse.currentPosition.x,\n                      y: state.mouse.currentPosition.y\n                    }\n                }\n            };\n        }\n        case EDITOR_ACTION_TYPE.MOUSE_UP: {\n            return {\n                ...state,\n                mouse: {\n                    ...state.mouse,\n                    mouseDown: false\n                }\n            };\n        }\n        case EDITOR_ACTION_TYPE.SET_SCROLL_MOVES_VIEWPORT: {\n            return {\n                ...state,\n                scrollMovesViewport: action.scrollMovesViewport\n            }\n        }\n        case EDITOR_ACTION_TYPE.SELECT_TOOL: {\n            let newSelectedObjectIds = state.selectedObjectIds;\n            if (action.selectedTool !== TOOL_TYPE.SELECT) {\n                newSelectedObjectIds = [];\n            }\n            return {\n                ...state,\n                selectedTool: action.selectedTool,\n                selectedObjectIds: newSelectedObjectIds\n            };\n        }\n        case EDITOR_ACTION_TYPE.SELECT_AT_POINT: {\n            return {\n                ...state,\n                selectingAtPoint: {\n                    x: action.x,\n                    y: action.y,\n                    shouldMultiSelect: action.shouldMultiSelect\n                }\n            }\n        }\n        case EDITOR_ACTION_TYPE.SELECT_IN_BOUNDING_BOX: {\n            return {\n                ...state,\n                selectingInBoundingBox: {\n                    x: action.x,\n                    y: action.y,\n                    width: action.width,\n                    height: action.height,\n                    shouldMultiSelect: action.shouldMultiSelect\n                }\n            }\n        }\n        case EDITOR_ACTION_TYPE.SELECT_OBJECT: {\n            let newSelectedObjectIds;\n            if (action.shouldMultiSelect && state.selectedObjectIds.includes(action.objectId)) {\n                newSelectedObjectIds = state.selectedObjectIds.filter(objectId => objectId !== action.objectId);\n            }\n            else if (action.shouldMultiSelect) {\n                newSelectedObjectIds = [...state.selectedObjectIds, action.objectId];\n            }\n            else {\n                newSelectedObjectIds = [action.objectId];\n            }\n            return {\n                ...state,\n                selectedObjectIds: newSelectedObjectIds,\n                selectingAtPoint: null,\n                selectingInBoundingBox: null\n            }\n        }\n        case EDITOR_ACTION_TYPE.SELECT_OBJECTS: {\n            let newSelectedObjectIds;\n            if (action.shouldMultiSelect) {\n                newSelectedObjectIds = [...new Set([...state.selectedObjectIds, ...action.objectIds])];\n            }\n            else {\n                newSelectedObjectIds = action.objectIds;\n            }\n            return {\n                ...state,\n                selectedObjectIds: newSelectedObjectIds,\n                selectingAtPoint: null,\n                selectingInBoundingBox: null\n            };\n        }\n        case DUNGEON_ACTION_TYPE.DELETE_OBJECTS: {\n            return {\n                ...state,\n                selectedObjectIds: []\n            }\n        }\n        default: {\n            return {\n                ...state\n            }\n        }\n    }\n}\n","import { combineReducers } from 'redux'\nimport dungeonReducer from './dungeonReducer'\nimport { editorReducer } from './editorReducer'\n\n/**\n * @typedef {{\n *  editor: import('./editorReducer').EditorState,\n *  dungeon: Object\n * }} State\n */\n\nexport default combineReducers({\n    editor: editorReducer,\n    dungeon: dungeonReducer\n})\n","import { createStore } from 'redux';\nimport reducer from './reducers/index'\n\nconst store = createStore(reducer,\n  {\n    dungeon: {\n      size: {\n        width: 28,\n        height: 32\n      },\n      objects: [\n        {\n          id: \"423894382\",\n          type: \"token\",\n          position: {\n            x: 2,\n            y: 4\n          },\n          size: {\n            width: 1,\n            height: 2\n          },\n          textureUrl: \"/assets/stairs.png\",\n          angle: 0\n        },\n        {\n          id: \"01f998f7-3ad4-43c6-b498-3249ab470b05\",\n          type: \"space\",\n          position: {\n            x: 1,\n            y: 1\n          },\n          size: {\n            width: 5,\n            height: 5\n          }\n        },\n        {\n          id: \"79178d8c-3a3e-42ee-b1ec-00dc37a045fc\",\n          type: \"space\",\n          position: {\n            x: 6,\n            y: 4\n          },\n          size: {\n            width: 7,\n            height: 9\n          }\n        },\n        {\n          id: \"6ce25fdc-9fd4-46c0-a924-74f5f9174193\",\n          type: \"space\",\n          position: {\n            x: 15,\n            y: 15\n          },\n          size: {\n            width: 6,\n            height: 7\n          }\n        },\n        {\n          id: \"e211fbd3-a817-47a5-bb47-481ba330e46d\",\n          type: \"space\",\n          position: {\n            x: 21,\n            y: 19\n          },\n          size: {\n            width: 4,\n            height: 9\n          }\n        },\n        {\n          id: '4abe3330-4a95-4c29-b71d-8ea768da1ee6',\n          type: \"wall\",\n          start: {\n            x: 1,\n            y: 1\n          },\n          end: {\n            x: 1,\n            y: 6\n          }\n        },\n        {\n          id: 'ad3c6f9b-f3f0-4025-8073-daacc68483ec',\n          type: \"wall\",\n          start: {\n            x: 6,\n            y: 6\n          },\n          end: {\n            x: 1,\n            y: 6\n          }\n        },\n        {\n          id: '68365136-d12f-4e54-8f7b-4cbd3ab424eb',\n          type: \"wall\",\n          start: {\n            x: 6,\n            y: 13\n          },\n          end: {\n            x: 6,\n            y: 6\n          }\n        },\n        {\n          id: '3d6435e5-8d67-4405-87d0-72c4e8f4dfaa',\n          type: \"wall\",\n          start: {\n            x: 13,\n            y: 13\n          },\n          end: {\n            x: 6,\n            y: 13\n          }\n        },\n        {\n          id: '384ac23d-f5fc-4cd1-9ad7-b528b62fa732',\n          type: \"wall\",\n          start: {\n            x: 13,\n            y: 4\n          },\n          end: {\n            x: 13,\n            y: 13\n          }\n        },\n        {\n          id: '161e3147-ca11-4dc4-a26b-ca8295c5abaa',\n          type: \"wall\",\n          start: {\n            x: 6,\n            y: 4\n          },\n          end: {\n            x: 13,\n            y: 4\n          }\n        },\n        {\n          id: 'e8092d63-e7e2-4cd2-8c80-8cd6030980f1',\n          type: \"wall\",\n          start: {\n            x: 6,\n            y: 1\n          },\n          end: {\n            x: 6,\n            y: 4\n          }\n        },\n        {\n          id: '71ed94d3-177b-428b-a8e5-fe25eb79a4ea',\n          type: \"wall\",\n          start: {\n            x: 1,\n            y: 1\n          },\n          end: {\n            x: 6,\n            y: 1\n          }\n        },\n        {\n          id: '0ea47a6f-af9f-4ec6-a7f3-881332643e2a',\n          type: \"wall\",\n          start: {\n            x: 15,\n            y: 15\n          },\n          end: {\n            x: 15,\n            y: 22\n          }\n        },\n        {\n          id: 'f7ec5579-7966-4ba4-b8ee-fdaad6372842',\n          type: \"wall\",\n          start: {\n            x: 21,\n            y: 22\n          },\n          end: {\n            x: 15,\n            y: 22\n          }\n        },\n        {\n          id: '1e587060-37cc-4b87-a88a-852c8055cabb',\n          type: \"wall\",\n          start: {\n            x: 21,\n            y: 15\n          },\n          end: {\n            x: 15,\n            y: 15\n          }\n        },\n        {\n          id: '79e1f702-6d60-435b-ba1e-584077a7d479',\n          type: \"wall\",\n          start: {\n            x: 21,\n            y: 19\n          },\n          end: {\n            x: 21,\n            y: 15\n          }\n        },\n        {\n          id: '231997d1-1453-4573-a2c0-0571428d7ac9',\n          type: \"wall\",\n          start: {\n            x: 25,\n            y: 19\n          },\n          end: {\n            x: 21,\n            y: 19\n          }\n        },\n        {\n          id: '85033454-8145-4d36-9b58-5e891f731f25',\n          type: \"wall\",\n          start: {\n            x: 21,\n            y: 22\n          },\n          end: {\n            x: 21,\n            y: 28\n          }\n        },\n        {\n          id: '2c6b4f88-4163-4847-ba05-c4ce865dfd87',\n          type: \"wall\",\n          start: {\n            x: 21,\n            y: 28\n          },\n          end: {\n            x: 25,\n            y: 28\n          }\n        },\n        {\n          id: '57013c9b-609f-4e59-ae1a-fd94a49bac80',\n          type: \"wall\",\n          start: {\n            x: 25,\n            y: 19\n          },\n          end: {\n            x: 25,\n            y: 28\n          }\n        }\n      ]\n    }\n  },\n  typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nexport default store;\n","export const GRID_TILE_SIZE = 70;","const DUNGEON_OBJECT_TYPE  = {\n    SPACE: \"space\",\n    WALL: \"wall\",\n    DOOR: \"door\",\n    LABEL: \"label\",\n    TOKEN: \"token\"\n};\n\nexport default DUNGEON_OBJECT_TYPE;\n","import { v4 as uuid } from 'uuid';\nimport DUNGEON_OBJECT_TYPE from \"../utils/dungeonObjectTypes\";\nimport DUNGEON_ACTION_TYPE from \"./dungeonActionType\";\n\nexport const clearDungeon = () => ({\n    type: DUNGEON_ACTION_TYPE.NEW_DUNGEON\n})\n\nexport const addToken = (tokenTextureUrl, x, y, width, height, angle) => ({\n    type: DUNGEON_ACTION_TYPE.ADD_OBJECT,\n    newObject: {\n        id: uuid(),\n        type: DUNGEON_OBJECT_TYPE.TOKEN,\n        textureUrl: tokenTextureUrl,\n        position: {\n            x: x,\n            y: y\n        },\n        size: {\n            width: width,\n            height: height\n        },\n        angle: angle\n    }\n})\n\nexport const addSpacePolygon = (positionArray) => ({\n    type: DUNGEON_ACTION_TYPE.ADD_OBJECT,\n    newObject: {\n        id: uuid(),\n        type: DUNGEON_OBJECT_TYPE.SPACE,\n        points: positionArray,\n    }\n})\n\nexport const addLabel = (x, y, labelText) => ({\n    type: DUNGEON_ACTION_TYPE.ADD_OBJECT,\n    newObject: {\n        id: uuid(),\n        type: DUNGEON_OBJECT_TYPE.LABEL,\n        position: {\n            x: x,\n            y: y\n        },\n        label: labelText\n    }\n})\n\nexport const addDoor = (startX, startY, endX, endY) => ({\n    type: DUNGEON_ACTION_TYPE.ADD_OBJECT,\n    newObject: {\n        id: uuid(),\n        type: DUNGEON_OBJECT_TYPE.DOOR,\n        start: {\n            x: startX,\n            y: startY\n        },\n        end: {\n            x: endX,\n            y: endY\n        }\n    }\n});\n\nexport const addWall = (startX, startY, endX, endY) => ({\n    type: DUNGEON_ACTION_TYPE.ADD_OBJECT,\n    newObject: {\n        id: uuid(),\n        type: DUNGEON_OBJECT_TYPE.WALL,\n        start: {\n            x: startX,\n            y: startY\n        },\n        end: {\n            x: endX,\n            y: endY\n        }\n    }\n});\n\nexport const addSpace = (startX, startY, endX, endY) => ({\n    type: DUNGEON_ACTION_TYPE.ADD_OBJECT,\n    newObject: {\n        id: uuid(),\n        type: DUNGEON_OBJECT_TYPE.SPACE,\n        position: {\n            x: startX,\n            y: startY\n        },\n        size: {\n            width: endX - startX,\n            height: endY - startY\n        }\n    }\n});\n\nexport const deleteObjects = (objectIds) => ({\n    type: DUNGEON_ACTION_TYPE.DELETE_OBJECTS,\n    objectIds\n})\n\nexport const moveSelectedObject = (selectedObject, deltaX, deltaY) => ({\n    type: DUNGEON_ACTION_TYPE.MOVE_SELECTED_OBJECT,\n    selectedObject,\n    deltaX: deltaX,\n    deltaY: deltaY\n})\n\nexport const setSelectedObjectTextureUrl = (selectedObject, texturePath) => ({\n    type: DUNGEON_ACTION_TYPE.SET_SELECTED_OBJECT_TEXTURE_PATH,\n    selectedObject,\n    texturePath: texturePath\n})\n\nexport const setSelectedObjectLabel = (selectedObject, label) => ({\n    type: DUNGEON_ACTION_TYPE.SET_SELECTED_OBJECT_LABEL,\n    selectedObject,\n    label: label\n})\n\nexport const setSelectedObjectPosition = (selectedObject, x, y) => ({\n    type: DUNGEON_ACTION_TYPE.SET_SELECTED_OBJECT_POSITION,\n    selectedObject,\n    x: x,\n    y: y\n})\n\nexport const setSelectedObjectSize = (selectedObject, width, height) => ({\n    type: DUNGEON_ACTION_TYPE.SET_SELECTED_OBJECT_SIZE,\n    selectedObject,\n    width: width,\n    height: height\n})\n\nexport const setSelectedObjectStart = (selectedObject, x, y) => ({\n    type: DUNGEON_ACTION_TYPE.SET_SELECTED_OBJECT_START,\n    selectedObject,\n    x: x,\n    y: y\n})\n\nexport const setSelectedObjectEnd = (selectedObject, x, y) => ({\n    type: DUNGEON_ACTION_TYPE.SET_SELECTED_OBJECT_END,\n    selectedObject,\n    x: x,\n    y: y\n})\n\nexport const setSelectedObjectAngle = (selectedObject, angle) => ({\n    type: DUNGEON_ACTION_TYPE.SET_SELECTED_OBJECT_ANGLE,\n    selectedObject,\n    angle: angle\n})\n\nexport const setDungeonSize = (width, height) => ({\n    type: DUNGEON_ACTION_TYPE.SET_DUNGEON_SIZE,\n    width: width,\n    height: height\n})\n","const square = (x) => x * x;\n\nexport const lineLength = (v, w) => Math.sqrt(square(v.x - w.x) + square(v.y - w.y));\n\nexport const getClosestPointOnLine = (p, a, b) => {\n\n    var atob = { x: b.x - a.x, y: b.y - a.y };\n    var atop = { x: p.x - a.x, y: p.y - a.y };\n    var len = atob.x * atob.x + atob.y * atob.y;\n    var dot = atop.x * atob.x + atop.y * atob.y;\n    var t = Math.min( 1, Math.max( 0, dot / len ) );\n    return {\n        x: a.x + atob.x * t,\n        y: a.y + atob.y * t\n    };\n}\n\n/**\n * @typedef {{x: number, y: number, width: number, height: number}} Rectangle\n * @param {Rectangle} rect1\n * @param {Rectangle} rect2\n */\nexport const doRectanglesIntersect = (rect1, rect2) => {\n    let x = Math.max(rect1.x, rect2.x);\n    let num1 = Math.min(rect1.x + rect1.width, rect2.x + rect2.width);\n    let y = Math.max(rect1.y, rect2.y);\n    let num2 = Math.min(rect1.y + rect1.height, rect2.y + rect2.height);\n    if (num1 >= x && num2 >= y)\n      return true;\n    else\n      return false;\n}\n","import { addDoor } from \"../reducers/dungeonActions\";\nimport { GRID_TILE_SIZE } from \"../utils/constants\";\nimport DUNGEON_OBJECT_TYPE from \"../utils/dungeonObjectTypes\";\nimport { lineLength, getClosestPointOnLine } from \"../utils/geometry\";\n\nexport default class AddDoorTool {\n    onMouseUp(store) {\n        let state = store.getState();\n        let mousePoint = state.editor.mouse.currentPosition;\n        let minDistance = 25;\n        let snapPoint = null;\n        let minWallId = null;\n        state.dungeon.objects\n            .filter(object => object.type === DUNGEON_OBJECT_TYPE.WALL)\n            .forEach(wall =>{\n                // try each point and get the shortest distance\n                let scaledStart = {\n                    x: wall.start.x * GRID_TILE_SIZE,\n                    y: wall.start.y * GRID_TILE_SIZE\n                };\n                let scaledEnd = {\n                    x: wall.end.x * GRID_TILE_SIZE,\n                    y: wall.end.y * GRID_TILE_SIZE\n                }\n                let closestPoint = getClosestPointOnLine({\n                        x: state.editor.mouse.startPosition.x,\n                        y: state.editor.mouse.startPosition.y\n                    }, scaledStart, scaledEnd);\n                // if the shortest distance of one is < snapping threshold, snap to it\n                let distance = lineLength(closestPoint, {\n                    x: state.editor.mouse.startPosition.x,\n                    y: state.editor.mouse.startPosition.y\n                });\n                if (!minDistance || distance < minDistance) {\n                    minDistance = distance;\n                    snapPoint = closestPoint;\n                    minWallId = wall.id;\n                }\n            });\n\n        let doorWall = state.dungeon.objects.find(wall => wall.id === minWallId);\n\n        if (!doorWall) {\n            return;\n        }\n\n        let scaledStart = {\n            x: doorWall.start.x * GRID_TILE_SIZE,\n            y: doorWall.start.y * GRID_TILE_SIZE\n        };\n        let scaledEnd = {\n            x: doorWall.end.x * GRID_TILE_SIZE,\n            y: doorWall.end.y * GRID_TILE_SIZE\n        }\n        let endPoint = getClosestPointOnLine(mousePoint, scaledStart, scaledEnd);\n        store.dispatch(addDoor(\n            snapPoint.x / GRID_TILE_SIZE,\n            snapPoint.y / GRID_TILE_SIZE,\n            endPoint.x / GRID_TILE_SIZE,\n            endPoint.y / GRID_TILE_SIZE));\n    }\n\n    renderTool(state, graphics) {\n        let mousePoint = state.editor.mouse.currentPosition;\n        if (!state.editor.mouse.mouseDown) {\n            // try to snap to the nearest line:\n            // for each line, get the nearest point on the line\n            let minDistance = 25;\n            let snapPoint = null;\n            state.dungeon.objects\n                .filter(object => object.type === DUNGEON_OBJECT_TYPE.WALL)\n                .forEach(wall => {\n                    // try each point and get the shortest distance\n                    let scaledStart = {\n                        x: wall.start.x * GRID_TILE_SIZE,\n                        y: wall.start.y * GRID_TILE_SIZE\n                    };\n                    let scaledEnd = {\n                        x: wall.end.x * GRID_TILE_SIZE,\n                        y: wall.end.y * GRID_TILE_SIZE\n                    }\n                    let closestPoint = getClosestPointOnLine(mousePoint, scaledStart, scaledEnd);\n                    // if the shortest distance of one is < snapping threshold, snap to it\n                    let distance = lineLength(closestPoint, mousePoint);\n                    if (!minDistance || distance < minDistance) {\n                        minDistance = distance;\n                        snapPoint = closestPoint;\n                    }\n                });\n            if (snapPoint) {\n                graphics.lineStyle();\n                graphics.beginFill(0xfffd00);\n                graphics.drawCircle(snapPoint.x, snapPoint.y, 2.5);\n                graphics.endFill();\n            }\n        }\n        else {\n            let minDistance = 25;\n            let snapPoint = null;\n            let minWallId = null;\n            state.dungeon.objects\n                .filter(object => object.type === DUNGEON_OBJECT_TYPE.WALL)\n                .forEach(wall => {\n                    // try each point and get the shortest distance\n                    let scaledStart = {\n                        x: wall.start.x * GRID_TILE_SIZE,\n                        y: wall.start.y * GRID_TILE_SIZE\n                    };\n                    let scaledEnd = {\n                        x: wall.end.x * GRID_TILE_SIZE,\n                        y: wall.end.y * GRID_TILE_SIZE\n                    }\n                    let closestPoint = getClosestPointOnLine({\n                            x: state.editor.mouse.startPosition.x,\n                            y: state.editor.mouse.startPosition.y\n                        }, scaledStart, scaledEnd);\n                    // if the shortest distance of one is < snapping threshold, snap to it\n                    let distance = lineLength(closestPoint, {\n                        x: state.editor.mouse.startPosition.x,\n                        y: state.editor.mouse.startPosition.y\n                    });\n                    if (!minDistance || distance < minDistance) {\n                        minDistance = distance;\n                        snapPoint = closestPoint;\n                        minWallId = wall.id;\n                    }\n                });\n            // draw a line from the start point\n            if (!snapPoint) {\n                return;\n            }\n\n            let startX = snapPoint.x;\n            let startY = snapPoint.y;\n\n            let doorWall = state.dungeon.objects.find(wall => wall.id === minWallId);\n            let scaledStart = {\n                x: doorWall.start.x * GRID_TILE_SIZE,\n                y: doorWall.start.y * GRID_TILE_SIZE\n            };\n            let scaledEnd = {\n                x: doorWall.end.x * GRID_TILE_SIZE,\n                y: doorWall.end.y * GRID_TILE_SIZE\n            }\n            let endPoint = getClosestPointOnLine(mousePoint, scaledStart, scaledEnd);\n\n            let endX = endPoint.x;\n            let endY = endPoint.y;\n\n            graphics.lineStyle(5, 0xfffd00);\n            graphics.moveTo(startX, startY);\n            graphics.lineTo(endX, endY);\n            graphics.lineStyle();\n            graphics.beginFill(0xfffd00);\n            graphics.drawCircle(startX, startY, 2.5);\n            graphics.drawCircle(endX, endY, 2.5);\n            graphics.endFill();\n        }\n    }\n}\n","import { GRID_TILE_SIZE } from \"../utils/constants\";\nimport { addLabel } from \"../reducers/dungeonActions\";\n\nexport default class AddLabelTool {\n    onMouseUp(store) {\n        let state = store.getState();\n        let mousePoint = state.editor.mouse.currentPosition;\n        let dungeonSpaceX = mousePoint.x / GRID_TILE_SIZE;\n        let dungeonSpaceY = mousePoint.y / GRID_TILE_SIZE;\n        store.dispatch(addLabel(dungeonSpaceX, dungeonSpaceY, \"Text Label\"))\n    }\n\n    renderTool(state, graphics) {\n    }\n}\n","import { GRID_TILE_SIZE } from \"../utils/constants\";\nimport { addSpace } from \"../reducers/dungeonActions\";\n\nexport default class AddSpaceRectangleTool {\n\n    onMouseUp(store) {\n        let state = store.getState();\n        let mousePoint = state.editor.mouse.currentPosition;\n        let startX = Math.floor(Math.min(state.editor.mouse.startPosition.x, mousePoint.x) / GRID_TILE_SIZE);\n        let startY = Math.floor(Math.min(state.editor.mouse.startPosition.y, mousePoint.y) / GRID_TILE_SIZE);\n        let endX = Math.ceil(Math.max(state.editor.mouse.startPosition.x, mousePoint.x) / GRID_TILE_SIZE);\n        let endY = Math.ceil(Math.max(state.editor.mouse.startPosition.y, mousePoint.y) / GRID_TILE_SIZE);\n        store.dispatch(addSpace(startX, startY, endX, endY));\n    }\n\n    renderTool(state, graphics) {\n        let mousePoint = state.editor.mouse.currentPosition;\n        let snappedX, snappedY, width, height;\n        if (state.editor.mouse.mouseDown) {\n            let startX = Math.min(state.editor.mouse.startPosition.x, mousePoint.x);\n            let startY = Math.min(state.editor.mouse.startPosition.y, mousePoint.y);\n            let endX = Math.max(state.editor.mouse.startPosition.x, mousePoint.x);\n            let endY = Math.max(state.editor.mouse.startPosition.y, mousePoint.y);\n            snappedX = Math.floor(startX / GRID_TILE_SIZE) * GRID_TILE_SIZE;\n            snappedY = Math.floor(startY / GRID_TILE_SIZE) * GRID_TILE_SIZE;\n            endX = Math.floor(endX / GRID_TILE_SIZE) * GRID_TILE_SIZE + GRID_TILE_SIZE;\n            endY = Math.floor(endY / GRID_TILE_SIZE) * GRID_TILE_SIZE + GRID_TILE_SIZE;\n            width = endX - snappedX;\n            height = endY - snappedY;\n        }\n        else {\n            // snap to nearest grid point\n            // for now for simplicity let's say top left\n            snappedX = Math.floor(mousePoint.x / GRID_TILE_SIZE) * GRID_TILE_SIZE;\n            snappedY = Math.floor(mousePoint.y / GRID_TILE_SIZE) * GRID_TILE_SIZE;\n            width = GRID_TILE_SIZE;\n            height = GRID_TILE_SIZE;\n        }\n        // draw a hover rect\n        graphics.beginFill(0, 0);\n        graphics.lineStyle(1, 0xfffd00);\n        graphics.drawRect(snappedX, snappedY, width, height);\n        graphics.endFill();\n    }\n}\n","import { GRID_TILE_SIZE } from \"../utils/constants\";\nimport { addWall } from \"../reducers/dungeonActions\";\n\nexport default class AddWallTool {\n    onMouseUp(store) {\n        let state = store.getState();\n        let mousePoint = state.editor.mouse.currentPosition;\n        let startX = Math.round(state.editor.mouse.startPosition.x / GRID_TILE_SIZE);\n        let startY = Math.round(state.editor.mouse.startPosition.y / GRID_TILE_SIZE);\n        let endX = Math.round(mousePoint.x / GRID_TILE_SIZE);\n        let endY = Math.round(mousePoint.y / GRID_TILE_SIZE);\n        store.dispatch(addWall(startX, startY, endX, endY));\n    }\n\n    renderTool(state, graphics) {\n        let mousePoint = state.editor.mouse.currentPosition;\n        if (state.editor.mouse.mouseDown) {\n            let startX = Math.round(state.editor.mouse.startPosition.x / GRID_TILE_SIZE) * GRID_TILE_SIZE;\n            let startY = Math.round(state.editor.mouse.startPosition.y / GRID_TILE_SIZE) * GRID_TILE_SIZE;\n            let endX = Math.round(mousePoint.x / GRID_TILE_SIZE) * GRID_TILE_SIZE;\n            let endY = Math.round(mousePoint.y / GRID_TILE_SIZE) * GRID_TILE_SIZE;\n            graphics.lineStyle(5, 0xfffd00);\n            graphics.moveTo(startX, startY);\n            graphics.lineTo(endX, endY);\n            graphics.lineStyle();\n            graphics.beginFill(0xfffd00);\n            graphics.drawCircle(startX, startY, 2.5);\n            graphics.drawCircle(endX, endY, 2.5);\n            graphics.endFill();\n        }\n        else {\n            // get nearest center point\n            let hoverX = Math.round(mousePoint.x / GRID_TILE_SIZE) * GRID_TILE_SIZE;\n            let hoverY = Math.round(mousePoint.y / GRID_TILE_SIZE) * GRID_TILE_SIZE;\n\n            graphics.lineStyle();\n            graphics.beginFill(0xfffd00);\n            graphics.drawCircle(hoverX, hoverY, 2.5);\n            graphics.endFill();\n        }\n    }\n}\n","import { selectAtPoint, selectInBoundingBox } from \"../reducers/editorActions\";\n\nconst DRAG_THRESHOLD = 5;\n\nconst isDragging = (startPosition, endPosition) => {\n    return Math.abs(endPosition.x - startPosition.x) > DRAG_THRESHOLD ||\n        Math.abs(endPosition.y - startPosition.y) > DRAG_THRESHOLD;\n}\n\nconst createRectangle = (startPosition, endPosition) => ({\n    x: Math.min(startPosition.x, endPosition.x),\n    y: Math.min(startPosition.y, endPosition.y),\n    width: Math.abs(endPosition.x - startPosition.x),\n    height: Math.abs(endPosition.y - startPosition.y)\n})\n\nexport default class SelectTool {\n    onMouseUp(store) {\n        /** @type {import(\"../reducers\").State} */\n        let state = store.getState();\n\n        const startPosition = state.editor.mouse.startPosition;\n        const endPosition = state.editor.mouse.currentPosition;\n        const shouldAddToSelection = state.editor.keyboard.heldKeys[\"Shift\"];\n\n        if (isDragging(startPosition, endPosition)) {\n            let boundingRectangle = createRectangle(startPosition, endPosition);\n            store.dispatch(selectInBoundingBox(\n                boundingRectangle.x,\n                boundingRectangle.y,\n                boundingRectangle.width,\n                boundingRectangle.height,\n                shouldAddToSelection))\n        }\n        else {\n            store.dispatch(selectAtPoint(endPosition.x, endPosition.y, shouldAddToSelection))\n        }\n    }\n\n    /**\n     * @param {import(\"../reducers\").State} state\n     * @param {PIXI.Graphics} graphics\n     */\n    renderTool(state, graphics) {\n        const startPosition = state.editor.mouse.startPosition;\n        const endPosition = state.editor.mouse.currentPosition;\n\n        if (state.editor.mouse.mouseDown && isDragging(startPosition, endPosition)) {\n            let boundingRectangle = createRectangle(startPosition, endPosition);\n            graphics.lineStyle(1, 0xfffd00)\n                .drawRect(boundingRectangle.x, boundingRectangle.y, boundingRectangle.width, boundingRectangle.height)\n                .lineStyle();\n        }\n    }\n}\n","import { GRID_TILE_SIZE } from \"../utils/constants\";\nimport { addSpacePolygon } from \"../reducers/dungeonActions\";\nimport { addOngoingSpacePolygonPoint, clearOngoingSpacePolygonPoint } from '../reducers/editorActions'\n\nexport default class AddSpacePolygonTool {\n\n    onMouseUp(store) {\n        let state = store.getState();\n        let mousePoint = state.editor.mouse.currentPosition;\n        let x = Math.round(mousePoint.x / GRID_TILE_SIZE);\n        let y = Math.round(mousePoint.y / GRID_TILE_SIZE);\n\n        let firstPoint = state.editor.ongoingSpacePolygon?.[0];\n        if (firstPoint && firstPoint.x === x && firstPoint.y === y ) {\n            // close it out\n            let pointArray = state.editor.ongoingSpacePolygon;\n            store.dispatch(clearOngoingSpacePolygonPoint());\n            store.dispatch(addSpacePolygon(pointArray));\n        }\n        else {\n            store.dispatch(addOngoingSpacePolygonPoint(x, y));\n        }\n    }\n\n    renderTool(state, graphics) {\n        // if there's no ongoing polygon, just snap to a corner\n        let mousePoint = state.editor.mouse.currentPosition;\n        // get nearest center point\n        let hoverX = Math.round(mousePoint.x / GRID_TILE_SIZE) * GRID_TILE_SIZE;\n        let hoverY = Math.round(mousePoint.y / GRID_TILE_SIZE) * GRID_TILE_SIZE;\n\n        if (!state.editor.ongoingSpacePolygon) {\n            graphics.lineStyle();\n            graphics.beginFill(0xfffd00);\n            graphics.drawCircle(hoverX, hoverY, 2.5);\n            graphics.endFill();\n        }\n        else {\n            graphics.lineStyle(2, 0xfffd00);\n            let firstPoint = state.editor.ongoingSpacePolygon[0];\n            graphics.moveTo(\n                firstPoint.x * GRID_TILE_SIZE,\n                firstPoint.y * GRID_TILE_SIZE);\n            for (let index = 1; index < state.editor.ongoingSpacePolygon.length; index++) {\n                const point = state.editor.ongoingSpacePolygon[index];\n                graphics.lineTo(point.x * GRID_TILE_SIZE, point.y * GRID_TILE_SIZE);\n            }\n            graphics.lineTo(hoverX, hoverY);\n            // then draw to where mouse is hovering over\n            graphics.lineStyle();\n        }\n    }\n}\n","import { GRID_TILE_SIZE } from '../utils/constants';\nimport { addToken } from '../reducers/dungeonActions';\n\nexport default class AddTokenTool {\n    // TODO: Make this configurable based on the currently selected token or something along those lines\n    tokenTextureUrl = '/assets/stairs.png';\n    height = 2;\n    width = 1;\n\n    onMouseUp(store) {\n        let state = store.getState();\n        let mousePoint = state.editor.mouse.currentPosition;\n        let snappedX, snappedY;\n\n        // snap to nearest grid point\n        // for now for simplicity let's say top left\n        snappedX = Math.floor(mousePoint.x / GRID_TILE_SIZE);\n        snappedY = Math.floor(mousePoint.y / GRID_TILE_SIZE);\n\n        store.dispatch(addToken(\n            this.tokenTextureUrl,\n            snappedX,\n            snappedY,\n            this.width,\n            this.height,\n            0\n        ))\n    }\n\n    renderTool(state, graphics) {\n        // preview the sprite in the current location\n        let mousePoint = state.editor.mouse.currentPosition;\n        let snappedX, snappedY;\n\n        // snap to nearest grid point\n        // for now for simplicity let's say top left\n        snappedX = Math.floor(mousePoint.x / GRID_TILE_SIZE) * GRID_TILE_SIZE;\n        snappedY = Math.floor(mousePoint.y / GRID_TILE_SIZE) * GRID_TILE_SIZE;\n\n        // draw a hover rect\n        graphics.beginFill(0, 0);\n        graphics.lineStyle(1, 0xfffd00);\n        graphics.drawRect(snappedX, snappedY, this.width * GRID_TILE_SIZE, this.height * GRID_TILE_SIZE);\n        graphics.endFill();\n    }\n}\n","import AddDoorTool from \"./AddDoorTool\";\nimport AddLabelTool from \"./AddLabelTool\";\nimport AddSpaceRectangleTool from \"./AddSpaceRectangleTool\";\nimport AddWallTool from \"./AddWallTool\";\nimport SelectTool from \"./SelectTool\";\nimport TOOL_TYPE from \"./toolType\";\nimport AddSpacePolygonTool from \"./AddSpacePolygonTool\";\nimport AddTokenTool from \"./AddTokenTool\";\n\nconst toolMap = {\n    [TOOL_TYPE.NEW_DOOR]: new AddDoorTool(),\n    [TOOL_TYPE.NEW_SPACE_RECTANGLE]: new AddSpaceRectangleTool(),\n    [TOOL_TYPE.NEW_SPACE_POLYGON]: new AddSpacePolygonTool(),\n    [TOOL_TYPE.NEW_WALL]: new AddWallTool(),\n    [TOOL_TYPE.SELECT]: new SelectTool(),\n    [TOOL_TYPE.NEW_LABEL]: new AddLabelTool(),\n    [TOOL_TYPE.NEW_TOKEN]: new AddTokenTool()\n}\n\nexport const onMouseUp = (store) => {\n    let state = store.getState();\n    toolMap[state.editor.selectedTool].onMouseUp(store);\n}\n\nexport const renderTool = (state, graphics) => {\n    toolMap[state.editor.selectedTool].renderTool(state, graphics);\n}\n","import * as PIXI from 'pixi.js'\n\nexport default class GraphicsRenderer {\n    createRenderObject() {\n        return new PIXI.Graphics();\n    }\n}\n","import * as PIXI from 'pixi.js';\nimport { GRID_TILE_SIZE } from \"../utils/constants\";\nimport GraphicsRenderer from './GraphicsRenderer';\n\nexport default class DoorRenderer extends GraphicsRenderer {\n    renderObject(graphics, door, objectIsSelected) {\n        graphics.zIndex = 3;\n        graphics.clear();\n        graphics.beginFill(0x002b56, 1);\n        graphics.lineStyle(20, 0x002b56, 1, 0.5);\n        graphics.moveTo(door.start.x * GRID_TILE_SIZE, door.start.y * GRID_TILE_SIZE);\n        graphics.lineTo(door.end.x * GRID_TILE_SIZE, door.end.y * GRID_TILE_SIZE);\n        graphics.lineStyle();\n        let half = 20 / 2;\n        graphics.endFill();\n\n        if (objectIsSelected) {\n            graphics.tint = 0xffff33;\n        }\n        else {\n            graphics.tint = 0xffffff;\n        }\n        graphics.hitArea = new PIXI.Polygon([\n            door.start.x * GRID_TILE_SIZE - half, door.start.y * GRID_TILE_SIZE - half,\n            door.start.x * GRID_TILE_SIZE + half, door.start.y * GRID_TILE_SIZE + half,\n            door.end.x * GRID_TILE_SIZE + half, door.end.y * GRID_TILE_SIZE + half,\n            door.end.x * GRID_TILE_SIZE - half, door.end.y * GRID_TILE_SIZE - half,\n        ]);\n    }\n}\n","import * as PIXI from 'pixi.js';\nimport { GRID_TILE_SIZE } from '../utils/constants';\nimport GraphicsRenderer from './GraphicsRenderer';\n\nexport default class LabelRenderer extends GraphicsRenderer {\n    renderObject(graphics, label, objectIsSelected) {\n        graphics.zIndex = 4;\n        graphics.clear();\n        if (graphics.children.length === 0) {\n            let labelText = new PIXI.Text(label.label);\n            labelText.style.fontFamily = 'Serif';\n            labelText.style.fontSize = 36;\n            graphics.addChild(labelText);\n        }\n\n        let labelText = graphics.children[0];\n\n        if (objectIsSelected) {\n            labelText.style.fill = 0xffff33;\n        }\n        else {\n            labelText.style.fill = 0x000000;\n        }\n\n        labelText.text = label.label;\n        labelText.position.set(\n            label.position.x * GRID_TILE_SIZE,\n            label.position.y * GRID_TILE_SIZE);\n    }\n}\n","import * as PIXI from 'pixi.js';\nimport { GRID_TILE_SIZE } from \"../utils/constants\";\nimport GraphicsRenderer from './GraphicsRenderer';\n\nexport default class WallRenderer extends GraphicsRenderer {\n    renderObject(graphics, wall, objectIsSelected) {\n        graphics.zIndex = 2;\n        graphics.clear();\n        graphics.beginFill(0x0266e6, 1);\n        graphics.lineStyle(10, 0x0266e6, 1, 0.5);\n        graphics.moveTo(wall.start.x * GRID_TILE_SIZE, wall.start.y * GRID_TILE_SIZE);\n        graphics.lineTo(wall.end.x * GRID_TILE_SIZE, wall.end.y * GRID_TILE_SIZE);\n        graphics.lineStyle();\n        graphics.drawCircle(wall.start.x * GRID_TILE_SIZE, wall.start.y * GRID_TILE_SIZE, 5);\n        graphics.drawCircle(wall.end.x * GRID_TILE_SIZE, wall.end.y * GRID_TILE_SIZE, 5);\n        let half = 10 / 2;\n        graphics.endFill();\n\n        if (objectIsSelected) {\n            graphics.tint = 0xffff33;\n        }\n        else {\n            graphics.tint = 0xffffff;\n        }\n        graphics.hitArea = this.createWallHitArea(wall, half);\n    }\n\n    createWallHitArea(wall, half) {\n        if (wall.start.x === wall.end.x && wall.start.y === wall.end.y) {\n            return new PIXI.Circle(\n                wall.start.x * GRID_TILE_SIZE,\n                wall.start.y * GRID_TILE_SIZE,\n                half);\n        }\n        else {\n            let startPoint = wall.start.x <= wall.end.x ? wall.start : wall.end;\n            let endPoint = wall.start.x > wall.end.x ? wall.start : wall.end;\n\n            let rise = endPoint.y - startPoint.y;\n            let run = endPoint.x - startPoint.x;\n            let slope = rise / run;\n            let inverseSlope = -1 / slope;\n\n            if (slope === 0 || inverseSlope === 0) {\n                return new PIXI.Rectangle(\n                    startPoint.x * GRID_TILE_SIZE - half,\n                    Math.min(startPoint.y, endPoint.y) * GRID_TILE_SIZE - half,\n                    run * GRID_TILE_SIZE + half * 2,\n                    Math.abs(rise) * GRID_TILE_SIZE + half * 2\n                )\n            }\n\n            let { xOffset, yOffset} = this.getOffsetAlongSlope(slope, half);\n            let { xOffset: polygonXOffset, yOffset: polygonYOffset } = this.getOffsetAlongSlope(inverseSlope, half);\n\n            return new PIXI.Polygon([\n                startPoint.x * GRID_TILE_SIZE - xOffset - polygonXOffset, startPoint.y * GRID_TILE_SIZE - yOffset - polygonYOffset,\n                startPoint.x * GRID_TILE_SIZE - xOffset + polygonXOffset, startPoint.y * GRID_TILE_SIZE - yOffset + polygonYOffset,\n                endPoint.x   * GRID_TILE_SIZE + xOffset + polygonXOffset, endPoint.y   * GRID_TILE_SIZE + yOffset + polygonYOffset,\n                endPoint.x   * GRID_TILE_SIZE + xOffset - polygonXOffset, endPoint.y   * GRID_TILE_SIZE + yOffset - polygonYOffset,\n            ]);\n        }\n    }\n\n    getOffsetAlongSlope(slope, distanceTravelledAlongSlope) {\n        let slopeAngle = Math.atan(slope);\n        let xOffset = Math.cos(slopeAngle) * distanceTravelledAlongSlope;\n        let yOffset = Math.sin(slopeAngle) * distanceTravelledAlongSlope;\n        return {\n            xOffset: xOffset,\n            yOffset: yOffset\n        };\n    }\n}\n","import { GRID_TILE_SIZE } from \"../utils/constants\";\nimport GraphicsRenderer from './GraphicsRenderer';\n\nexport default class SpaceRenderer extends GraphicsRenderer {\n    renderObject(graphics, space, objectIsSelected) {\n        graphics.clear();\n        graphics.beginFill(0xd6d5d5);\n        if (space.position && space.size) {\n            graphics.drawRect(\n                space.position.x * GRID_TILE_SIZE,\n                space.position.y * GRID_TILE_SIZE,\n                space.size.width * GRID_TILE_SIZE,\n                space.size.height * GRID_TILE_SIZE);\n            graphics.endFill();\n        }\n        else {\n            let firstPoint = space.points[0];\n            graphics.moveTo(firstPoint.x * GRID_TILE_SIZE, firstPoint.y * GRID_TILE_SIZE);\n            for (let index = 0; index < space.points.length; index++) {\n                const point = space.points[index];\n                graphics.lineTo(point.x * GRID_TILE_SIZE, point.y * GRID_TILE_SIZE);\n            }\n            graphics.endFill();\n        }\n\n        if (objectIsSelected) {\n            graphics.tint = 0xffffcc;\n        }\n        else {\n            graphics.tint = 0xffffff;\n        }\n    }\n}\n","import * as PIXI from 'pixi.js'\nimport { GRID_TILE_SIZE } from '../utils/constants';\n\nexport default class TokenRenderer {\n    createRenderObject() {\n        return new PIXI.Sprite();\n    }\n\n    renderObject(sprite, token, objectIsSelected) {\n        sprite.zIndex = 4;\n        sprite.texture = PIXI.Texture.from(process.env.PUBLIC_URL + token.textureUrl);\n        sprite.x = token.position.x * GRID_TILE_SIZE;\n        sprite.y = token.position.y * GRID_TILE_SIZE;\n        sprite.width = token.size.width * GRID_TILE_SIZE;\n        sprite.height = token.size.height * GRID_TILE_SIZE;\n        sprite.angle = token.angle;\n\n        if (objectIsSelected) {\n            let objectSelectionGraphics;\n            if (sprite.children.length === 0) {\n                objectSelectionGraphics = new PIXI.Graphics();\n                sprite.addChild(objectSelectionGraphics);\n            } else {\n                objectSelectionGraphics = sprite.getChildAt(0);\n            }\n            objectSelectionGraphics.clear();\n            objectSelectionGraphics.lineStyle(5, 0xfffd00);\n            objectSelectionGraphics.drawShape(sprite.getLocalBounds());\n        }\n        else {\n            if (sprite.children.length > 0) {\n                sprite.removeChildAt(0);\n            }\n        }\n    }\n}\n","import DUNGEON_OBJECT_TYPE from \"../utils/dungeonObjectTypes\";\nimport DoorRenderer from \"./DoorRenderer\";\nimport LabelRenderer from \"./LabelRenderer\";\nimport WallRenderer from \"./WallRenderer\";\nimport SpaceRenderer from \"./SpaceRenderer\";\nimport TokenRenderer from \"./TokenRenderer\";\n\nconst rendererMap = {\n    [DUNGEON_OBJECT_TYPE.DOOR]: new DoorRenderer(),\n    [DUNGEON_OBJECT_TYPE.LABEL]: new LabelRenderer(),\n    [DUNGEON_OBJECT_TYPE.WALL]: new WallRenderer(),\n    [DUNGEON_OBJECT_TYPE.SPACE]: new SpaceRenderer(),\n    [DUNGEON_OBJECT_TYPE.TOKEN]: new TokenRenderer()\n}\n\nexport const renderObject = (graphics, dungeonObject, objectIsSelected) => {\n    rendererMap[dungeonObject.type].renderObject(graphics, dungeonObject, objectIsSelected);\n}\n\nexport const createRenderObject = (dungeonObject) =>\n    rendererMap[dungeonObject.type].createRenderObject()\n","let download = (data, filename) => {\n    let downloadLink = document.createElement(\"a\");\n    downloadLink.href = data;\n    downloadLink.download = filename;\n    downloadLink.target = \"_blank\"\n    downloadLink.click();\n}\n\nexport default download;\n","import { pngExported, selectObject, selectObjects, setCurrentMousePosition } from \"../reducers/editorActions\";\nimport store from '../store.js';\nimport { GRID_TILE_SIZE } from '../utils/constants';\nimport * as ToolRouter from '../tools/ToolRouter';\nimport * as RenderRouter from './RenderRouter'\nimport download from \"../utils/download\";\nimport * as PIXI from 'pixi.js'\nimport { doRectanglesIntersect } from \"../utils/geometry\";\n\n/**\n * @param {PIXI.Application} app\n * @param {PIXI.Graphics} graphics\n */\nexport const render = (app, graphics) => {\n    /**\n     * @type {import(\"../reducers\").State}\n     */\n    let state = store.getState();\n\n    handlePanning(app, state);\n    handleScaling(state, app);\n\n    handleSelecting(state, app);\n\n    graphics.clear();\n\n    drawDungeonObjects(app.stage, state);\n    drawGrid(graphics, state.dungeon.size.width, state.dungeon.size.height);\n\n    handleExporting(state, app);\n\n    if (app.renderer.plugins.interaction.mouseOverRenderer) {\n        ToolRouter.renderTool(state, graphics);\n\n        let mousePosition = app.renderer.plugins.interaction.mouse.getLocalPosition(app.stage);\n        store.dispatch(setCurrentMousePosition(mousePosition.x, mousePosition.y));\n    }\n    else {\n        store.dispatch(setCurrentMousePosition(null, null));\n    }\n}\nexport default render;\n\nconst drawDungeonObjects = (container, state) => {\n    let objectIdMap = state.dungeon.objects.reduce((map, object) => {\n        map[object.id] = object;\n        return map;\n    }, {});\n\n    let containerObjectIds = new Set(container.children.map(child => child.id));\n    let stateObjectIds = Object.keys(objectIdMap);\n    stateObjectIds.forEach(objectId => {\n        if (!containerObjectIds.has(objectId)) {\n            let newChildGraphics = RenderRouter.createRenderObject(objectIdMap[objectId]);\n            newChildGraphics.id = objectId;\n            newChildGraphics.interactive = true;\n            container.addChild(newChildGraphics);\n        }\n    });\n\n    // Sync all child graphics with state\n    container.children.forEach(graphics => {\n        if (graphics.id) {\n            let object = objectIdMap[graphics.id];\n            if (object) {\n                RenderRouter.renderObject(graphics, object, state.editor.selectedObjectIds.includes(graphics.id))\n            }\n            else {\n                container.removeChild(graphics);\n            }\n        }\n    });\n}\n\nconst drawGrid = (graphics, gridWidth, gridHeight) => {\n    graphics.lineStyle(1, 0x444444, 1, 0.5);\n    for (let i = 0; i <= gridWidth; i++) {\n        graphics.moveTo(i * GRID_TILE_SIZE, 0);\n        graphics.lineTo(i * GRID_TILE_SIZE, gridHeight * GRID_TILE_SIZE);\n    }\n\n    for (let j = 0; j <= gridHeight; j++) {\n        graphics.moveTo(0, j * GRID_TILE_SIZE);\n        graphics.lineTo(gridWidth * GRID_TILE_SIZE, j * GRID_TILE_SIZE);\n    }\n}\n\nfunction handleExporting(state, app) {\n    if (state.editor.exportToPngClicked) {\n        exportImage(app);\n    }\n}\n\nfunction handleSelecting(state, app) {\n    if (state.editor.selectingAtPoint) {\n        let mousePoint = new PIXI.Point(\n            state.editor.selectingAtPoint.x,\n            state.editor.selectingAtPoint.y);\n        let globalPosition = app.stage.worldTransform.apply(mousePoint);\n        let selectedObject = app.renderer.plugins.interaction.hitTest(\n            globalPosition);\n\n        if (selectedObject) {\n            store.dispatch(selectObject(selectedObject.id, state.editor.selectingAtPoint.shouldMultiSelect));\n        }\n        else {\n            store.dispatch(selectObjects([], false));\n        }\n    }\n    else if (state.editor.selectingInBoundingBox) {\n        let objectIdsToSelect = [];\n        app.stage.children.forEach(child => {\n            if (doRectanglesIntersect(child.getLocalBounds(), state.editor.selectingInBoundingBox)) {\n                objectIdsToSelect.push(child.id);\n            }\n        });\n        if (objectIdsToSelect.length > 0) {\n            store.dispatch(selectObjects(objectIdsToSelect, state.editor.selectingInBoundingBox.shouldMultiSelect));\n        }\n        else {\n            store.dispatch(selectObjects([], false));\n        }\n    }\n}\n\nfunction handleScaling(state, app) {\n    let fractionalScale = state.editor.scale / 100;\n    if (app.stage.scale.x !== fractionalScale) {\n        app.stage.scale.set(fractionalScale);\n    }\n}\n\nfunction handlePanning(app, state) {\n    app.stage.position.set(state.editor.position.x, state.editor.position.y);\n}\n\nfunction exportImage(app) {\n    let exportTexture = app.renderer.generateTexture(app.stage,\n        null,\n        1.0 / app.stage.scale.x,\n        new PIXI.Rectangle(\n            app.stage.position.x - 1,\n            app.stage.position.y - 1,\n            app.stage.width,\n            app.stage.height\n        ));\n    download(app.renderer.extract.base64(exportTexture), \"dungeon.png\");\n    store.dispatch(pngExported());\n}\n","import { deleteObjects, moveSelectedObject } from \"../reducers/dungeonActions\"\nimport { keyPressed, keyReleased } from \"../reducers/editorActions\";\n\n/**\n * @param {KeyboardEvent} keyboardEvent\n * @param {import(\"redux\").Store} store\n */\nexport const handleKeyPressed = (keyboardEvent, store) => {\n    if (!keyboardEvent.repeat) {\n        store.dispatch(keyPressed(keyboardEvent.key));\n    }\n    let state = store.getState();\n    switch (keyboardEvent.key) {\n        case 'Delete':\n            return store.dispatch(deleteObjects(state.editor.selectedObjectIds));\n        case 'ArrowLeft':\n            return store.dispatch(moveSelectedObject(state.editor.selectedObjectIds[0], -1, 0));\n        case 'ArrowRight':\n            return store.dispatch(moveSelectedObject(state.editor.selectedObjectIds[0], 1, 0));\n        case 'ArrowDown':\n            return store.dispatch(moveSelectedObject(state.editor.selectedObjectIds[0], 0, 1));\n        case 'ArrowUp':\n            return store.dispatch(moveSelectedObject(state.editor.selectedObjectIds[0], 0, -1));\n        default:\n            return;\n    }\n}\n\n/**\n * @param {KeyboardEvent} keyboardEvent\n * @param {import(\"redux\").Store} store\n */\nexport const handleKeyReleased = (keyboardEvent, store) => {\n    store.dispatch(keyReleased(keyboardEvent.key));\n}\n","import { mouseDown, mouseUp, moveViewport, scroll } from \"../reducers/editorActions\";\nimport * as ToolRouter from '../tools/ToolRouter';\n\nexport const handleMouseDown = (mouseEvent, store) => {\n    if (mouseEvent.buttons === 1) {\n        store.dispatch(mouseDown());\n    }\n}\n\nexport const handleMouseUp = (mouseEvent, store) => {\n    let state = store.getState();\n    if (state.editor.mouse.mouseDown) {\n        store.dispatch(mouseUp());\n        ToolRouter.onMouseUp(store);\n    }\n}\n\nexport const handleMouseMove = (mouseEvent, store) => {\n    if (mouseEvent.buttons === 2) {\n        store.dispatch(moveViewport(mouseEvent.movementX, mouseEvent.movementY));\n    }\n}\n\nexport const handleWheelEvent = (wheelEvent, store) => {\n    store.dispatch(scroll(\n        wheelEvent.deltaX,\n        wheelEvent.deltaY,\n        wheelEvent.getModifierState('Control')));\n}\n","import * as PIXI from 'pixi.js';\nimport React from 'react';\nimport { render as renderDungeon } from '../rendering/DungeonRenderer';\nimport store from '../store.js';\nimport { handleKeyPressed, handleKeyReleased } from '../utils/keyboardEventHandlers.js';\nimport * as MouseEventHandler from '../utils/mouseEventHandlers.js';\n\nexport default class DungeonEditor extends React.Component {\n    render() {\n        return <div\n            style={{ height: \"85vh\" }}\n            tabIndex={-1}\n            ref={(element) => this.canvasDiv = element}>\n        </div>\n    }\n\n    componentDidMount() {\n        const app = new PIXI.Application({\n            backgroundColor: 0x5f5f5f,\n            sharedLoader: true,\n            sharedTicker: true,\n            antialias: true\n        });\n        this.app = app;\n        this.canvasDiv.appendChild(app.view);\n        this.app.resizeTo = this.canvasDiv;\n        this.app.resize();\n\n        let graphics = new PIXI.Graphics();\n        graphics.zIndex = Number.MAX_SAFE_INTEGER;\n        app.stage.sortableChildren = true;\n        app.stage.addChild(graphics);\n\n        this.setupInteractions()\n\n        app.ticker.add(() => {\n            renderDungeon(app, graphics);\n        });\n    }\n\n    setupInteractions() {\n        this.canvasDiv.addEventListener(\"wheel\", (wheelEvent) => {\n            MouseEventHandler.handleWheelEvent(wheelEvent, store);\n            wheelEvent.preventDefault();\n        });\n        this.canvasDiv.addEventListener('contextmenu', (event) => {\n            event.preventDefault();\n        });\n        this.canvasDiv.addEventListener('pointerdown', (event) => {\n            MouseEventHandler.handleMouseDown(event, store);\n        });\n        this.canvasDiv.addEventListener('pointerup', (event) => {\n            MouseEventHandler.handleMouseUp(event, store);\n        });\n        this.canvasDiv.addEventListener('pointermove', (pointerEvent) => {\n            MouseEventHandler.handleMouseMove(pointerEvent, store);\n        });\n        this.canvasDiv.addEventListener('keydown', (event) => {\n            handleKeyPressed(event, store);\n        });\n        this.canvasDiv.addEventListener('keyup', (event) => {\n            handleKeyReleased(event, store);\n        })\n    }\n}\n","import React from 'react'\n\nconst StateEditorCard = ({title, children}) =>\n    <div className=\"card bg-dark text-light border-secondary mb-3\">\n        <div className=\"card-header border-secondary\">\n            <h5>{title}</h5>\n        </div>\n        <div className=\"card-body\">\n            <div className=\"form-group\">\n                {children}\n            </div>\n        </div>\n    </div>\n\nexport default StateEditorCard\n","import React from 'react'\nimport StateEditorCard from './StateEditorCard'\n\nconst PositionEditor = ({ title, x, y, onUpdate }) =>\n    <StateEditorCard title={title ?? 'Position'}>\n        <label>\n            X:\n            <input\n                className=\"form-control bg-secondary text-light\"\n                type=\"number\"\n                value={x}\n                onChange={(changeEvent) => onUpdate(\n                    parseInt(changeEvent.target.value),\n                    y\n                )}>\n            </input>\n        </label>\n        <label>\n            Y:\n            <input\n                className=\"form-control bg-secondary text-light\"\n                type=\"number\"\n                value={y}\n                onChange={(changeEvent) => onUpdate(\n                    x,\n                    parseInt(changeEvent.target.value)\n                )}>\n            </input>\n        </label>\n    </StateEditorCard>\n\nexport default PositionEditor","import React from 'react'\nimport StateEditorCard from './StateEditorCard'\n\nconst SizeEditor = ({ title, width, height, onUpdate }) =>\n    <StateEditorCard title={title ?? 'Size'}>\n        <label>\n            Width:\n            <input\n                className=\"form-control bg-secondary text-light\"\n                type=\"number\"\n                value={width}\n                onChange={(changeEvent) => onUpdate(\n                    parseInt(changeEvent.target.value),\n                    height\n                )}>\n            </input>\n        </label>\n        <label>\n            Height:\n            <input\n                className=\"form-control bg-secondary text-light\"\n                type=\"number\"\n                value={height}\n                onChange={(changeEvent) => onUpdate(\n                    width,\n                    parseInt(changeEvent.target.value)\n                )}>\n            </input>\n        </label>\n    </StateEditorCard>\n\nexport default SizeEditor","import React from \"react\"\nimport { connect } from 'react-redux'\nimport * as DungeonActions from '../reducers/dungeonActions'\nimport * as EditorActions from '../reducers/editorActions'\nimport PositionEditor from \"./PositionEditor\"\nimport SizeEditor from \"./SizeEditor\"\nimport StateEditorCard from \"./StateEditorCard\"\n\nlet StateEditor = ({ dispatch, selectedObjectId, selectedObject, dungeonSize, scrollPansViewport }) => {\n    if (selectedObjectId) {\n        return <React.Fragment>\n            {selectedObject.label !== undefined &&\n                <StateEditorCard title='Label'>\n                    <label>\n                        Label:\n                        <input\n                            className=\"form-control bg-secondary text-light\"\n                            type=\"text\"\n                            value={selectedObject.label}\n                            onChange={(changeEvent) => dispatch(DungeonActions.setSelectedObjectLabel(selectedObjectId, changeEvent.target.value))}>\n                        </input>\n                    </label>\n                </StateEditorCard>}\n            {selectedObject.textureUrl !== undefined &&\n                <StateEditorCard title=\"Texture Path\">\n                    <label>\n                        Path:\n                        <input\n                            className=\"form-control bg-secondary text-light\"\n                            value={selectedObject.textureUrl}\n                            onChange={(changeEvent) => {dispatch(DungeonActions.setSelectedObjectTextureUrl(selectedObjectId, changeEvent.target.value))}}></input>\n                    </label>\n                </StateEditorCard>\n            }\n            {selectedObject.position &&\n                <PositionEditor\n                    x={selectedObject.position.x}\n                    y={selectedObject.position.y}\n                    onUpdate={(x, y) => dispatch(DungeonActions.setSelectedObjectPosition(selectedObjectId, x, y))} />\n            }\n            {selectedObject.size &&\n                <SizeEditor\n                    width={selectedObject.size.width}\n                    height={selectedObject.size.height}\n                    onUpdate={(width, height) => dispatch(DungeonActions.setSelectedObjectSize(selectedObjectId, width, height))} />\n            }\n            {selectedObject.start &&\n                <PositionEditor\n                    title=\"Start\"\n                    x={selectedObject.start.x}\n                    y={selectedObject.start.y}\n                    onUpdate={(x,y) => dispatch(DungeonActions.setSelectedObjectStart(selectedObjectId, x, y))} />\n            }\n            {selectedObject.end &&\n                <PositionEditor\n                    title=\"End\"\n                    x={selectedObject.end.x}\n                    y={selectedObject.end.y}\n                    onUpdate={(x,y) => dispatch(DungeonActions.setSelectedObjectEnd(selectedObjectId, x, y))} />\n            }\n            {selectedObject.angle !== undefined &&\n                <StateEditorCard title=\"Angle\">\n                    <label>\n                        Angle:\n                        <input\n                            className=\"form-control bg-secondary text-light\"\n                            type=\"number\"\n                            step=\"45\"\n                            min=\"-360\"\n                            max=\"360\"\n                            value={selectedObject.angle}\n                            onChange={(changeEvent) => {dispatch(DungeonActions.setSelectedObjectAngle(selectedObjectId, changeEvent.target.value))}}></input>\n                        <input\n                            className=\"form-control bg-secondary text-light\"\n                            type=\"range\"\n                            step=\"45\"\n                            min=\"-360\"\n                            max=\"360\"\n                            style={{direction: \"rtl\"}}\n                            value={selectedObject.angle}\n                            onChange={(changeEvent) => {dispatch(DungeonActions.setSelectedObjectAngle(selectedObjectId, changeEvent.target.value))}}></input>\n                    </label>\n                </StateEditorCard>\n            }\n            {selectedObjectId &&\n                <StateEditorCard title=\"Actions\">\n                    <button\n                        className=\"btn btn-outline-danger\"\n                        onClick={() => dispatch(DungeonActions.deleteObjects([selectedObjectId]))}>\n                            Delete Object\n                    </button>\n                </StateEditorCard>\n            }\n        </React.Fragment>\n    }\n    else {\n        return <React.Fragment>\n            <StateEditorCard title=\"Instructions\">\n                <p><i>Right click</i> to pan the view.</p>\n                <p><i>Scroll</i> to zoom in and out.</p>\n                <p><i>Left click and drag</i> to create new spaces with the New Space tool.</p>\n                <p><i>Left click</i> to select spaces with the Select tool.</p>\n                <p><i>Arrow keys</i> will move the currently selected space.</p>\n                <p><i>Delete</i> will delete the currently selected space.</p>\n            </StateEditorCard>\n            <StateEditorCard title=\"Actions\">\n                <button\n                    className=\"btn btn-primary form-control mb-2\"\n                    onClick={() => dispatch(EditorActions.exportToPngClicked())}>\n                        Download Dungeon as PNG\n                </button>\n                <button\n                    className=\"btn btn-outline-danger form-control mb-2\"\n                    onClick={() => dispatch(DungeonActions.clearDungeon())}>\n                        New Dungeon\n                </button>\n            </StateEditorCard>\n            <SizeEditor\n                title=\"Dungeon Size\"\n                width={dungeonSize.width}\n                height={dungeonSize.height}\n                onUpdate={(width, height) => dispatch(DungeonActions.setDungeonSize(width, height))} />\n            <StateEditorCard title=\"Editor Options\">\n                <label>\n                    <input type='checkbox' value={scrollPansViewport} onChange={(event) => dispatch(EditorActions.setScrollMovesViewport(event.target.checked))}></input>\n                    Scroll to pan\n                </label>\n            </StateEditorCard>\n        </React.Fragment>\n    }\n}\n\nconst mapStateToProps = state => {\n    let selectedObjectId = state.editor.selectedObjectIds.length === 1 ? state.editor.selectedObjectIds[0] : null;\n    let selectedObject = selectedObjectId ? state.dungeon.objects.find(object => object.id === selectedObjectId) : null;\n    return {\n        selectedObjectId: selectedObjectId,\n        selectedObject: selectedObject,\n        dungeonSize: state.dungeon.size,\n        scrollMovesViewport: state.editor.scrollMovesViewport\n    }\n}\n\nStateEditor = connect(mapStateToProps)(StateEditor)\n\nexport default StateEditor\n","import React from \"react\"\n\nconst ToolbarButton = ({toolName, toolId, selectedTool, onClick}) =>\n    <button\n        className={\"btn btn-secondary\" +\n            (selectedTool === toolId ? ' active' : '')}\n        onClick={() => onClick(toolId)}>\n            {toolName}\n    </button>\n\nexport default ToolbarButton;","import React from \"react\"\nimport { connect } from 'react-redux'\nimport { selectTool } from '../reducers/editorActions'\nimport ToolbarButton from \"./ToolbarButton\"\nimport TOOL_TYPE from \"../tools/toolType\"\n\nlet Toolbar = ({ dispatch, selectedTool }) => {\n    const dispatchSelectedTool = (toolId) => dispatch(selectTool(toolId))\n\n    return (\n        <div className=\"btn-group\" role=\"group\">\n            <ToolbarButton\n                toolName='Select'\n                toolId={TOOL_TYPE.SELECT}\n                selectedTool={selectedTool}\n                onClick={dispatchSelectedTool} />\n            <ToolbarButton\n                toolName='New Rectangular Space'\n                toolId={TOOL_TYPE.NEW_SPACE_RECTANGLE}\n                selectedTool={selectedTool}\n                onClick={dispatchSelectedTool} />\n            <ToolbarButton\n                toolName='New Polygonal Space'\n                toolId={TOOL_TYPE.NEW_SPACE_POLYGON}\n                selectedTool={selectedTool}\n                onClick={dispatchSelectedTool} />\n            <ToolbarButton\n                toolName='New Wall'\n                toolId={TOOL_TYPE.NEW_WALL}\n                selectedTool={selectedTool}\n                onClick={dispatchSelectedTool} />\n            <ToolbarButton\n                toolName='New Door'\n                toolId={TOOL_TYPE.NEW_DOOR}\n                selectedTool={selectedTool}\n                onClick={dispatchSelectedTool} />\n            <ToolbarButton\n                toolName='New Label'\n                toolId={TOOL_TYPE.NEW_LABEL}\n                selectedTool={selectedTool}\n                onClick={dispatchSelectedTool} />\n            <ToolbarButton\n                toolName='New Token'\n                toolId={TOOL_TYPE.NEW_TOKEN}\n                selectedTool={selectedTool}\n                onClick={dispatchSelectedTool} />\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    selectedTool: state.editor.selectedTool\n})\n\nToolbar = connect(mapStateToProps)(Toolbar)\n\nexport default Toolbar\n","import React from 'react';\nimport DungeonEditor from \"./components/DungeonEditor.js\";\nimport StateEditor from './components/StateEditor';\nimport Toolbar from './components/Toolbar';\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <nav className=\"navbar navbar-dark bg-secondary\">\n        <span className=\"navbar-brand\">\n          Pungeon\n        </span>\n      </nav>\n      <div className=\"px-5\">\n        <div className=\"py-2\">\n          <Toolbar />\n        </div>\n        <div className=\"row\">\n          <div className=\"col-md-9\">\n            <DungeonEditor />\n          </div>\n          <div className=\"col-md-3\">\n            <StateEditor />\n          </div>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app/App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './app/store.js'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}