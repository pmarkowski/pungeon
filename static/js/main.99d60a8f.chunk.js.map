{"version":3,"sources":["app/utils/createArrayWithUpdatedObject.js","app/utils/toolTypes.js","app/reducers/dungeonReducer.js","app/store.js","app/utils/geometry.js","app/utils/keyboardEventHandlers.js","app/components/DungeonEditor.js","app/utils/constants.js","app/utils/mouseEventHandlers.js","app/components/PositionEditor.js","app/components/SizeEditor.js","app/components/StateEditor.js","app/components/ToolbarButton.js","app/components/Toolbar.js","app/App.js","serviceWorker.js","index.js"],"names":["createArrayWithUpdatedObject","array","id","update","map","object","objectCopy","TOOLTYPE","SELECT","NEW_WALL","NEW_SPACE","NEW_DOOR","selectObject","objectId","type","moveSelectedObject","deltaX","deltaY","setMouseDungeonPosition","x","y","dungeonReducer","state","action","editor","position","mouse","dungeonPosition","scrollMovesViewport","holdingCtrl","scaleDelta","scrollY","newScale","Math","min","max","scale","scrollX","mouseDown","mouseStartX","mouseStartY","dungeon","size","width","height","arrayWithUpdatedObject","spaces","selectedObject","space","wallArrayWithUpdatedObject","walls","wall","start","doorArrayWithUpdatedObject","doors","door","end","spaceArray","slice","newSpace","wallArray","newWall","doorArray","newDoor","selectedTool","selectedObjectId","newSpaceArray","filter","newWallArray","newDoorArray","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","square","lineLength","v","w","sqrt","getClosestPointOnLine","p","a","b","atob","len","dot","t","handleKeyboardEvent","keyboardEvent","key","dispatch","DungeonEditor","style","tabIndex","ref","element","canvasDiv","app","PIXI","backgroundColor","sharedLoader","sharedTicker","antialias","this","appendChild","view","resizeTo","resize","graphics","zIndex","Number","MAX_SAFE_INTEGER","stage","sortableChildren","addChild","setupInteractions","ticker","add","getState","set","clear","drawDungeonObjects","drawGrid","renderer","plugins","interaction","mouseOverRenderer","drawMouseCursor","mousePosition","getLocalPosition","addEventListener","wheelEvent","getModifierState","scroll","MouseEventHandler","preventDefault","event","buttons","mouseEvent","mousePoint","startX","floor","startY","endX","ceil","endY","uuid","round","minDistance","snapPoint","minWallId","forEach","scaledStart","scaledEnd","closestPoint","distance","doorWall","find","endPoint","pointerEvent","movementX","movementY","container","gridTileSize","stateSpaceMap","reduce","containerObjectIds","Set","children","child","Object","keys","spaceId","has","newChildGraphics","interactive","mouseup","stateWallMap","wallId","stateDoorMap","doorId","beginFill","drawRect","endFill","tint","lineStyle","moveTo","lineTo","drawCircle","half","hitArea","removeChild","snappedX","snappedY","hoverX","hoverY","gridWidth","gridHeight","i","j","React","Component","PositionEditor","title","onUpdate","className","value","onChange","changeEvent","parseInt","target","SizeEditor","StateEditor","dungeonSize","scrollPansViewport","Fragment","DungeonActions","onClick","checked","connect","ToolbarButton","toolName","toolId","Toolbar","dispatchSelectedTool","role","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.99d60a8f.chunk.js","sourcesContent":["export const createArrayWithUpdatedObject = (array, id, update) => {\r\n    return array.map(object => {\r\n        if (object.id === id) {\r\n            let objectCopy = {...object};\r\n            update(objectCopy);\r\n            return objectCopy;\r\n        }\r\n        else {\r\n            return object;\r\n        }\r\n    })\r\n}\r\n","const TOOLTYPE  = {\r\n    SELECT: \"select\",\r\n    NEW_WALL: \"new_wall\",\r\n    NEW_SPACE: \"new_space\",\r\n    NEW_DOOR: \"new_door\"\r\n};\r\n\r\nexport default TOOLTYPE;\r\n","import { createArrayWithUpdatedObject } from '../utils/createArrayWithUpdatedObject'\r\nimport TOOLTYPE from '../utils/toolTypes'\r\n\r\nexport const scroll = (wheelEvent) => ({\r\n    type: 'SCROLL_EVENT',\r\n    scrollX: wheelEvent.deltaX,\r\n    scrollY: wheelEvent.deltaY,\r\n    holdingCtrl: wheelEvent.getModifierState(\"Control\")\r\n})\r\n\r\nexport const moveViewport = (deltaX, deltaY) => ({\r\n    type: 'MOVE_VIEWPORT',\r\n    deltaX: deltaX,\r\n    deltaY: deltaY\r\n})\r\n\r\nexport const selectTool = (toolName) => ({\r\n    type: 'SELECT_TOOL',\r\n    selectedTool: toolName\r\n})\r\n\r\nexport const selectObject = (objectId) => ({\r\n    type: 'SELECT_OBJECT',\r\n    objectId: objectId\r\n})\r\n\r\nexport const deleteSelectedObject = () => ({\r\n    type: 'DELETE_OBJECT'\r\n})\r\n\r\nexport const moveSelectedObject = (deltaX, deltaY) => ({\r\n    type: 'MOVE_SELECTED_OBJECT',\r\n    deltaX: deltaX,\r\n    deltaY: deltaY\r\n})\r\n\r\nexport const setSelectedObjectPosition = (x, y) => ({\r\n    type: 'SET_SELECTED_OBJECT_POSITION',\r\n    x: x,\r\n    y: y\r\n})\r\n\r\nexport const setSelectedObjectSize = (width, height) => ({\r\n    type: 'SET_SELECTED_OBJECT_SIZE',\r\n    width: width,\r\n    height: height\r\n})\r\n\r\nexport const setSelectedObjectStart = (x, y) => ({\r\n    type: 'SET_SELECTED_OBJECT_START',\r\n    x: x,\r\n    y: y\r\n})\r\n\r\nexport const setSelectedObjectEnd = (x, y) => ({\r\n    type: 'SET_SELECTED_OBJECT_END',\r\n    x: x,\r\n    y: y\r\n})\r\n\r\nexport const setDungeonSize = (width, height) => ({\r\n    type: 'SET_DUNGEON_SIZE',\r\n    width: width,\r\n    height: height\r\n})\r\n\r\nexport const setScrollMovesViewport = (scrollMovesViewport) => ({\r\n    type: 'SET_SCROLL_MOVES_VIEWPORT',\r\n    scrollMovesViewport: scrollMovesViewport\r\n})\r\n\r\nexport const setMouseDungeonPosition = (x, y) => ({\r\n    type: 'SET_MOUSE_DUNGEON_POSITION',\r\n    x: x,\r\n    y: y\r\n})\r\n\r\nexport const dungeonReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case 'MOVE_VIEWPORT': {\r\n            return {\r\n                ...state,\r\n                editor: {\r\n                    ...state.editor,\r\n                    position: {\r\n                        x: state.editor.position.x + action.deltaX,\r\n                        y: state.editor.position.y + action.deltaY\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        case 'SET_MOUSE_DUNGEON_POSITION': {\r\n            return {\r\n                ...state,\r\n                editor: {\r\n                    ...state.editor,\r\n                    mouse: {\r\n                        ...state.editor.mouse,\r\n                        dungeonPosition: {\r\n                            x: action.x,\r\n                            y: action.y\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        case 'SCROLL_EVENT': {\r\n            if (!state.scrollMovesViewport || action.holdingCtrl) {\r\n                let scaleDelta = 0.1\r\n                if (action.scrollY > 0) {\r\n                    scaleDelta *= -1\r\n                }\r\n                let newScale = Math.min(Math.max(state.editor.scale + scaleDelta, 0.1), 2)\r\n                if (state.editor.scale !== newScale) {\r\n                    return {\r\n                        ...state,\r\n                        editor: {\r\n                            ...state.editor,\r\n                            scale: newScale,\r\n                            position: {\r\n                                x: state.editor.position.x - (state.editor.mouse.dungeonPosition.x * scaleDelta),\r\n                                y: state.editor.position.y - (state.editor.mouse.dungeonPosition.y * scaleDelta),\r\n                            }\r\n                        }\r\n                    };\r\n                }\r\n                else {\r\n                    return state;\r\n                }\r\n            }\r\n            else {\r\n                let scaleDelta = 0.5;\r\n                return {\r\n                    ...state,\r\n                    editor: {\r\n                        ...state.editor,\r\n                        position: {\r\n                           x: state.editor.position.x - action.scrollX * scaleDelta,\r\n                           y: state.editor.position.y - action.scrollY * scaleDelta\r\n                        }\r\n                    }\r\n                };\r\n            }\r\n        }\r\n        case 'MOUSE_DOWN': {\r\n            return {\r\n                ...state,\r\n                mouseDown: true,\r\n                mouseStartX: state.editor.mouse.dungeonPosition.x,\r\n                mouseStartY: state.editor.mouse.dungeonPosition.y\r\n            };\r\n        }\r\n        case 'MOUSE_UP': {\r\n            return {\r\n                ...state,\r\n                mouseDown: false\r\n            };\r\n        }\r\n        case 'SET_DUNGEON_SIZE': {\r\n            return {\r\n                ...state,\r\n                dungeon: {\r\n                    ...state.dungeon,\r\n                    size: {\r\n                        width: action.width,\r\n                        height: action.height\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        case 'SET_SCROLL_MOVES_VIEWPORT': {\r\n            return {\r\n                ...state,\r\n                scrollMovesViewport: action.scrollMovesViewport\r\n            }\r\n        }\r\n        case 'MOVE_SELECTED_OBJECT': {\r\n            let arrayWithUpdatedObject = createArrayWithUpdatedObject(\r\n                state.dungeon.spaces,\r\n                state.selectedObject,\r\n                (space) => space.position = {\r\n                    x: space.position.x + action.deltaX,\r\n                    y: space.position.y + action.deltaY\r\n                });\r\n            return {\r\n                ...state,\r\n                dungeon: {\r\n                    ...state.dungeon,\r\n                    spaces: arrayWithUpdatedObject\r\n                }\r\n            };\r\n        }\r\n        case 'SET_SELECTED_OBJECT_POSITION': {\r\n            let arrayWithUpdatedObject = createArrayWithUpdatedObject(\r\n                state.dungeon.spaces,\r\n                state.selectedObject,\r\n                (space) => space.position = {\r\n                    x: action.x,\r\n                    y: action.y\r\n                });\r\n            return {\r\n                ...state,\r\n                dungeon: {\r\n                    ...state.dungeon,\r\n                    spaces: arrayWithUpdatedObject\r\n                }\r\n            };\r\n        }\r\n        case 'SET_SELECTED_OBJECT_SIZE': {\r\n            let arrayWithUpdatedObject = createArrayWithUpdatedObject(\r\n                state.dungeon.spaces,\r\n                state.selectedObject,\r\n                (space) => space.size = {\r\n                    width: action.width,\r\n                    height: action.height\r\n                });\r\n            return {\r\n                ...state,\r\n                dungeon: {\r\n                    ...state.dungeon,\r\n                    spaces: arrayWithUpdatedObject\r\n                }\r\n            };\r\n        }\r\n        case 'SET_SELECTED_OBJECT_START': {\r\n            let wallArrayWithUpdatedObject = createArrayWithUpdatedObject(\r\n                state.dungeon.walls,\r\n                state.selectedObject,\r\n                (wall) => wall.start = {\r\n                    x: action.x,\r\n                    y: action.y\r\n                });\r\n            let doorArrayWithUpdatedObject = createArrayWithUpdatedObject(\r\n                state.dungeon.doors,\r\n                state.selectedObject,\r\n                (door) => door.start = {\r\n                    x: action.x,\r\n                    y: action.y\r\n                });\r\n            return {\r\n                ...state,\r\n                dungeon: {\r\n                    ...state.dungeon,\r\n                    walls: wallArrayWithUpdatedObject,\r\n                    doors: doorArrayWithUpdatedObject\r\n                }\r\n            };\r\n        }\r\n        case 'SET_SELECTED_OBJECT_END': {\r\n            let wallArrayWithUpdatedObject = createArrayWithUpdatedObject(\r\n                state.dungeon.walls,\r\n                state.selectedObject,\r\n                (wall) => wall.end = {\r\n                    x: action.x,\r\n                    y: action.y\r\n                });\r\n            let doorArrayWithUpdatedObject = createArrayWithUpdatedObject(\r\n                state.dungeon.doors,\r\n                state.selectedObject,\r\n                (door) => door.end = {\r\n                    x: action.x,\r\n                    y: action.y\r\n                });\r\n            return {\r\n                ...state,\r\n                dungeon: {\r\n                    ...state.dungeon,\r\n                    walls: wallArrayWithUpdatedObject,\r\n                    doors: doorArrayWithUpdatedObject\r\n                }\r\n            };\r\n\r\n        }\r\n        case 'ADD_SPACE': {\r\n            let spaceArray = state.dungeon.spaces.slice();\r\n            spaceArray = [...spaceArray, action.newSpace];\r\n            return {\r\n                ...state,\r\n                dungeon: {\r\n                    ...state.dungeon,\r\n                    spaces: spaceArray\r\n                }\r\n            };\r\n        }\r\n        case 'ADD_WALL': {\r\n            let wallArray = state.dungeon.walls.slice();\r\n            wallArray = [...wallArray, action.newWall];\r\n            return {\r\n                ...state,\r\n                dungeon: {\r\n                    ...state.dungeon,\r\n                    walls: wallArray\r\n                }\r\n            };\r\n        }\r\n        case 'ADD_DOOR': {\r\n            let doorArray = state.dungeon.doors.slice();\r\n            doorArray = [...doorArray, action.newDoor];\r\n            return {\r\n                ...state,\r\n                dungeon: {\r\n                    ...state.dungeon,\r\n                    doors: doorArray\r\n                }\r\n            };\r\n        }\r\n        case 'SELECT_TOOL': {\r\n            let selectedObject = state.selectedObject;\r\n            if (action.selectedTool !== TOOLTYPE.SELECT) {\r\n                selectedObject = null;\r\n            }\r\n            return {\r\n                ...state,\r\n                selectedTool: action.selectedTool,\r\n                selectedObject: selectedObject\r\n            };\r\n        }\r\n        case 'SELECT_OBJECT': {\r\n            if (state.selectedTool === TOOLTYPE.SELECT) {\r\n                return {\r\n                    ...state,\r\n                    selectedObject: action.objectId\r\n                };\r\n            }\r\n            else {\r\n                return state;\r\n            }\r\n        }\r\n        case 'DELETE_OBJECT': {\r\n            let selectedObjectId = state.selectedObject;\r\n            if (selectedObjectId) {\r\n                let newSpaceArray = state.dungeon.spaces.filter(space => space.id !== selectedObjectId);\r\n                let newWallArray = state.dungeon.walls.filter(wall => wall.id !== selectedObjectId);\r\n                let newDoorArray = state.dungeon.doors.filter(door => door.id !== selectedObjectId);\r\n                return {\r\n                    ...state,\r\n                    selectedObject: null,\r\n                    dungeon: {\r\n                        ...state.dungeon,\r\n                        spaces: newSpaceArray,\r\n                        walls: newWallArray,\r\n                        doors: newDoorArray\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                return state;   \r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport default dungeonReducer\r\n","import { createStore } from 'redux';\r\nimport dungeonReducer from './reducers/dungeonReducer.js'\r\nimport TOOLTYPE from './utils/toolTypes.js';\r\n\r\nconst store = createStore(dungeonReducer,\r\n  {\r\n    scrollMovesViewport: false,\r\n    mouseDown: false,\r\n    mouseStartX: 0,\r\n    mouseStartY: 0,\r\n    selectedTool: TOOLTYPE.NEW_SPACE,\r\n    editor: {\r\n      scale: 1,\r\n      position: {\r\n        x: 0,\r\n        y: 0\r\n      },\r\n      mouse: {\r\n        dungeonPosition: {\r\n          x: 0,\r\n          y: 0\r\n        }\r\n      }\r\n    },\r\n    dungeon: {\r\n      size: {\r\n        width: 28,\r\n        height: 32\r\n      },\r\n      doors: [],\r\n      spaces: [\r\n        {\r\n          id: \"01f998f7-3ad4-43c6-b498-3249ab470b05\",\r\n          position: {\r\n            x: 1,\r\n            y: 1\r\n          },\r\n          size: {\r\n            width: 5,\r\n            height: 5\r\n          }\r\n        },\r\n        {\r\n          id: \"79178d8c-3a3e-42ee-b1ec-00dc37a045fc\",\r\n          position: {\r\n            x: 6,\r\n            y: 4\r\n          },\r\n          size: {\r\n            width: 7,\r\n            height: 9\r\n          }\r\n        },\r\n        {\r\n          id: \"6ce25fdc-9fd4-46c0-a924-74f5f9174193\",\r\n          position: {\r\n            x: 15,\r\n            y: 15\r\n          },\r\n          size: {\r\n            width: 6,\r\n            height: 7\r\n          }\r\n        },\r\n        {\r\n          id: \"e211fbd3-a817-47a5-bb47-481ba330e46d\",\r\n          position: {\r\n            x: 21,\r\n            y: 19\r\n          },\r\n          size: {\r\n            width: 4,\r\n            height: 9\r\n          }\r\n        }\r\n      ],\r\n      walls: [\r\n        {\r\n          id: '4abe3330-4a95-4c29-b71d-8ea768da1ee6',\r\n          start: {\r\n            x: 1,\r\n            y: 1\r\n          },\r\n          end: {\r\n            x: 1,\r\n            y: 6\r\n          }\r\n        },\r\n        {\r\n          id: 'ad3c6f9b-f3f0-4025-8073-daacc68483ec',\r\n          start: {\r\n            x: 6,\r\n            y: 6\r\n          },\r\n          end: {\r\n            x: 1,\r\n            y: 6\r\n          }\r\n        },\r\n        {\r\n          id: '68365136-d12f-4e54-8f7b-4cbd3ab424eb',\r\n          start: {\r\n            x: 6,\r\n            y: 13\r\n          },\r\n          end: {\r\n            x: 6,\r\n            y: 6\r\n          }\r\n        },\r\n        {\r\n          id: '3d6435e5-8d67-4405-87d0-72c4e8f4dfaa',\r\n          start: {\r\n            x: 13,\r\n            y: 13\r\n          },\r\n          end: {\r\n            x: 6,\r\n            y: 13\r\n          }\r\n        },\r\n        {\r\n          id: '384ac23d-f5fc-4cd1-9ad7-b528b62fa732',\r\n          start: {\r\n            x: 13,\r\n            y: 4\r\n          },\r\n          end: {\r\n            x: 13,\r\n            y: 13\r\n          }\r\n        },\r\n        {\r\n          id: '161e3147-ca11-4dc4-a26b-ca8295c5abaa',\r\n          start: {\r\n            x: 6,\r\n            y: 4\r\n          },\r\n          end: {\r\n            x: 13,\r\n            y: 4\r\n          }\r\n        },\r\n        {\r\n          id: 'e8092d63-e7e2-4cd2-8c80-8cd6030980f1',\r\n          start: {\r\n            x: 6,\r\n            y: 1\r\n          },\r\n          end: {\r\n            x: 6,\r\n            y: 4\r\n          }\r\n        },\r\n        {\r\n          id: '71ed94d3-177b-428b-a8e5-fe25eb79a4ea',\r\n          start: {\r\n            x: 1,\r\n            y: 1\r\n          },\r\n          end: {\r\n            x: 6,\r\n            y: 1\r\n          }\r\n        },\r\n        {\r\n          id: '0ea47a6f-af9f-4ec6-a7f3-881332643e2a',\r\n          start: {\r\n            x: 15,\r\n            y: 15\r\n          },\r\n          end: {\r\n            x: 15,\r\n            y: 22\r\n          }\r\n        },\r\n        {\r\n          id: 'f7ec5579-7966-4ba4-b8ee-fdaad6372842',\r\n          start: {\r\n            x: 21,\r\n            y: 22\r\n          },\r\n          end: {\r\n            x: 15,\r\n            y: 22\r\n          }\r\n        },\r\n        {\r\n          id: '1e587060-37cc-4b87-a88a-852c8055cabb',\r\n          start: {\r\n            x: 21,\r\n            y: 15\r\n          },\r\n          end: {\r\n            x: 15,\r\n            y: 15\r\n          }\r\n        },\r\n        {\r\n          id: '79e1f702-6d60-435b-ba1e-584077a7d479',\r\n          start: {\r\n            x: 21,\r\n            y: 19\r\n          },\r\n          end: {\r\n            x: 21,\r\n            y: 15\r\n          }\r\n        },\r\n        {\r\n          id: '231997d1-1453-4573-a2c0-0571428d7ac9',\r\n          start: {\r\n            x: 25,\r\n            y: 19\r\n          },\r\n          end: {\r\n            x: 21,\r\n            y: 19\r\n          }\r\n        },\r\n        {\r\n          id: '85033454-8145-4d36-9b58-5e891f731f25',\r\n          start: {\r\n            x: 21,\r\n            y: 22\r\n          },\r\n          end: {\r\n            x: 21,\r\n            y: 28\r\n          }\r\n        },\r\n        {\r\n          id: '2c6b4f88-4163-4847-ba05-c4ce865dfd87',\r\n          start: {\r\n            x: 21,\r\n            y: 28\r\n          },\r\n          end: {\r\n            x: 25,\r\n            y: 28\r\n          }\r\n        },\r\n        {\r\n          id: '57013c9b-609f-4e59-ae1a-fd94a49bac80',\r\n          start: {\r\n            x: 25,\r\n            y: 19\r\n          },\r\n          end: {\r\n            x: 25,\r\n            y: 28\r\n          }\r\n        }\r\n      ]\r\n    }\r\n  },\r\n  typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n\r\nexport default store;","const square = (x) => x * x;\r\n\r\nexport const lineLength = (v, w) => Math.sqrt(square(v.x - w.x) + square(v.y - w.y));\r\n\r\nexport const getClosestPointOnLine = (p, a, b) => {\r\n    \r\n    var atob = { x: b.x - a.x, y: b.y - a.y };\r\n    var atop = { x: p.x - a.x, y: p.y - a.y };\r\n    var len = atob.x * atob.x + atob.y * atob.y;\r\n    var dot = atop.x * atob.x + atop.y * atob.y;\r\n    var t = Math.min( 1, Math.max( 0, dot / len ) );\r\n    return {\r\n        x: a.x + atob.x * t,\r\n        y: a.y + atob.y * t\r\n    };\r\n}","import { deleteSelectedObject, moveSelectedObject } from \"../reducers/dungeonReducer\"\r\n\r\nconst handleKeyboardEvent = (keyboardEvent, store) => {\r\n    switch (keyboardEvent.key) {\r\n        case 'Delete':\r\n            return store.dispatch(deleteSelectedObject());\r\n        case 'ArrowLeft':\r\n            return store.dispatch(moveSelectedObject(-1, 0));\r\n        case 'ArrowRight':\r\n            return store.dispatch(moveSelectedObject(1, 0));\r\n        case 'ArrowDown':\r\n            return store.dispatch(moveSelectedObject(0, 1));\r\n        case 'ArrowUp':\r\n            return store.dispatch(moveSelectedObject(0, -1));\r\n        default:\r\n            return;\r\n    }\r\n}\r\n\r\nexport default handleKeyboardEvent","import * as PIXI from 'pixi.js';\r\nimport React from 'react';\r\nimport { selectObject, setMouseDungeonPosition } from \"../reducers/dungeonReducer\";\r\nimport store from '../store.js';\r\nimport { GRID_TILE_SIZE } from '../utils/constants.js';\r\nimport { getClosestPointOnLine, lineLength } from '../utils/geometry.js';\r\nimport handleKeyboardEvent from '../utils/keyboardEventHandlers.js';\r\nimport * as MouseEventHandler from '../utils/mouseEventHandlers.js';\r\nimport TOOLTYPE from '../utils/toolTypes.js';\r\n\r\nexport default class DungeonEditor extends React.Component {\r\n    render() {\r\n        return <div\r\n            style={{ height: \"85vh\" }}\r\n            tabIndex={-1}\r\n            ref={(element) => this.canvasDiv = element}>\r\n        </div>\r\n    }\r\n\r\n    componentDidMount() {\r\n        const app = new PIXI.Application({\r\n            backgroundColor: 0x5f5f5f,\r\n            sharedLoader: true,\r\n            sharedTicker: true,\r\n            antialias: true\r\n        });\r\n        this.app = app;\r\n        this.canvasDiv.appendChild(app.view);\r\n        this.app.resizeTo = this.canvasDiv;\r\n        this.app.resize();\r\n\r\n        let graphics = new PIXI.Graphics();\r\n        graphics.zIndex = Number.MAX_SAFE_INTEGER;\r\n        app.stage.sortableChildren = true;\r\n        app.stage.addChild(graphics);\r\n\r\n        let gridTileSize = GRID_TILE_SIZE;\r\n        this.setupInteractions()\r\n\r\n        app.ticker.add(() => {\r\n            var state = store.getState();\r\n\r\n            app.stage.position.set(state.editor.position.x, state.editor.position.y);\r\n            if (app.stage.scale.x !== state.editor.scale) {\r\n                app.stage.scale.set(state.editor.scale);\r\n            }\r\n\r\n            graphics.clear();\r\n\r\n            this.drawDungeonObjects(app.stage, state, gridTileSize);\r\n            this.drawGrid(graphics, state.dungeon.size.width, state.dungeon.size.height, gridTileSize);\r\n\r\n            if (app.renderer.plugins.interaction.mouseOverRenderer) {\r\n                this.drawMouseCursor(app, state, gridTileSize, graphics);\r\n\r\n                let mousePosition = app.renderer.plugins.interaction.mouse.getLocalPosition(app.stage);\r\n                store.dispatch(setMouseDungeonPosition(mousePosition.x, mousePosition.y));\r\n            }\r\n            else {\r\n                store.dispatch(setMouseDungeonPosition(null, null));\r\n            }\r\n        });\r\n    }\r\n\r\n    setupInteractions() {\r\n        this.canvasDiv.addEventListener(\"wheel\", (wheelEvent) => {\r\n            MouseEventHandler.handleWheelEvent(wheelEvent, store);\r\n            wheelEvent.preventDefault();\r\n        });\r\n        this.canvasDiv.addEventListener('contextmenu', (event) => {\r\n            event.preventDefault();\r\n        });\r\n        this.canvasDiv.addEventListener('pointerdown', (event) => {\r\n            MouseEventHandler.handleMouseDown(event, store);\r\n        });\r\n        this.canvasDiv.addEventListener('pointerup', (event) => {\r\n            MouseEventHandler.handleMouseUp(event, store);\r\n        });\r\n        this.canvasDiv.addEventListener('pointermove', (pointerEvent) => {\r\n            MouseEventHandler.handleMouseMove(pointerEvent, store);\r\n        });\r\n        this.canvasDiv.addEventListener('keydown', (event) => {\r\n            handleKeyboardEvent(event, store);\r\n        });\r\n    }\r\n\r\n    drawDungeonObjects(container, state, gridTileSize) {\r\n        let stateSpaceMap = state.dungeon.spaces.reduce((map, space) => {\r\n            map[space.id] = space;\r\n            return map;\r\n        }, {});\r\n        // Add any spaces that are in state but not in pixi\r\n        let containerObjectIds = new Set(container.children.map(child => child.id));\r\n        let stateSpaceIds = Object.keys(stateSpaceMap);\r\n        stateSpaceIds.forEach(spaceId => {\r\n            if (!containerObjectIds.has(spaceId)) {\r\n                let newChildGraphics = new PIXI.Graphics();\r\n                newChildGraphics.id = spaceId;\r\n                newChildGraphics.interactive = true;\r\n                newChildGraphics.mouseup = function () {\r\n                    store.dispatch(selectObject(this.id));\r\n                };\r\n                container.addChild(newChildGraphics);\r\n            }\r\n        });\r\n        let stateWallMap = state.dungeon.walls.reduce((map, wall) => {\r\n            map[wall.id] = wall;\r\n            return map;\r\n        }, {});\r\n        let stateWallIds = Object.keys(stateWallMap);\r\n        stateWallIds.forEach(wallId => {\r\n            if (!containerObjectIds.has(wallId)) {\r\n                let newChildGraphics = new PIXI.Graphics();\r\n                newChildGraphics.id = wallId;\r\n                newChildGraphics.interactive = true;\r\n                newChildGraphics.mouseup = function () {\r\n                    store.dispatch(selectObject(this.id));\r\n                };\r\n                container.addChild(newChildGraphics);\r\n            }\r\n        });\r\n        let stateDoorMap = state.dungeon.doors.reduce((map, door) => {\r\n            map[door.id] = door;\r\n            return map;\r\n        }, {});\r\n        let stateDoorIds = Object.keys(stateDoorMap);\r\n        stateDoorIds.forEach(doorId => {\r\n            if (!containerObjectIds.has(doorId)) {\r\n                let newChildGraphics = new PIXI.Graphics();\r\n                newChildGraphics.id = doorId;\r\n                newChildGraphics.interactive = true;\r\n                newChildGraphics.mouseup = function () {\r\n                    store.dispatch(selectObject(this.id));\r\n                };\r\n                container.addChild(newChildGraphics);\r\n            }\r\n        });\r\n\r\n        // Sync all child graphics with state\r\n        container.children.forEach(graphics => {\r\n            if (graphics.id) {\r\n                let space = stateSpaceMap[graphics.id];\r\n                let wall = stateWallMap[graphics.id];\r\n                let door = stateDoorMap[graphics.id];\r\n                if (space) {\r\n                    graphics.clear();\r\n                    graphics.beginFill(0xd6d5d5);\r\n                    graphics.drawRect(\r\n                        space.position.x * gridTileSize,\r\n                        space.position.y * gridTileSize,\r\n                        space.size.width * gridTileSize,\r\n                        space.size.height * gridTileSize);\r\n                    graphics.endFill();\r\n\r\n                    if (state.selectedObject === graphics.id) {\r\n                        graphics.tint = 0xffffcc;\r\n                    }\r\n                    else {\r\n                        graphics.tint = 0xffffff;\r\n                    }\r\n                }\r\n                else if (wall) {\r\n                    graphics.zIndex = 2;\r\n                    graphics.clear();\r\n                    graphics.beginFill(0x0266e6, 1);\r\n                    graphics.lineStyle(10, 0x0266e6, 1, 0.5);\r\n                    graphics.moveTo(wall.start.x * gridTileSize, wall.start.y * gridTileSize);\r\n                    graphics.lineTo(wall.end.x * gridTileSize, wall.end.y * gridTileSize);\r\n                    graphics.lineStyle();\r\n                    graphics.drawCircle(wall.start.x * gridTileSize, wall.start.y * gridTileSize, 5);\r\n                    graphics.drawCircle(wall.end.x * gridTileSize, wall.end.y * gridTileSize, 5);\r\n                    var half = 10 / 2;\r\n                    graphics.endFill();\r\n\r\n                    if (state.selectedObject === graphics.id) {\r\n                        graphics.tint = 0xffff33;\r\n                    }\r\n                    else {\r\n                        graphics.tint = 0xffffff;\r\n                    }\r\n                    graphics.hitArea = new PIXI.Polygon([\r\n                        wall.start.x * gridTileSize - half, wall.start.y * gridTileSize - half,\r\n                        wall.start.x * gridTileSize + half, wall.start.y * gridTileSize + half,\r\n                        wall.end.x * gridTileSize + half, wall.end.y * gridTileSize + half,\r\n                        wall.end.x * gridTileSize - half, wall.end.y * gridTileSize -half,\r\n                    ]);\r\n                }\r\n                else if (door) {\r\n                    graphics.zIndex = 3;\r\n                    graphics.clear();\r\n                    graphics.beginFill(0x002b56, 1);\r\n                    graphics.lineStyle(20, 0x002b56, 1, 0.5);\r\n                    graphics.moveTo(door.start.x * gridTileSize, door.start.y * gridTileSize);\r\n                    graphics.lineTo(door.end.x * gridTileSize, door.end.y * gridTileSize);\r\n                    graphics.lineStyle();\r\n                    var half = 20 / 2;\r\n                    graphics.endFill();\r\n\r\n                    if (state.selectedObject === graphics.id) {\r\n                        graphics.tint = 0xffff33;\r\n                    }\r\n                    else {\r\n                        graphics.tint = 0xffffff;\r\n                    }\r\n                    graphics.hitArea = new PIXI.Polygon([\r\n                        door.start.x * gridTileSize - half, door.start.y * gridTileSize - half,\r\n                        door.start.x * gridTileSize + half, door.start.y * gridTileSize + half,\r\n                        door.end.x * gridTileSize + half, door.end.y * gridTileSize + half,\r\n                        door.end.x * gridTileSize - half, door.end.y * gridTileSize -half,\r\n                    ]);\r\n                }\r\n                else {\r\n                    container.removeChild(graphics);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    drawMouseCursor(app, state, gridTileSize, graphics) {\r\n        let mousePoint = app.renderer.plugins.interaction.mouse.getLocalPosition(app.stage);\r\n        let snappedX, snappedY, width, height;\r\n        \r\n        if (state.selectedTool === TOOLTYPE.NEW_WALL) {\r\n            if (state.mouseDown) {\r\n                let startX = Math.round(state.mouseStartX / gridTileSize) * gridTileSize;\r\n                let startY = Math.round(state.mouseStartY / gridTileSize) * gridTileSize;\r\n                let endX = Math.round(mousePoint.x / gridTileSize) * gridTileSize;\r\n                let endY = Math.round(mousePoint.y / gridTileSize) * gridTileSize;\r\n                graphics.lineStyle(5, 0xfffd00);\r\n                graphics.moveTo(startX, startY);\r\n                graphics.lineTo(endX, endY);\r\n                graphics.lineStyle();\r\n                graphics.beginFill(0xfffd00);\r\n                graphics.drawCircle(startX, startY, 2.5);\r\n                graphics.drawCircle(endX, endY, 2.5);\r\n                graphics.endFill();\r\n            }\r\n            else {\r\n                // get nearest center point\r\n                let hoverX = Math.round(mousePoint.x / gridTileSize) * gridTileSize;\r\n                let hoverY = Math.round(mousePoint.y / gridTileSize) * gridTileSize;\r\n\r\n                graphics.lineStyle();\r\n                graphics.beginFill(0xfffd00);\r\n                graphics.drawCircle(hoverX, hoverY, 2.5);\r\n                graphics.endFill();\r\n            }\r\n        }\r\n        else if (state.selectedTool === TOOLTYPE.NEW_DOOR) {\r\n            if (!state.mouseDown) {\r\n                // try to snap to the nearest line:\r\n                // for each line, get the nearest point on the line\r\n                let minDistance = 25;\r\n                let snapPoint = null;\r\n                state.dungeon.walls.forEach(wall => {\r\n                    // try each point and get the shortest distance\r\n                    let scaledStart = {\r\n                        x: wall.start.x * gridTileSize,\r\n                        y: wall.start.y * gridTileSize\r\n                    };\r\n                    let scaledEnd = {\r\n                        x: wall.end.x * gridTileSize,\r\n                        y: wall.end.y * gridTileSize\r\n                    }\r\n                    let closestPoint = getClosestPointOnLine(mousePoint, scaledStart, scaledEnd);\r\n                    // if the shortest distance of one is < snapping threshold, snap to it\r\n                    let distance = lineLength(closestPoint, mousePoint);\r\n                    if (!minDistance || distance < minDistance) {\r\n                        minDistance = distance;\r\n                        snapPoint = closestPoint;\r\n                    }\r\n                });\r\n                if (snapPoint) {\r\n                    graphics.lineStyle();\r\n                    graphics.beginFill(0xfffd00);\r\n                    graphics.drawCircle(snapPoint.x, snapPoint.y, 2.5);\r\n                    graphics.endFill();\r\n                }\r\n            }\r\n            else {\r\n                let minDistance = 25;\r\n                let snapPoint = null;\r\n                let minWallId = null;\r\n                state.dungeon.walls.forEach(wall => {\r\n                    // try each point and get the shortest distance\r\n                    let scaledStart = {\r\n                        x: wall.start.x * gridTileSize,\r\n                        y: wall.start.y * gridTileSize\r\n                    };\r\n                    let scaledEnd = {\r\n                        x: wall.end.x * gridTileSize,\r\n                        y: wall.end.y * gridTileSize\r\n                    }\r\n                    let closestPoint = getClosestPointOnLine({\r\n                            x: state.mouseStartX,\r\n                            y: state.mouseStartY\r\n                        }, scaledStart, scaledEnd);\r\n                    // if the shortest distance of one is < snapping threshold, snap to it\r\n                    let distance = lineLength(closestPoint, {\r\n                        x: state.mouseStartX,\r\n                        y: state.mouseStartY\r\n                    });\r\n                    if (!minDistance || distance < minDistance) {\r\n                        minDistance = distance;\r\n                        snapPoint = closestPoint;\r\n                        minWallId = wall.id;\r\n                    }\r\n                });\r\n                // draw a line from the start point \r\n                let startX = snapPoint.x;\r\n                let startY = snapPoint.y;\r\n\r\n                let doorWall = state.dungeon.walls.find(wall => wall.id === minWallId);\r\n                let scaledStart = {\r\n                    x: doorWall.start.x * gridTileSize,\r\n                    y: doorWall.start.y * gridTileSize\r\n                };\r\n                let scaledEnd = {\r\n                    x: doorWall.end.x * gridTileSize,\r\n                    y: doorWall.end.y * gridTileSize\r\n                }\r\n                let endPoint = getClosestPointOnLine(mousePoint, scaledStart, scaledEnd);\r\n\r\n                let endX = endPoint.x;\r\n                let endY = endPoint.y;\r\n\r\n                graphics.lineStyle(5, 0xfffd00);\r\n                graphics.moveTo(startX, startY);\r\n                graphics.lineTo(endX, endY);\r\n                graphics.lineStyle();\r\n                graphics.beginFill(0xfffd00);\r\n                graphics.drawCircle(startX, startY, 2.5);\r\n                graphics.drawCircle(endX, endY, 2.5);\r\n                graphics.endFill();\r\n            }\r\n        }\r\n        else {\r\n            if (state.mouseDown) {\r\n                let startX = Math.min(state.mouseStartX, mousePoint.x);\r\n                let startY = Math.min(state.mouseStartY, mousePoint.y);\r\n                let endX = Math.max(state.mouseStartX, mousePoint.x);\r\n                let endY = Math.max(state.mouseStartY, mousePoint.y);\r\n                snappedX = Math.floor(startX / gridTileSize) * gridTileSize;\r\n                snappedY = Math.floor(startY / gridTileSize) * gridTileSize;\r\n                endX = Math.floor(endX / gridTileSize) * gridTileSize + gridTileSize;\r\n                endY = Math.floor(endY / gridTileSize) * gridTileSize + gridTileSize;\r\n                width = endX - snappedX;\r\n                height = endY - snappedY;\r\n            }\r\n            else {\r\n                // snap to nearest grid point\r\n                // for now for simplicity let's say top left\r\n                snappedX = Math.floor(mousePoint.x / gridTileSize) * gridTileSize;\r\n                snappedY = Math.floor(mousePoint.y / gridTileSize) * gridTileSize;\r\n                width = gridTileSize;\r\n                height = gridTileSize;\r\n            }\r\n            // draw a hover rect\r\n            graphics.beginFill(0, 0);\r\n            graphics.lineStyle(1, 0xfffd00);\r\n            graphics.drawRect(snappedX, snappedY, width, height);\r\n            graphics.endFill();\r\n        }\r\n    }\r\n\r\n    drawGrid(graphics, gridWidth, gridHeight, gridTileSize) {\r\n        graphics.lineStyle(1, 0x444444, 1, 0.5);\r\n        for (let i = 0; i < gridWidth; i++) {\r\n            graphics.moveTo(i * gridTileSize, 0);\r\n            graphics.lineTo(i * gridTileSize, (gridHeight - 1) * gridTileSize);\r\n        }\r\n        for (let j = 0; j < gridHeight; j++) {\r\n            graphics.moveTo(0, j * gridTileSize);\r\n            graphics.lineTo((gridWidth - 1) * gridTileSize, j * gridTileSize);\r\n        }\r\n    }\r\n}\r\n","export const GRID_TILE_SIZE = 70;","import { v4 as uuid } from 'uuid';\r\nimport { moveViewport, scroll } from \"../reducers/dungeonReducer\";\r\nimport { GRID_TILE_SIZE } from \"./constants\";\r\nimport { getClosestPointOnLine, lineLength } from \"./geometry\";\r\nimport TOOLTYPE from \"./toolTypes\";\r\n\r\nexport const handleMouseDown = (mouseEvent, store) => {\r\n    if (mouseEvent.buttons === 1) {\r\n        store.dispatch({ type: 'MOUSE_DOWN' });\r\n    }\r\n}\r\n\r\nexport const handleMouseUp = (mouseEvent, store) => {\r\n    let state = store.getState();\r\n    if (state.mouseDown) {\r\n        let mousePoint = state.editor.mouse.dungeonPosition;\r\n        store.dispatch({ type: 'MOUSE_UP' });\r\n        if (state.selectedTool === TOOLTYPE.NEW_SPACE) {\r\n            // TODO: Some terrible redux practices here I'm sure\r\n            // Yep, this should go into the reducer or dispatch a thunk that will have access\r\n            // to the full state.\r\n            let startX = Math.floor(Math.min(state.mouseStartX, mousePoint.x) / GRID_TILE_SIZE);\r\n            let startY = Math.floor(Math.min(state.mouseStartY, mousePoint.y) / GRID_TILE_SIZE);\r\n            let endX = Math.ceil(Math.max(state.mouseStartX, mousePoint.x) / GRID_TILE_SIZE);\r\n            let endY = Math.ceil(Math.max(state.mouseStartY, mousePoint.y) / GRID_TILE_SIZE);\r\n            store.dispatch({\r\n                type: 'ADD_SPACE',\r\n                newSpace: {\r\n                    id: uuid(),\r\n                    position: {\r\n                        x: startX,\r\n                        y: startY\r\n                    },\r\n                    size: {\r\n                        width: endX - startX,\r\n                        height: endY - startY\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        else if (state.selectedTool === TOOLTYPE.NEW_WALL) {\r\n            let startX = Math.round(state.mouseStartX / GRID_TILE_SIZE);\r\n            let startY = Math.round(state.mouseStartY / GRID_TILE_SIZE);\r\n            let endX = Math.round(mousePoint.x / GRID_TILE_SIZE);\r\n            let endY = Math.round(mousePoint.y / GRID_TILE_SIZE);\r\n            store.dispatch({\r\n                type: 'ADD_WALL',\r\n                newWall: {\r\n                    id: uuid(),\r\n                    start: {\r\n                        x: startX,\r\n                        y: startY\r\n                    },\r\n                    end: {\r\n                        x: endX,\r\n                        y: endY\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        else if (state.selectedTool === TOOLTYPE.NEW_DOOR) {\r\n            let minDistance = 25;\r\n            let snapPoint = null;\r\n            let minWallId = null;\r\n            state.dungeon.walls.forEach(wall => {\r\n                // try each point and get the shortest distance\r\n                let scaledStart = {\r\n                    x: wall.start.x * GRID_TILE_SIZE,\r\n                    y: wall.start.y * GRID_TILE_SIZE\r\n                };\r\n                let scaledEnd = {\r\n                    x: wall.end.x * GRID_TILE_SIZE,\r\n                    y: wall.end.y * GRID_TILE_SIZE\r\n                }\r\n                let closestPoint = getClosestPointOnLine({\r\n                        x: state.mouseStartX,\r\n                        y: state.mouseStartY\r\n                    }, scaledStart, scaledEnd);\r\n                // if the shortest distance of one is < snapping threshold, snap to it\r\n                let distance = lineLength(closestPoint, {\r\n                    x: state.mouseStartX,\r\n                    y: state.mouseStartY\r\n                });\r\n                if (!minDistance || distance < minDistance) {\r\n                    minDistance = distance;\r\n                    snapPoint = closestPoint;\r\n                    minWallId = wall.id;\r\n                }\r\n            });\r\n\r\n            let doorWall = state.dungeon.walls.find(wall => wall.id === minWallId);\r\n            let scaledStart = {\r\n                x: doorWall.start.x * GRID_TILE_SIZE,\r\n                y: doorWall.start.y * GRID_TILE_SIZE\r\n            };\r\n            let scaledEnd = {\r\n                x: doorWall.end.x * GRID_TILE_SIZE,\r\n                y: doorWall.end.y * GRID_TILE_SIZE\r\n            }\r\n            let endPoint = getClosestPointOnLine(mousePoint, scaledStart, scaledEnd);\r\n            store.dispatch({\r\n                type: 'ADD_DOOR',\r\n                newDoor: {\r\n                    id: uuid(),\r\n                    start: {\r\n                        x: snapPoint.x / GRID_TILE_SIZE,\r\n                        y: snapPoint.y / GRID_TILE_SIZE,\r\n                    },\r\n                    end: {\r\n                        x: endPoint.x / GRID_TILE_SIZE,\r\n                        y: endPoint.y / GRID_TILE_SIZE,\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport const handleMouseMove = (mouseEvent, store) => {\r\n    if (mouseEvent.buttons === 2) {\r\n        store.dispatch(moveViewport(mouseEvent.movementX, mouseEvent.movementY));\r\n    }\r\n}\r\n\r\nexport const handleWheelEvent = (wheelEvent, store) => {\r\n    store.dispatch(scroll(wheelEvent));\r\n}\r\n","import React from 'react'\r\n\r\nconst PositionEditor = ({ title, x, y, onUpdate }) =>\r\n    <div className=\"card bg-dark text-light border-secondary mb-3\">\r\n        <div className=\"card-header border-secondary\">\r\n            <h5> {title ? title : \"Position\"}</h5>\r\n        </div>\r\n        <div className=\"card-body\">\r\n            <div className=\"form-group\">\r\n                <label>\r\n                    X:\r\n                    <input\r\n                        className=\"form-control bg-secondary text-light\"\r\n                        type=\"number\"\r\n                        value={x}\r\n                        onChange={(changeEvent) => onUpdate(\r\n                            parseInt(changeEvent.target.value),\r\n                            y\r\n                        )}>\r\n                    </input>\r\n                </label>\r\n                <label>\r\n                    Y:\r\n                    <input\r\n                        className=\"form-control bg-secondary text-light\"\r\n                        type=\"number\"\r\n                        value={y}\r\n                        onChange={(changeEvent) => onUpdate(\r\n                            x,\r\n                            parseInt(changeEvent.target.value)\r\n                        )}>\r\n                    </input>\r\n                </label>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\nexport default PositionEditor","import React from 'react'\r\n\r\nconst SizeEditor = ({ title, width, height, onUpdate }) =>\r\n    <div className=\"card bg-dark text-light border-secondary mb-3\">\r\n        <div className=\"card-header border-secondary\">\r\n            <h5> {title ? title : \"Size\"}</h5>\r\n        </div>\r\n        <div className=\"card-body\">\r\n            <div className=\"form-group\">\r\n                <label>\r\n                    Width:\r\n                    <input\r\n                        className=\"form-control bg-secondary text-light\"\r\n                        type=\"number\"\r\n                        value={width}\r\n                        onChange={(changeEvent) => onUpdate(\r\n                            parseInt(changeEvent.target.value),\r\n                            height\r\n                        )}>\r\n                    </input>\r\n                </label>\r\n                <label>\r\n                    Height:\r\n                    <input\r\n                        className=\"form-control bg-secondary text-light\"\r\n                        type=\"number\"\r\n                        value={height}\r\n                        onChange={(changeEvent) => onUpdate(\r\n                            width,\r\n                            parseInt(changeEvent.target.value)\r\n                        )}>\r\n                    </input>\r\n                </label>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\nexport default SizeEditor","import React from \"react\"\r\nimport { connect } from 'react-redux'\r\nimport * as DungeonActions from '../reducers/dungeonReducer'\r\nimport PositionEditor from \"./PositionEditor\"\r\nimport SizeEditor from \"./SizeEditor\"\r\n\r\nlet StateEditor = ({ dispatch, selectedObjectId, selectedObject, dungeonSize, scrollPansViewport }) => {\r\n    if (selectedObjectId) {\r\n        return <React.Fragment>\r\n            {selectedObject.position &&\r\n                <PositionEditor\r\n                    x={selectedObject.position.x}\r\n                    y={selectedObject.position.y}\r\n                    onUpdate={(x, y) => dispatch(DungeonActions.setSelectedObjectPosition(x, y))} />\r\n            }\r\n            {selectedObject.size &&\r\n                <SizeEditor\r\n                    width={selectedObject.size.width}\r\n                    height={selectedObject.size.height}\r\n                    onUpdate={(width, height) => dispatch(DungeonActions.setSelectedObjectSize(width, height))} />\r\n            }\r\n            {selectedObject.start &&\r\n                <PositionEditor\r\n                    title=\"Start\"\r\n                    x={selectedObject.start.x}\r\n                    y={selectedObject.start.y}\r\n                    onUpdate={(x,y) => dispatch(DungeonActions.setSelectedObjectStart(x, y))} />\r\n            }\r\n            {selectedObject.end &&\r\n                <PositionEditor\r\n                    title=\"End\"\r\n                    x={selectedObject.end.x}\r\n                    y={selectedObject.end.y}\r\n                    onUpdate={(x,y) => dispatch(DungeonActions.setSelectedObjectEnd(x, y))} />\r\n            }\r\n            {selectedObjectId &&\r\n                <div className=\"card bg-dark text-light border-secondary mb-3\">\r\n                    <div className=\"card-header border-secondary\">\r\n                        <h5>Actions</h5>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                        <button\r\n                            className=\"btn btn-outline-danger\"\r\n                            onClick={() => dispatch(DungeonActions.deleteSelectedObject())}>\r\n                                Delete Object\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </React.Fragment>\r\n    }\r\n    else {\r\n        return <React.Fragment>\r\n            <div className=\"card bg-dark text-light border-secondary mb-3\">\r\n                <div className=\"card-header border-secondary\">\r\n                    <h5>Instructions</h5>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <p><i>Right click</i> to pan the view.</p>\r\n                    <p><i>Scroll</i> to zoom in and out.</p>\r\n                    <p><i>Left click and drag</i> to create new spaces with the New Space tool.</p>\r\n                    <p><i>Left click</i> to select spaces with the Select tool.</p>\r\n                    <p><i>Arrow keys</i> will move the currently selected space.</p>\r\n                    <p><i>Delete</i> will delete the currently selected space.</p>\r\n                </div>\r\n            </div>\r\n            <SizeEditor\r\n                title=\"Dungeon Size\"\r\n                width={dungeonSize.width}\r\n                height={dungeonSize.height}\r\n                onUpdate={(width, height) => dispatch(DungeonActions.setDungeonSize(width, height))} />\r\n            <div className=\"card bg-dark text-light border-secondary mb-3\">\r\n                <div className=\"card-header border-secondary\">\r\n                    <h5>Editor Options</h5>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <div>\r\n                        <label>\r\n                            <input type='checkbox' value={scrollPansViewport} onChange={(event) => dispatch(DungeonActions.setScrollMovesViewport(event.target.checked))}></input>\r\n                            Scroll to pan\r\n                        </label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    selectedObjectId: state.selectedObject,\r\n    selectedObject: state.dungeon.spaces.find(space => space.id === state.selectedObject) ||\r\n        state.dungeon.walls.find(wall => wall.id === state.selectedObject) ||\r\n        state.dungeon.doors.find(door => door.id === state.selectedObject),\r\n    dungeonSize: state.dungeon.size,\r\n    scrollPansViewport: state.scrollPansViewport\r\n})\r\n\r\nStateEditor = connect(mapStateToProps)(StateEditor)\r\n\r\nexport default StateEditor\r\n","import React from \"react\"\r\n\r\nconst ToolbarButton = ({toolName, toolId, selectedTool, onClick}) =>\r\n    <button\r\n        className={\"btn btn-secondary\" +\r\n            (selectedTool === toolId ? ' active' : '')}\r\n        onClick={() => onClick(toolId)}>\r\n            {toolName}\r\n    </button>\r\n\r\nexport default ToolbarButton;","import React from \"react\"\r\nimport { connect } from 'react-redux'\r\nimport { selectTool } from '../reducers/dungeonReducer'\r\nimport ToolbarButton from \"./ToolbarButton\"\r\nimport TOOLTYPE from \"../utils/toolTypes\"\r\n\r\nlet Toolbar = ({ dispatch, selectedTool }) => {\r\n    const dispatchSelectedTool = (toolId) => dispatch(selectTool(toolId))\r\n\r\n    return (\r\n        <div className=\"btn-group\" role=\"group\">\r\n            <ToolbarButton\r\n                toolName='Select'\r\n                toolId={TOOLTYPE.SELECT}\r\n                selectedTool={selectedTool}\r\n                onClick={dispatchSelectedTool} />\r\n            <ToolbarButton\r\n                toolName='New Space'\r\n                toolId={TOOLTYPE.NEW_SPACE}\r\n                selectedTool={selectedTool}\r\n                onClick={dispatchSelectedTool} />\r\n            <ToolbarButton\r\n                toolName='New Wall'\r\n                toolId={TOOLTYPE.NEW_WALL}\r\n                selectedTool={selectedTool}\r\n                onClick={dispatchSelectedTool} />\r\n            <ToolbarButton\r\n                toolName='New Door'\r\n                toolId={TOOLTYPE.NEW_DOOR}\r\n                selectedTool={selectedTool}\r\n                onClick={dispatchSelectedTool} />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    selectedTool: state.selectedTool\r\n})\r\n\r\nToolbar = connect(mapStateToProps)(Toolbar)\r\n\r\nexport default Toolbar\r\n","import React from 'react';\r\nimport DungeonEditor from \"./components/DungeonEditor.js\";\r\nimport StateEditor from './components/StateEditor';\r\nimport Toolbar from './components/Toolbar';\r\n\r\nfunction App() {\r\n  return (\r\n    <React.Fragment>\r\n      <nav className=\"navbar navbar-dark bg-secondary\">\r\n        <span className=\"navbar-brand\">\r\n          Pungeon\r\n        </span>\r\n      </nav>\r\n      <div className=\"px-5\">\r\n        <div className=\"py-2\">\r\n          <Toolbar />\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-9\">\r\n            <DungeonEditor />\r\n          </div>\r\n          <div className=\"col-md-3\">\r\n            <StateEditor />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './app/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from 'react-redux';\r\nimport store from './app/store.js'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}