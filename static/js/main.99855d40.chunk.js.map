{"version":3,"sources":["app/utils/createArrayWithUpdatedObject.js","app/reducers/dungeonReducer.js","app/store.js","app/utils/handleKeyboardEvent.js","app/components/DungeonEditor.js","app/components/PositionEditor.js","app/components/SizeEditor.js","app/components/StateEditor.js","app/components/Toolbar.js","app/App.js","serviceWorker.js","index.js"],"names":["createArrayWithUpdatedObject","array","id","update","map","object","objectCopy","selectTool","toolName","type","selectedTool","selectObject","objectId","moveSelectedObject","deltaX","deltaY","dungeonReducer","state","action","mouseDown","mouseStartX","x","mouseStartY","y","dungeon","size","width","height","scrollMovesViewport","arrayWithUpdatedObject","spaces","selectedObject","space","position","walls","wall","start","end","spaceArray","slice","newSpace","wallArray","newWall","selectedObjectId","newSpaceArray","filter","newWallArray","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","handleKeyboardEvent","keyboardEvent","key","dispatch","DungeonEditor","style","tabIndex","ref","element","canvasDiv","app","PIXI","backgroundColor","sharedLoader","sharedTicker","antialias","this","appendChild","view","resizeTo","resize","graphics","zIndex","Number","MAX_SAFE_INTEGER","stage","sortableChildren","addChild","setupInteractions","ticker","add","delta","getState","clear","drawSpaces","drawGrid","renderer","plugins","interaction","mouseOverRenderer","drawSelectedGridBox","gridTileSize","addEventListener","wheelEvent","getModifierState","scaleDelta","wheelDeltaY","newScale","Math","min","max","scale","set","localMousePoint","mouse","getLocalPosition","wheelDeltaX","preventDefault","event","onMouseDown","onMouseUp","pointerEvent","buttons","movementX","movementY","button","mousePoint","startX","floor","startY","endX","ceil","endY","uuid","round","container","stateSpaceMap","reduce","containerObjectIds","Set","children","child","Object","keys","forEach","spaceId","has","newChildGraphics","interactive","mouseup","stateWallMap","wallId","beginFill","drawRect","endFill","tint","lineStyle","moveTo","lineTo","drawCircle","hitArea","removeChild","snappedX","snappedY","hoverX","hoverY","gridWidth","gridHeight","i","j","React","Component","PositionEditor","title","onUpdate","className","value","onChange","changeEvent","parseInt","target","SizeEditor","StateEditor","dungeonSize","scrollPansViewport","Fragment","DungeonActions","onClick","checked","connect","Toolbar","role","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.99855d40.chunk.js","sourcesContent":["export const createArrayWithUpdatedObject = (array, id, update) => {\r\n    return array.map(object => {\r\n        if (object.id === id) {\r\n            let objectCopy = {...object};\r\n            update(objectCopy);\r\n            return objectCopy;\r\n        }\r\n        else {\r\n            return object;\r\n        }\r\n    })\r\n}\r\n","import { createArrayWithUpdatedObject } from '../utils/createArrayWithUpdatedObject'\r\n\r\nexport const selectTool = (toolName) => ({\r\n    type: 'SELECT_TOOL',\r\n    selectedTool: toolName\r\n})\r\n\r\nexport const selectObject = (objectId) => ({\r\n    type: 'SELECT_OBJECT',\r\n    objectId: objectId\r\n})\r\n\r\nexport const deleteSelectedObject = () => ({\r\n    type: 'DELETE_OBJECT'\r\n})\r\n\r\nexport const moveSelectedObject = (deltaX, deltaY) => ({\r\n    type: 'MOVE_SELECTED_OBJECT',\r\n    deltaX: deltaX,\r\n    deltaY: deltaY\r\n})\r\n\r\nexport const setSelectedObjectPosition = (x, y) => ({\r\n    type: 'SET_SELECTED_OBJECT_POSITION',\r\n    x: x,\r\n    y: y\r\n})\r\n\r\nexport const setSelectedObjectSize = (width, height) => ({\r\n    type: 'SET_SELECTED_OBJECT_SIZE',\r\n    width: width,\r\n    height: height\r\n})\r\n\r\nexport const setSelectedObjectStart = (x, y) => ({\r\n    type: 'SET_SELECTED_OBJECT_START',\r\n    x: x,\r\n    y: y\r\n})\r\n\r\nexport const setSelectedObjectEnd = (x, y) => ({\r\n    type: 'SET_SELECTED_OBJECT_END',\r\n    x: x,\r\n    y: y\r\n})\r\n\r\nexport const setDungeonSize = (width, height) => ({\r\n    type: 'SET_DUNGEON_SIZE',\r\n    width: width,\r\n    height: height\r\n})\r\n\r\nexport const setScrollMovesViewport = (scrollMovesViewport) => ({\r\n    type: 'SET_SCROLL_MOVES_VIEWPORT',\r\n    scrollMovesViewport: scrollMovesViewport\r\n})\r\n\r\nexport const dungeonReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case 'MOUSE_DOWN': {\r\n            return {\r\n                ...state,\r\n                mouseDown: true,\r\n                mouseStartX: action.x,\r\n                mouseStartY: action.y\r\n            };\r\n        }\r\n        case 'MOUSE_UP': {\r\n            return {\r\n                ...state,\r\n                mouseDown: false\r\n            };\r\n        }\r\n        case 'SET_DUNGEON_SIZE': {\r\n            return {\r\n                ...state,\r\n                dungeon: {\r\n                    ...state.dungeon,\r\n                    size: {\r\n                        width: action.width,\r\n                        height: action.height\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        case 'SET_SCROLL_MOVES_VIEWPORT': {\r\n            return {\r\n                ...state,\r\n                scrollMovesViewport: action.scrollMovesViewport\r\n            }\r\n        }\r\n        case 'MOVE_SELECTED_OBJECT': {\r\n            let arrayWithUpdatedObject = createArrayWithUpdatedObject(\r\n                state.dungeon.spaces,\r\n                state.selectedObject,\r\n                (space) => space.position = {\r\n                    x: space.position.x + action.deltaX,\r\n                    y: space.position.y + action.deltaY\r\n                });\r\n            return {\r\n                ...state,\r\n                dungeon: {\r\n                    ...state.dungeon,\r\n                    spaces: arrayWithUpdatedObject\r\n                }\r\n            };\r\n        }\r\n        case 'SET_SELECTED_OBJECT_POSITION': {\r\n            let arrayWithUpdatedObject = createArrayWithUpdatedObject(\r\n                state.dungeon.spaces,\r\n                state.selectedObject,\r\n                (space) => space.position = {\r\n                    x: action.x,\r\n                    y: action.y\r\n                });\r\n            return {\r\n                ...state,\r\n                dungeon: {\r\n                    ...state.dungeon,\r\n                    spaces: arrayWithUpdatedObject\r\n                }\r\n            };\r\n        }\r\n        case 'SET_SELECTED_OBJECT_SIZE': {\r\n            let arrayWithUpdatedObject = createArrayWithUpdatedObject(\r\n                state.dungeon.spaces,\r\n                state.selectedObject,\r\n                (space) => space.size = {\r\n                    width: action.width,\r\n                    height: action.height\r\n                });\r\n            return {\r\n                ...state,\r\n                dungeon: {\r\n                    ...state.dungeon,\r\n                    spaces: arrayWithUpdatedObject\r\n                }\r\n            };\r\n        }\r\n        case 'SET_SELECTED_OBJECT_START': {\r\n            let arrayWithUpdatedObject = createArrayWithUpdatedObject(\r\n                state.dungeon.walls,\r\n                state.selectedObject,\r\n                (wall) => wall.start = {\r\n                    x: action.x,\r\n                    y: action.y\r\n                });\r\n            return {\r\n                ...state,\r\n                dungeon: {\r\n                    ...state.dungeon,\r\n                    walls: arrayWithUpdatedObject\r\n                }\r\n            };\r\n        }\r\n        case 'SET_SELECTED_OBJECT_END': {\r\n            let arrayWithUpdatedObject = createArrayWithUpdatedObject(\r\n                state.dungeon.walls,\r\n                state.selectedObject,\r\n                (wall) => wall.end = {\r\n                    x: action.x,\r\n                    y: action.y\r\n                });\r\n            return {\r\n                ...state,\r\n                dungeon: {\r\n                    ...state.dungeon,\r\n                    walls: arrayWithUpdatedObject\r\n                }\r\n            };\r\n\r\n        }\r\n        case 'ADD_SPACE': {\r\n            let spaceArray = state.dungeon.spaces.slice();\r\n            spaceArray = [...spaceArray, action.newSpace];\r\n            return {\r\n                ...state,\r\n                dungeon: {\r\n                    ...state.dungeon,\r\n                    spaces: spaceArray\r\n                }\r\n            };\r\n        }\r\n        case 'ADD_WALL': {\r\n            let wallArray = state.dungeon.walls.slice();\r\n            wallArray = [...wallArray, action.newWall];\r\n            return {\r\n                ...state,\r\n                dungeon: {\r\n                    ...state.dungeon,\r\n                    walls: wallArray\r\n                }\r\n            };\r\n        }\r\n        case 'SELECT_TOOL': {\r\n            let selectedObject = state.selectedObject;\r\n            if (action.selectedTool !== 'Select') {\r\n                selectedObject = null;\r\n            }\r\n            return {\r\n                ...state,\r\n                selectedTool: action.selectedTool,\r\n                selectedObject: selectedObject\r\n            };\r\n        }\r\n        case 'SELECT_OBJECT': {\r\n            if (state.selectedTool === 'Select') {\r\n                return {\r\n                    ...state,\r\n                    selectedObject: action.objectId\r\n                };\r\n            }\r\n            else {\r\n                return state;\r\n            }\r\n        }\r\n        case 'DELETE_OBJECT': {\r\n            let selectedObjectId = state.selectedObject;\r\n            if (selectedObjectId) {\r\n                let newSpaceArray = state.dungeon.spaces.filter(space => space.id !== selectedObjectId);\r\n                let newWallArray = state.dungeon.walls.filter(wall => wall.id !== selectedObjectId);\r\n                return {\r\n                    ...state,\r\n                    selectedObject: null,\r\n                    dungeon: {\r\n                        ...state.dungeon,\r\n                        spaces: newSpaceArray,\r\n                        walls: newWallArray\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                return state;   \r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport default dungeonReducer\r\n","import { createStore } from 'redux';\r\nimport dungeonReducer from './reducers/dungeonReducer.js'\r\n\r\nconst store = createStore(dungeonReducer,\r\n  {\r\n    scrollMovesViewport: false,\r\n    mouseDown: false,\r\n    mouseStartX: 0,\r\n    mouseStartY: 0,\r\n    selectedTool: 'NewSpace',\r\n    dungeon: {\r\n      size: {\r\n        width: 28,\r\n        height: 32\r\n      },\r\n      spaces: [\r\n        {\r\n          id: \"01f998f7-3ad4-43c6-b498-3249ab470b05\",\r\n          position: {\r\n            x: 1,\r\n            y: 1\r\n          },\r\n          size: {\r\n            width: 5,\r\n            height: 5\r\n          }\r\n        },\r\n        {\r\n          id: \"79178d8c-3a3e-42ee-b1ec-00dc37a045fc\",\r\n          position: {\r\n            x: 6,\r\n            y: 4\r\n          },\r\n          size: {\r\n            width: 7,\r\n            height: 9\r\n          }\r\n        },\r\n        {\r\n          id: \"6ce25fdc-9fd4-46c0-a924-74f5f9174193\",\r\n          position: {\r\n            x: 15,\r\n            y: 15\r\n          },\r\n          size: {\r\n            width: 6,\r\n            height: 7\r\n          }\r\n        },\r\n        {\r\n          id: \"e211fbd3-a817-47a5-bb47-481ba330e46d\",\r\n          position: {\r\n            x: 21,\r\n            y: 19\r\n          },\r\n          size: {\r\n            width: 4,\r\n            height: 9\r\n          }\r\n        }\r\n      ],\r\n      walls: [\r\n        {\r\n          id: '4abe3330-4a95-4c29-b71d-8ea768da1ee6',\r\n          start: {\r\n            x: 1,\r\n            y: 1\r\n          },\r\n          end: {\r\n            x: 1,\r\n            y: 6\r\n          }\r\n        },\r\n        {\r\n          id: 'ad3c6f9b-f3f0-4025-8073-daacc68483ec',\r\n          start: {\r\n            x: 6,\r\n            y: 6\r\n          },\r\n          end: {\r\n            x: 1,\r\n            y: 6\r\n          }\r\n        },\r\n        {\r\n          id: '68365136-d12f-4e54-8f7b-4cbd3ab424eb',\r\n          start: {\r\n            x: 6,\r\n            y: 13\r\n          },\r\n          end: {\r\n            x: 6,\r\n            y: 6\r\n          }\r\n        },\r\n        {\r\n          id: '3d6435e5-8d67-4405-87d0-72c4e8f4dfaa',\r\n          start: {\r\n            x: 13,\r\n            y: 13\r\n          },\r\n          end: {\r\n            x: 6,\r\n            y: 13\r\n          }\r\n        },\r\n        {\r\n          id: '384ac23d-f5fc-4cd1-9ad7-b528b62fa732',\r\n          start: {\r\n            x: 13,\r\n            y: 4\r\n          },\r\n          end: {\r\n            x: 13,\r\n            y: 13\r\n          }\r\n        },\r\n        {\r\n          id: '161e3147-ca11-4dc4-a26b-ca8295c5abaa',\r\n          start: {\r\n            x: 6,\r\n            y: 4\r\n          },\r\n          end: {\r\n            x: 13,\r\n            y: 4\r\n          }\r\n        },\r\n        {\r\n          id: 'e8092d63-e7e2-4cd2-8c80-8cd6030980f1',\r\n          start: {\r\n            x: 6,\r\n            y: 1\r\n          },\r\n          end: {\r\n            x: 6,\r\n            y: 4\r\n          }\r\n        },\r\n        {\r\n          id: '71ed94d3-177b-428b-a8e5-fe25eb79a4ea',\r\n          start: {\r\n            x: 1,\r\n            y: 1\r\n          },\r\n          end: {\r\n            x: 6,\r\n            y: 1\r\n          }\r\n        },\r\n        {\r\n          id: '0ea47a6f-af9f-4ec6-a7f3-881332643e2a',\r\n          start: {\r\n            x: 15,\r\n            y: 15\r\n          },\r\n          end: {\r\n            x: 15,\r\n            y: 22\r\n          }\r\n        },\r\n        {\r\n          id: 'f7ec5579-7966-4ba4-b8ee-fdaad6372842',\r\n          start: {\r\n            x: 21,\r\n            y: 22\r\n          },\r\n          end: {\r\n            x: 15,\r\n            y: 22\r\n          }\r\n        },\r\n        {\r\n          id: '1e587060-37cc-4b87-a88a-852c8055cabb',\r\n          start: {\r\n            x: 21,\r\n            y: 15\r\n          },\r\n          end: {\r\n            x: 15,\r\n            y: 15\r\n          }\r\n        },\r\n        {\r\n          id: '79e1f702-6d60-435b-ba1e-584077a7d479',\r\n          start: {\r\n            x: 21,\r\n            y: 19\r\n          },\r\n          end: {\r\n            x: 21,\r\n            y: 15\r\n          }\r\n        },\r\n        {\r\n          id: '231997d1-1453-4573-a2c0-0571428d7ac9',\r\n          start: {\r\n            x: 25,\r\n            y: 19\r\n          },\r\n          end: {\r\n            x: 21,\r\n            y: 19\r\n          }\r\n        },\r\n        {\r\n          id: '85033454-8145-4d36-9b58-5e891f731f25',\r\n          start: {\r\n            x: 21,\r\n            y: 22\r\n          },\r\n          end: {\r\n            x: 21,\r\n            y: 28\r\n          }\r\n        },\r\n        {\r\n          id: '2c6b4f88-4163-4847-ba05-c4ce865dfd87',\r\n          start: {\r\n            x: 21,\r\n            y: 28\r\n          },\r\n          end: {\r\n            x: 25,\r\n            y: 28\r\n          }\r\n        },\r\n        {\r\n          id: '57013c9b-609f-4e59-ae1a-fd94a49bac80',\r\n          start: {\r\n            x: 25,\r\n            y: 19\r\n          },\r\n          end: {\r\n            x: 25,\r\n            y: 28\r\n          }\r\n        }\r\n      ]\r\n    }\r\n  },\r\n  typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n\r\nexport default store;","import { deleteSelectedObject, moveSelectedObject } from \"../reducers/dungeonReducer\"\r\n\r\nconst handleKeyboardEvent = (keyboardEvent, store) => {\r\n    switch (keyboardEvent.key) {\r\n        case 'Delete':\r\n            return store.dispatch(deleteSelectedObject());\r\n        case 'ArrowLeft':\r\n            return store.dispatch(moveSelectedObject(-1, 0));\r\n        case 'ArrowRight':\r\n            return store.dispatch(moveSelectedObject(1, 0));\r\n        case 'ArrowDown':\r\n            return store.dispatch(moveSelectedObject(0, 1));\r\n        case 'ArrowUp':\r\n            return store.dispatch(moveSelectedObject(0, -1));\r\n        default:\r\n            return;\r\n    }\r\n}\r\n\r\nexport default handleKeyboardEvent","import React from 'react'\r\nimport * as PIXI from 'pixi.js'\r\nimport store from '../store.js'\r\nimport { v4 as uuid } from 'uuid'\r\nimport { selectObject } from \"../reducers/dungeonReducer\";\r\nimport handleKeyboardEvent from '../utils/handleKeyboardEvent.js';\r\n\r\nexport default class DungeonEditor extends React.Component {\r\n    render() {\r\n        return <div\r\n            style={{ height: \"85vh\" }}\r\n            tabIndex={-1}\r\n            ref={(element) => this.canvasDiv = element}>\r\n        </div>\r\n    }\r\n\r\n    componentDidMount() {\r\n        const app = new PIXI.Application({\r\n            backgroundColor: 0x5f5f5f,\r\n            sharedLoader: true,\r\n            sharedTicker: true,\r\n            antialias: true\r\n        });\r\n        this.app = app;\r\n        this.canvasDiv.appendChild(app.view);\r\n        this.app.resizeTo = this.canvasDiv;\r\n        this.app.resize();\r\n\r\n        let graphics = new PIXI.Graphics();\r\n        graphics.zIndex = Number.MAX_SAFE_INTEGER;\r\n        app.stage.sortableChildren = true;\r\n        app.stage.addChild(graphics);\r\n\r\n        let gridTileSize = 70.0;\r\n        this.setupInteractions(app, gridTileSize)\r\n\r\n        app.ticker.add((delta) => {\r\n            var state = store.getState();\r\n\r\n            graphics.clear();\r\n\r\n            this.drawSpaces(app.stage, state, gridTileSize);\r\n            this.drawGrid(graphics, state.dungeon.size.width, state.dungeon.size.height, gridTileSize);\r\n\r\n            if (app.renderer.plugins.interaction.mouseOverRenderer) {\r\n                this.drawSelectedGridBox(app, state, gridTileSize, graphics);\r\n            }\r\n        });\r\n    }\r\n\r\n    setupInteractions(app, gridTileSize) {\r\n        this.canvasDiv.addEventListener(\"wheel\", (wheelEvent) => {\r\n            let state = store.getState();\r\n            if (!state.scrollMovesViewport || wheelEvent.getModifierState(\"Control\")) {\r\n                let scaleDelta = 0.1\r\n                if (wheelEvent.wheelDeltaY < 0) {\r\n                    scaleDelta *= -1\r\n                }\r\n                let newScale = Math.min(Math.max(app.stage.scale.x + scaleDelta, 0.1), 2)\r\n                if (newScale !== app.stage.scale.x) {\r\n                    app.stage.scale.set(newScale)\r\n                    let localMousePoint = app.renderer.plugins.interaction.mouse.getLocalPosition(app.stage)\r\n                    app.stage.position.x -= (localMousePoint.x) * scaleDelta\r\n                    app.stage.position.y -= (localMousePoint.y) * scaleDelta\r\n                }\r\n            }\r\n            else {\r\n                let scaleDelta = 0.5;\r\n                app.stage.position.x += wheelEvent.wheelDeltaX * scaleDelta;\r\n                app.stage.position.y += wheelEvent.wheelDeltaY * scaleDelta;\r\n            }\r\n            wheelEvent.preventDefault();\r\n        });\r\n        this.canvasDiv.addEventListener('contextmenu', (event) => {\r\n            event.preventDefault()\r\n        });\r\n        this.canvasDiv.addEventListener('pointerdown', () => {\r\n            this.onMouseDown(app)\r\n        });\r\n        this.canvasDiv.addEventListener('pointerup', () => {\r\n            this.onMouseUp(app, gridTileSize)\r\n        });\r\n        this.canvasDiv.addEventListener('pointermove', (pointerEvent) => {\r\n            if (pointerEvent.buttons === 2) {\r\n                app.stage.position.x += pointerEvent.movementX\r\n                app.stage.position.y += pointerEvent.movementY\r\n            }\r\n        });\r\n        this.canvasDiv.addEventListener('keydown', (event) => {\r\n            handleKeyboardEvent(event, store);\r\n        });\r\n    }\r\n\r\n    onMouseDown(app) {\r\n        if (app.renderer.plugins.interaction.mouse.button === 0) {\r\n            let mousePoint = app.renderer.plugins.interaction.mouse.getLocalPosition(app.stage);\r\n            store.dispatch({ type: 'MOUSE_DOWN', x: mousePoint.x, y: mousePoint.y });\r\n        }\r\n    }\r\n\r\n    onMouseUp(app, gridTileSize) {\r\n        if (app.renderer.plugins.interaction.mouse.button === 0) {\r\n            let mousePoint = app.renderer.plugins.interaction.mouse.getLocalPosition(app.stage);\r\n            store.dispatch({ type: 'MOUSE_UP' });\r\n            let state = store.getState();\r\n            if (state.selectedTool === 'NewSpace') {\r\n                // TODO: Some terrible redux practices here I'm sure\r\n                // Yep, this should go into the reducer or dispatch a thunk that will have access\r\n                // to the full state.\r\n                let startX = Math.floor(Math.min(state.mouseStartX, mousePoint.x) / gridTileSize);\r\n                let startY = Math.floor(Math.min(state.mouseStartY, mousePoint.y) / gridTileSize);\r\n                let endX = Math.ceil(Math.max(state.mouseStartX, mousePoint.x) / gridTileSize);\r\n                let endY = Math.ceil(Math.max(state.mouseStartY, mousePoint.y) / gridTileSize);\r\n                store.dispatch({\r\n                    type: 'ADD_SPACE',\r\n                    newSpace: {\r\n                        id: uuid(),\r\n                        position: {\r\n                            x: startX,\r\n                            y: startY\r\n                        },\r\n                        size: {\r\n                            width: endX - startX,\r\n                            height: endY - startY\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            else if (state.selectedTool === 'NewWall') {\r\n                let startX = Math.round(state.mouseStartX / gridTileSize);\r\n                let startY = Math.round(state.mouseStartY / gridTileSize);\r\n                let endX = Math.round(mousePoint.x / gridTileSize);\r\n                let endY = Math.round(mousePoint.y / gridTileSize);\r\n                store.dispatch({\r\n                    type: 'ADD_WALL',\r\n                    newWall: {\r\n                        id: uuid(),\r\n                        start: {\r\n                            x: startX,\r\n                            y: startY\r\n                        },\r\n                        end: {\r\n                            x: endX,\r\n                            y: endY\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    drawSpaces(container, state, gridTileSize) {\r\n        let stateSpaceMap = state.dungeon.spaces.reduce((map, space) => {\r\n            map[space.id] = space;\r\n            return map;\r\n        }, {});\r\n        // Add any spaces that are in state but not in pixi\r\n        let containerObjectIds = new Set(container.children.map(child => child.id));\r\n        let stateSpaceIds = Object.keys(stateSpaceMap);\r\n        stateSpaceIds.forEach(spaceId => {\r\n            if (!containerObjectIds.has(spaceId)) {\r\n                let newChildGraphics = new PIXI.Graphics();\r\n                newChildGraphics.id = spaceId;\r\n                newChildGraphics.interactive = true;\r\n                newChildGraphics.mouseup = function () {\r\n                    store.dispatch(selectObject(this.id));\r\n                };\r\n                container.addChild(newChildGraphics);\r\n            }\r\n        });\r\n        let stateWallMap = state.dungeon.walls.reduce((map, wall) => {\r\n            map[wall.id] = wall;\r\n            return map;\r\n        }, {});\r\n        let stateWallIds = Object.keys(stateWallMap);\r\n        stateWallIds.forEach(wallId => {\r\n            if (!containerObjectIds.has(wallId)) {\r\n                let newChildGraphics = new PIXI.Graphics();\r\n                newChildGraphics.id = wallId;\r\n                newChildGraphics.interactive = true;\r\n                newChildGraphics.mouseup = function () {\r\n                    store.dispatch(selectObject(this.id));\r\n                };\r\n                container.addChild(newChildGraphics);\r\n            }\r\n        });\r\n\r\n        // Sync all child graphics with state\r\n        container.children.forEach(graphics => {\r\n            if (graphics.id) {\r\n                let space = stateSpaceMap[graphics.id];\r\n                let wall = stateWallMap[graphics.id];\r\n                if (space) {\r\n                    graphics.clear();\r\n                    graphics.beginFill(0xd6d5d5);\r\n                    graphics.drawRect(\r\n                        space.position.x * gridTileSize,\r\n                        space.position.y * gridTileSize,\r\n                        space.size.width * gridTileSize,\r\n                        space.size.height * gridTileSize);\r\n                    graphics.endFill();\r\n\r\n                    if (state.selectedObject === graphics.id) {\r\n                        graphics.tint = 0xffffcc;\r\n                    }\r\n                    else {\r\n                        graphics.tint = 0xffffff;\r\n                    }\r\n                }\r\n                else if (wall) {\r\n                    graphics.clear();\r\n                    graphics.beginFill(0x0266e6, 1);\r\n                    graphics.lineStyle(10, 0x0266e6, 1, 0.5);\r\n                    graphics.moveTo(wall.start.x * gridTileSize, wall.start.y * gridTileSize);\r\n                    graphics.lineTo(wall.end.x * gridTileSize, wall.end.y * gridTileSize);\r\n                    graphics.lineStyle();\r\n                    graphics.drawCircle(wall.start.x * gridTileSize, wall.start.y * gridTileSize, 5);\r\n                    graphics.drawCircle(wall.end.x * gridTileSize, wall.end.y * gridTileSize, 5);\r\n                    var half = 10 / 2;\r\n                    graphics.endFill();\r\n\r\n                    if (state.selectedObject === graphics.id) {\r\n                        graphics.tint = 0xffff33;\r\n                    }\r\n                    else {\r\n                        graphics.tint = 0xffffff;\r\n                    }\r\n                    graphics.hitArea = new PIXI.Polygon([\r\n                        wall.start.x * gridTileSize - half, wall.start.y * gridTileSize - half,\r\n                        wall.start.x * gridTileSize + half, wall.start.y * gridTileSize + half,\r\n                        wall.end.x * gridTileSize + half, wall.end.y * gridTileSize + half,\r\n                        wall.end.x * gridTileSize - half, wall.end.y * gridTileSize -half,\r\n                    ]);\r\n                }\r\n                else {\r\n                    container.removeChild(graphics);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    drawSelectedGridBox(app, state, gridTileSize, graphics) {\r\n        let mousePoint = app.renderer.plugins.interaction.mouse.getLocalPosition(app.stage);\r\n        let snappedX, snappedY, width, height;\r\n        if (state.selectedTool !== 'NewWall') {\r\n            if (state.mouseDown) {\r\n                let startX = Math.min(state.mouseStartX, mousePoint.x);\r\n                let startY = Math.min(state.mouseStartY, mousePoint.y);\r\n                let endX = Math.max(state.mouseStartX, mousePoint.x);\r\n                let endY = Math.max(state.mouseStartY, mousePoint.y);\r\n                snappedX = Math.floor(startX / gridTileSize) * gridTileSize;\r\n                snappedY = Math.floor(startY / gridTileSize) * gridTileSize;\r\n                endX = Math.floor(endX / gridTileSize) * gridTileSize + gridTileSize;\r\n                endY = Math.floor(endY / gridTileSize) * gridTileSize + gridTileSize;\r\n                width = endX - snappedX;\r\n                height = endY - snappedY;\r\n            }\r\n            else {\r\n                // snap to nearest grid point\r\n                // for now for simplicity let's say top left\r\n                snappedX = Math.floor(mousePoint.x / gridTileSize) * gridTileSize;\r\n                snappedY = Math.floor(mousePoint.y / gridTileSize) * gridTileSize;\r\n                width = gridTileSize;\r\n                height = gridTileSize;\r\n            }\r\n            // draw a hover rect\r\n            graphics.beginFill(0, 0);\r\n            graphics.lineStyle(1, 0xfffd00);\r\n            graphics.drawRect(snappedX, snappedY, width, height);\r\n            graphics.endFill();\r\n        }\r\n        else {\r\n            if (state.mouseDown) {\r\n                let startX = Math.round(state.mouseStartX / gridTileSize) * gridTileSize;\r\n                let startY = Math.round(state.mouseStartY / gridTileSize) * gridTileSize;\r\n                let endX = Math.round(mousePoint.x / gridTileSize) * gridTileSize;\r\n                let endY = Math.round(mousePoint.y / gridTileSize) * gridTileSize;\r\n                graphics.lineStyle(5, 0xfffd00);\r\n                graphics.moveTo(startX, startY);\r\n                graphics.lineTo(endX, endY);\r\n                graphics.lineStyle();\r\n                graphics.beginFill(0xfffd00);\r\n                graphics.drawCircle(startX, startY, 2.5);\r\n                graphics.drawCircle(endX, endY, 2.5);\r\n                graphics.endFill();\r\n            }\r\n            else {\r\n                // get nearest center point\r\n                let hoverX = Math.round(mousePoint.x / gridTileSize) * gridTileSize;\r\n                let hoverY = Math.round(mousePoint.y / gridTileSize) * gridTileSize;\r\n\r\n                graphics.lineStyle();\r\n                graphics.beginFill(0xfffd00);\r\n                graphics.drawCircle(hoverX, hoverY, 2.5);\r\n                graphics.endFill();\r\n            }\r\n        }\r\n    }\r\n\r\n    drawGrid(graphics, gridWidth, gridHeight, gridTileSize) {\r\n        graphics.lineStyle(1, 0x444444, 1, 0.5);\r\n        for (let i = 0; i < gridWidth; i++) {\r\n            graphics.moveTo(i * gridTileSize, 0);\r\n            graphics.lineTo(i * gridTileSize, (gridHeight - 1) * gridTileSize);\r\n        }\r\n        for (let j = 0; j < gridHeight; j++) {\r\n            graphics.moveTo(0, j * gridTileSize);\r\n            graphics.lineTo((gridWidth - 1) * gridTileSize, j * gridTileSize);\r\n        }\r\n    }\r\n}\r\n","import React from 'react'\r\n\r\nconst PositionEditor = ({ title, x, y, onUpdate }) =>\r\n    <div className=\"card bg-dark text-light border-secondary mb-3\">\r\n        <div className=\"card-header border-secondary\">\r\n            <h5> {title ? title : \"Position\"}</h5>\r\n        </div>\r\n        <div className=\"card-body\">\r\n            <div className=\"form-group\">\r\n                <label>\r\n                    X:\r\n                    <input\r\n                        className=\"form-control bg-secondary text-light\"\r\n                        type=\"number\"\r\n                        value={x}\r\n                        onChange={(changeEvent) => onUpdate(\r\n                            parseInt(changeEvent.target.value),\r\n                            y\r\n                        )}>\r\n                    </input>\r\n                </label>\r\n                <label>\r\n                    Y:\r\n                    <input\r\n                        className=\"form-control bg-secondary text-light\"\r\n                        type=\"number\"\r\n                        value={y}\r\n                        onChange={(changeEvent) => onUpdate(\r\n                            x,\r\n                            parseInt(changeEvent.target.value)\r\n                        )}>\r\n                    </input>\r\n                </label>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\nexport default PositionEditor","import React from 'react'\r\n\r\nconst SizeEditor = ({ title, width, height, onUpdate }) =>\r\n    <div className=\"card bg-dark text-light border-secondary mb-3\">\r\n        <div className=\"card-header border-secondary\">\r\n            <h5> {title ? title : \"Size\"}</h5>\r\n        </div>\r\n        <div className=\"card-body\">\r\n            <div className=\"form-group\">\r\n                <label>\r\n                    Width:\r\n                    <input\r\n                        className=\"form-control bg-secondary text-light\"\r\n                        type=\"number\"\r\n                        value={width}\r\n                        onChange={(changeEvent) => onUpdate(\r\n                            parseInt(changeEvent.target.value),\r\n                            height\r\n                        )}>\r\n                    </input>\r\n                </label>\r\n                <label>\r\n                    Height:\r\n                    <input\r\n                        className=\"form-control bg-secondary text-light\"\r\n                        type=\"number\"\r\n                        value={height}\r\n                        onChange={(changeEvent) => onUpdate(\r\n                            width,\r\n                            parseInt(changeEvent.target.value)\r\n                        )}>\r\n                    </input>\r\n                </label>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\nexport default SizeEditor","import React from \"react\"\r\nimport { connect } from 'react-redux'\r\nimport * as DungeonActions from '../reducers/dungeonReducer'\r\nimport PositionEditor from \"./PositionEditor\"\r\nimport SizeEditor from \"./SizeEditor\"\r\n\r\nlet StateEditor = ({ dispatch, selectedObjectId, selectedObject, dungeonSize, scrollPansViewport }) => {\r\n    if (selectedObjectId) {\r\n        return <React.Fragment>\r\n            {selectedObject.position &&\r\n                <PositionEditor\r\n                    x={selectedObject.position.x}\r\n                    y={selectedObject.position.y}\r\n                    onUpdate={(x, y) => dispatch(DungeonActions.setSelectedObjectPosition(x, y))} />\r\n            }\r\n            {selectedObject.size &&\r\n                <SizeEditor\r\n                    width={selectedObject.size.width}\r\n                    height={selectedObject.size.height}\r\n                    onUpdate={(width, height) => dispatch(DungeonActions.setSelectedObjectSize(width, height))} />\r\n            }\r\n            {selectedObject.start &&\r\n                <PositionEditor\r\n                    title=\"Start\"\r\n                    x={selectedObject.start.x}\r\n                    y={selectedObject.start.y}\r\n                    onUpdate={(x,y) => dispatch(DungeonActions.setSelectedObjectStart(x, y))} />\r\n            }\r\n            {selectedObject.end &&\r\n                <PositionEditor\r\n                    title=\"End\"\r\n                    x={selectedObject.end.x}\r\n                    y={selectedObject.end.y}\r\n                    onUpdate={(x,y) => dispatch(DungeonActions.setSelectedObjectEnd(x, y))} />\r\n            }\r\n            {selectedObjectId &&\r\n                <div className=\"card bg-dark text-light border-secondary mb-3\">\r\n                    <div className=\"card-header border-secondary\">\r\n                        <h5>Actions</h5>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                        <button\r\n                            className=\"btn btn-outline-danger\"\r\n                            onClick={() => dispatch(DungeonActions.deleteSelectedObject())}>\r\n                                Delete Object\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </React.Fragment>\r\n    }\r\n    else {\r\n        return <React.Fragment>\r\n            <div className=\"card bg-dark text-light border-secondary mb-3\">\r\n                <div className=\"card-header border-secondary\">\r\n                    <h5>Instructions</h5>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <p><i>Right click</i> to pan the view.</p>\r\n                    <p><i>Scroll</i> to zoom in and out.</p>\r\n                    <p><i>Left click and drag</i> to create new spaces with the New Space tool.</p>\r\n                    <p><i>Left click</i> to select spaces with the Select tool.</p>\r\n                    <p><i>Arrow keys</i> will move the currently selected space.</p>\r\n                    <p><i>Delete</i> will delete the currently selected space.</p>\r\n                </div>\r\n            </div>\r\n            <SizeEditor\r\n                title=\"Dungeon Size\"\r\n                width={dungeonSize.width}\r\n                height={dungeonSize.height}\r\n                onUpdate={(width, height) => dispatch(DungeonActions.setDungeonSize(width, height))} />\r\n            <div className=\"card bg-dark text-light border-secondary mb-3\">\r\n                <div className=\"card-header border-secondary\">\r\n                    <h5>Editor Options</h5>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <div>\r\n                        <label>\r\n                            <input type='checkbox' value={scrollPansViewport} onChange={(event) => dispatch(DungeonActions.setScrollMovesViewport(event.target.checked))}></input>\r\n                            Scroll to pan\r\n                        </label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    selectedObjectId: state.selectedObject,\r\n    selectedObject: state.dungeon.spaces.filter(space => space.id === state.selectedObject)[0] ||\r\n        state.dungeon.walls.filter(wall => wall.id === state.selectedObject)[0],\r\n    dungeonSize: state.dungeon.size,\r\n    scrollPansViewport: state.scrollPansViewport\r\n})\r\n\r\nStateEditor = connect(mapStateToProps)(StateEditor)\r\n\r\nexport default StateEditor\r\n","import React from \"react\"\r\nimport { connect } from 'react-redux'\r\nimport { selectTool } from '../reducers/dungeonReducer'\r\n\r\nlet Toolbar = ({ dispatch, selectedTool }) => {\r\n    return (\r\n        <div className=\"btn-group\" role=\"group\">\r\n            <button\r\n                className={\"btn btn-secondary\" +\r\n                    (selectedTool === 'Select' ? ' active' : '')}\r\n                onClick={() => dispatch(selectTool('Select'))}>\r\n                    Select\r\n            </button>\r\n            <button\r\n                className={\"btn btn-secondary\" +\r\n                    (selectedTool === 'NewSpace' ? ' active' : '')}\r\n                onClick={() => dispatch(selectTool('NewSpace'))}>\r\n                    New Space\r\n            </button>\r\n            <button\r\n                className={\"btn btn-secondary\" +\r\n                    (selectedTool === 'NewWall' ? ' active' : '')}\r\n                onClick={() => dispatch(selectTool('NewWall'))}>\r\n                    New Wall\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    selectedTool: state.selectedTool\r\n})\r\n\r\nToolbar = connect(mapStateToProps)(Toolbar)\r\n\r\nexport default Toolbar\r\n","import React from 'react';\r\nimport DungeonEditor from \"./components/DungeonEditor.js\";\r\nimport StateEditor from './components/StateEditor';\r\nimport Toolbar from './components/Toolbar';\r\n\r\nfunction App() {\r\n  return (\r\n    <React.Fragment>\r\n      <nav className=\"navbar navbar-dark bg-secondary\">\r\n        <span className=\"navbar-brand\">\r\n          Pungeon\r\n        </span>\r\n      </nav>\r\n      <div className=\"px-5\">\r\n        <div className=\"py-2\">\r\n          <Toolbar />\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-9\">\r\n            <DungeonEditor />\r\n          </div>\r\n          <div className=\"col-md-3\">\r\n            <StateEditor />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './app/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from 'react-redux';\r\nimport store from './app/store.js'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}