{"version":3,"sources":["app/utils/constants.js","app/dungeonObjects/BaseDungeonObjectOperations.js","app/dungeonObjects/DoorOperations.js","app/dungeonObjects/LabelOperations.js","app/dungeonObjects/WallOperations.js","app/dungeonObjects/SpaceOperations.js","app/dungeonObjects/TokenOperations.js","app/dungeonObjects/DungeonObjectOperations.js","app/reducers/editorActionType.js","app/reducers/editorActions.js","app/utils/createArrayWithUpdatedObject.js","app/reducers/dungeonActionType.js","app/reducers/dungeonReducer.js","app/tools/toolType.js","app/utils/copyObject.js","app/reducers/editorReducer.js","app/reducers/index.js","app/store.js","app/reducers/dungeonActions.js","app/utils/geometry.js","app/tools/AddDoorTool.js","app/tools/AddLabelTool.js","app/tools/AddSpacePolygonTool.js","app/tools/AddSpaceRectangleTool.js","app/tools/AddTokenTool.js","app/tools/AddWallTool.js","app/tools/SelectTool.js","app/tools/ToolRouter.js","app/utils/download.js","app/rendering/DungeonRenderer.js","app/rendering/GridRenderer.js","app/utils/clipboard.js","app/utils/keyboardEventHandlers.js","app/utils/mouseEventHandlers.js","app/components/DungeonEditor.js","app/components/StateEditorCard.js","app/components/PositionEditor.js","app/components/SizeEditor.js","app/components/StateEditor.js","app/components/ToolbarButton.js","app/components/Toolbar.js","app/App.js","serviceWorker.js","index.js"],"names":["GRID_TILE_SIZE","createDungeonObject","dungeonObjectType","id","uuid","type","BaseDungeonObjectOperations","object","x","y","PIXI","displayObject","isObjectSelected","DOOR_TYPE","DoorOperations","start","end","graphics","door","objectIsSelected","zIndex","clear","beginFill","lineStyle","moveTo","lineTo","half","endFill","tint","hitArea","Math","min","LABEL_TYPE","LabelOperations","position","label","children","length","labelText","style","fontFamily","fontSize","addChild","fill","text","set","WALL_TYPE","createWall","startX","startY","endX","endY","WallOperations","wall","line","cap","ROUND","this","createWallHitArea","startPoint","endPoint","rise","run","slope","inverseSlope","abs","getOffsetAlongSlope","xOffset","yOffset","polygonXOffset","polygonYOffset","distanceTravelledAlongSlope","slopeAngle","atan","cos","sin","SPACE_TYPE","createSpace","points","size","width","height","SpaceOperations","forEach","point","space","map","drawRect","firstPoint","index","TOKEN_TYPE","createToken","textureUrl","angle","TokenOperations","token","sprite","objectSelectionGraphics","texture","from","process","getChildAt","drawShape","getLocalBounds","removeChildAt","objectOperations","renderObject","dungeonObject","filter","operation","createRenderObject","translate","EDITOR_ACTION_TYPE","PNG_EXPORTED","EXPORT_TO_PNG_CLICKED","CLEAR_ONGOING_SPACE_POLYGON","ADD_ONGOING_SPACE_POLYGON","MOVE_VIEWPORT","SET_CURRENT_MOUSE_POSITION","SCROLL_EVENT","MOUSE_DOWN","MOUSE_UP","SET_SCROLL_MOVES_VIEWPORT","SELECT_TOOL","SELECT_OBJECT","SELECT_OBJECTS","KEY_PRESSED","KEY_RELEASED","COPY_OBJECTS","selectObject","objectId","shouldMultiSelect","selectObjects","objectIds","setCurrentMousePosition","createArrayWithUpdatedObject","array","update","createArrayWithUpdatedObjects","ids","includes","objectCopy","DUNGEON_ACTION_TYPE","NEW_DUNGEON","SET_DUNGEON_SIZE","MOVE_SELECTED_OBJECT","SET_SELECTED_OBJECT_TEXTURE_PATH","SET_SELECTED_OBJECT_ANGLE","SET_SELECTED_OBJECT_LABEL","SET_SELECTED_OBJECT_POSITION","SET_SELECTED_OBJECT_SIZE","SET_SELECTED_OBJECT_START","SET_SELECTED_OBJECT_END","ADD_OBJECTS","DELETE_OBJECTS","SET_DUNGEON_NAME","defaultDungeonState","name","objects","dungeonReducer","state","action","arrayWithUpdatedObject","selectedObjectIds","deltaX","deltaY","selectedObject","texturePath","objectArray","slice","newObjects","newObjectArray","TOOL_TYPE","SELECT","NEW_WALL","NEW_SPACE_RECTANGLE","NEW_SPACE_POLYGON","NEW_DOOR","NEW_LABEL","NEW_TOKEN","copyObject","JSON","parse","stringify","defaultEditorState","scrollMovesViewport","selectedTool","scale","mouse","mouseDown","startPosition","currentPosition","keyboard","heldKeys","clipboard","combineReducers","editor","newHeldKeys","key","exportToPngClicked","ongoingSpacePolygon","newPolygonArray","holdingCtrl","scaleDelta","scrollY","minimumScale","maximumScale","newScale","max","scrollX","newSelectedObjectIds","Set","dungeon","store","createStore","reducer","window","__REDUX_DEVTOOLS_EXTENSION__","addObjects","addObject","deleteObjects","moveObjects","setSelectedObjectAngle","square","lineLength","v","w","sqrt","getClosestPointOnLine","p","a","b","atob","len","dot","t","AddDoorTool","getState","mousePoint","minDistance","snapPoint","minWallId","scaledStart","scaledEnd","closestPoint","distance","doorWall","find","dispatch","drawCircle","AddLabelTool","dungeonSpaceX","dungeonSpaceY","AddSpacePolygonTool","round","pointArray","addOngoingSpacePolygonPoint","hoverX","hoverY","AddSpaceRectangleTool","floor","ceil","snappedX","snappedY","AddTokenTool","tokenTextureUrl","AddWallTool","pastDragThreshold","endPosition","getTranslation","createRectangle","startedMove","STATES","SelectTool","alpha","dungeonRenderObject","removeChildren","Number","MAX_SAFE_INTEGER","app","shouldAddToSelection","mousePointInGlobalCoordinates","stage","worldTransform","apply","hitObject","renderer","plugins","interaction","hitTest","hitObjectIsAlreadySelected","currentStates","lastHitId","isDragging","boundingRectangle","objectIdsToSelect","child","rect1","rect2","num1","num2","doRectanglesIntersect","push","resetGraphicsAfterMoving","initializeGraphicsForMoving","renderObjectCopy","toolMap","download","data","filename","downloadLink","document","createElement","href","target","click","render","gridRenderer","handlePanning","fractionalScale","handleScaling","drawDungeonObjects","renderGrid","exportTexture","generateTexture","normalizedDungeonName","toLowerCase","replace","extract","base64","exportImage","handleExporting","mouseOverRenderer","renderTool","ToolRouter","mousePosition","getLocalPosition","container","objectIdMap","reduce","containerObjectIds","Object","keys","has","newChildGraphics","DungeonObjectOperations","interactive","cursor","removeChild","GridRenderer","gridWidth","gridHeight","i","j","pasteFromClipboard","copiedObjects","firstPositionOfSelection","clipboardTranslation","copyToClipboard","handleKeyPressed","keyboardEvent","repeat","preventDefault","ctrlKey","handleKeyReleased","handleMouseDown","mouseEvent","buttons","onMouseDown","handleMouseUp","onMouseUp","handleMouseMove","mouseMovementScaledByDisplayScaling","movementX","devicePixelRatio","movementY","handleWheelEvent","wheelEvent","getModifierState","DungeonEditor","tabIndex","ref","element","canvasDiv","backgroundColor","sharedLoader","sharedTicker","antialias","appendChild","view","resizeTo","resize","sortableChildren","setupInteractions","ticker","add","renderDungeon","addEventListener","MouseEventHandler","event","pointerEvent","React","Component","StateEditorCard","title","className","PositionEditor","onUpdate","value","onChange","changeEvent","parseInt","SizeEditor","StateEditor","selectedObjectId","dungeonName","dungeonSize","scrollPansViewport","Fragment","undefined","DungeonActions","step","direction","onClick","checked","connect","ToolbarButton","toolName","toolId","Toolbar","dispatchSelectedTool","role","App","Boolean","location","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.0f51e657.chunk.js","sourcesContent":["export const GRID_TILE_SIZE = 70;\n","import * as PIXI from 'pixi.js';\nimport { v4 as uuid } from 'uuid';\n\n/**\n * @typedef {{ type: string, id: string }} BaseDungeonObject\n */\n\n/**\n * @returns {BaseDungeonObject}\n */\nexport const createDungeonObject = (dungeonObjectType) => ({\n    id: uuid(),\n    type: dungeonObjectType\n})\n\nexport class BaseDungeonObjectOperations {\n    get dungeonObjectType() { return null; }\n\n    /**\n     * @param {BaseDungeonObject} object\n     * @param {number} x\n     * @param {number} y\n     */\n    translate(object, x, y) {}\n\n    createRenderObject() {\n        return new PIXI.Graphics();\n    }\n\n    /**\n     * @param {PIXI.DisplayObject} displayObject\n     * @param {BaseDungeonObject} object\n     * @param {boolean} objectIsSelected\n     */\n    renderObject(displayObject, object, isObjectSelected) {}\n\n    /**\n     * @param {import('./DungeonObjectOperations').DungeonObject} object\n     */\n    position(object) {}\n}\n","import * as PIXI from 'pixi.js';\nimport { GRID_TILE_SIZE } from \"../utils/constants\";\nimport { createDungeonObject, BaseDungeonObjectOperations } from './BaseDungeonObjectOperations';\n\n/**\n * @typedef {{\n *  start: {x: number, y: number},\n *  end: {x: number, y: number}\n * } & import('./BaseDungeonObjectOperations').BaseDungeonObject} Door\n */\n\nexport const DOOR_TYPE = \"door\"\n\n/**\n * @returns {Door}\n */\nexport const createDoor = (startX, startY, endX, endY) => {\n    return {\n        ...createDungeonObject(DOOR_TYPE),\n        start: {\n            x: startX,\n            y: startY\n        },\n        end: {\n            x: endX,\n            y: endY\n        }\n    }\n}\n\nexport class DoorOperations extends BaseDungeonObjectOperations {\n    get dungeonObjectType(){ return DOOR_TYPE; }\n\n    translate(object, x, y) {\n        object.start.x += x;\n        object.start.y += y;\n        object.end.x += x;\n        object.end.y += y;\n    }\n\n    renderObject(graphics, door, objectIsSelected) {\n        graphics.zIndex = 3;\n        graphics.clear();\n        graphics.beginFill(0x002b56, 1);\n        graphics.lineStyle(20, 0x002b56, 1, 0.5);\n        graphics.moveTo(door.start.x * GRID_TILE_SIZE, door.start.y * GRID_TILE_SIZE);\n        graphics.lineTo(door.end.x * GRID_TILE_SIZE, door.end.y * GRID_TILE_SIZE);\n        graphics.lineStyle();\n        let half = 20 / 2;\n        graphics.endFill();\n\n        if (objectIsSelected) {\n            graphics.tint = 0xffff33;\n        }\n        else {\n            graphics.tint = 0xffffff;\n        }\n        graphics.hitArea = new PIXI.Polygon([\n            door.start.x * GRID_TILE_SIZE - half, door.start.y * GRID_TILE_SIZE - half,\n            door.start.x * GRID_TILE_SIZE + half, door.start.y * GRID_TILE_SIZE + half,\n            door.end.x * GRID_TILE_SIZE + half, door.end.y * GRID_TILE_SIZE + half,\n            door.end.x * GRID_TILE_SIZE - half, door.end.y * GRID_TILE_SIZE - half,\n        ]);\n    }\n\n    /**\n     * @param {Door} door\n     */\n    position(door) {\n        return {\n            x: Math.min(door.start.x, door.end.x),\n            y: Math.min(door.start.y, door.end.y)\n        };\n    }\n}\n","import * as PIXI from 'pixi.js';\nimport { GRID_TILE_SIZE } from '../utils/constants';\nimport { createDungeonObject, BaseDungeonObjectOperations } from './BaseDungeonObjectOperations';\n\n/**\n * @typedef {{\n *  position: {x: number, y: number},\n *  label: string\n * } & import('./BaseDungeonObjectOperations').BaseDungeonObject} Label\n */\n\nexport const LABEL_TYPE = \"label\"\n\n/**\n * @returns {Label}\n */\nexport const createLabel = (x, y, label) => {\n    return {\n        ...createDungeonObject(LABEL_TYPE),\n        label,\n        position: {\n            x,\n            y\n        }\n    }\n}\n\nexport class LabelOperations extends BaseDungeonObjectOperations {\n    get dungeonObjectType(){ return LABEL_TYPE; }\n\n    translate(object, x, y) {\n        object.position.x += x;\n        object.position.y += y;\n    }\n\n    position(label) {\n        return label.position;\n    }\n\n    renderObject(graphics, label, objectIsSelected) {\n        graphics.zIndex = 4;\n        graphics.clear();\n        if (graphics.children.length === 0) {\n            let labelText = new PIXI.Text(label.label);\n            labelText.style.fontFamily = 'Serif';\n            labelText.style.fontSize = 36;\n            graphics.addChild(labelText);\n        }\n\n        let labelText = graphics.children[0];\n\n        if (objectIsSelected) {\n            labelText.style.fill = 0xffff33;\n        }\n        else {\n            labelText.style.fill = 0x000000;\n        }\n\n        labelText.text = label.label;\n        labelText.position.set(\n            label.position.x * GRID_TILE_SIZE,\n            label.position.y * GRID_TILE_SIZE);\n    }\n}\n","import * as PIXI from 'pixi.js';\nimport { GRID_TILE_SIZE } from \"../utils/constants\";\nimport { createDungeonObject, BaseDungeonObjectOperations } from './BaseDungeonObjectOperations';\n\n/**\n * @typedef {{\n *  start: {x: number, y: number},\n *  end: {x: number, y: number}\n * } & import('./BaseDungeonObjectOperations').BaseDungeonObject} Wall\n */\n\n export const WALL_TYPE = \"wall\"\n\n/**\n * @returns {Wall}\n */\nexport const createWall = (startX, startY, endX, endY) => {\n    return {\n        ...createDungeonObject(WALL_TYPE),\n        start: {\n            x: startX,\n            y: startY\n        },\n        end: {\n            x: endX,\n            y: endY\n        }\n    }\n}\n\nexport class WallOperations extends BaseDungeonObjectOperations {\n    get dungeonObjectType(){ return WALL_TYPE; }\n\n    translate(object, x, y) {\n        object.start.x += x;\n        object.start.y += y;\n        object.end.x += x;\n        object.end.y += y;\n    }\n\n    /**\n     * @param {Wall} wall\n     */\n    position(wall) {\n        return {\n            x: Math.min(wall.start.x, wall.end.x),\n            y: Math.min(wall.start.y, wall.end.y)\n        };\n    }\n\n    /**\n     *\n     * @param {PIXI.Graphics} graphics\n     * @param {Wall} wall\n     * @param {boolean} objectIsSelected\n     */\n    renderObject(graphics, wall, objectIsSelected) {\n        graphics.zIndex = 2;\n        graphics.clear();\n        graphics.lineStyle(10, 0x0266e6, 1, 0.5);\n        graphics.line.cap = PIXI.LINE_CAP.ROUND;\n        graphics.moveTo(wall.start.x * GRID_TILE_SIZE, wall.start.y * GRID_TILE_SIZE);\n        graphics.lineTo(wall.end.x * GRID_TILE_SIZE, wall.end.y * GRID_TILE_SIZE);\n        graphics.lineStyle();\n        let half = 10 / 2;\n        graphics.endFill();\n\n        if (objectIsSelected) {\n            graphics.tint = 0xffff33;\n        }\n        else {\n            graphics.tint = 0xffffff;\n        }\n        graphics.hitArea = this.createWallHitArea(wall, half);\n    }\n\n    createWallHitArea(wall, half) {\n        if (wall.start.x === wall.end.x && wall.start.y === wall.end.y) {\n            return new PIXI.Circle(\n                wall.start.x * GRID_TILE_SIZE,\n                wall.start.y * GRID_TILE_SIZE,\n                half);\n        }\n        else {\n            let startPoint = wall.start.x <= wall.end.x ? wall.start : wall.end;\n            let endPoint = wall.start.x > wall.end.x ? wall.start : wall.end;\n\n            let rise = endPoint.y - startPoint.y;\n            let run = endPoint.x - startPoint.x;\n            let slope = rise / run;\n            let inverseSlope = -1 / slope;\n\n            if (slope === 0 || inverseSlope === 0) {\n                return new PIXI.Rectangle(\n                    startPoint.x * GRID_TILE_SIZE - half,\n                    Math.min(startPoint.y, endPoint.y) * GRID_TILE_SIZE - half,\n                    run * GRID_TILE_SIZE + half * 2,\n                    Math.abs(rise) * GRID_TILE_SIZE + half * 2\n                )\n            }\n\n            let { xOffset, yOffset} = this.getOffsetAlongSlope(slope, half);\n            let { xOffset: polygonXOffset, yOffset: polygonYOffset } = this.getOffsetAlongSlope(inverseSlope, half);\n\n            return new PIXI.Polygon([\n                startPoint.x * GRID_TILE_SIZE - xOffset - polygonXOffset, startPoint.y * GRID_TILE_SIZE - yOffset - polygonYOffset,\n                startPoint.x * GRID_TILE_SIZE - xOffset + polygonXOffset, startPoint.y * GRID_TILE_SIZE - yOffset + polygonYOffset,\n                endPoint.x   * GRID_TILE_SIZE + xOffset + polygonXOffset, endPoint.y   * GRID_TILE_SIZE + yOffset + polygonYOffset,\n                endPoint.x   * GRID_TILE_SIZE + xOffset - polygonXOffset, endPoint.y   * GRID_TILE_SIZE + yOffset - polygonYOffset,\n            ]);\n        }\n    }\n\n    getOffsetAlongSlope(slope, distanceTravelledAlongSlope) {\n        let slopeAngle = Math.atan(slope);\n        let xOffset = Math.cos(slopeAngle) * distanceTravelledAlongSlope;\n        let yOffset = Math.sin(slopeAngle) * distanceTravelledAlongSlope;\n        return {\n            xOffset: xOffset,\n            yOffset: yOffset\n        };\n    }\n}\n","import { GRID_TILE_SIZE } from \"../utils/constants\";\nimport { createDungeonObject, BaseDungeonObjectOperations } from './BaseDungeonObjectOperations';\n\n/**\n * @typedef {{\n *  position: {x: number, y: number},\n *  size: {width: number, height: number }\n * } & import(\"./BaseDungeonObjectOperations\").BaseDungeonObject} RectangularSpace\n * @typedef {{\n *  points: {x: number, y: number}[]\n * } & import(\"./BaseDungeonObjectOperations\").BaseDungeonObject} PolygonalSpace\n * @typedef {RectangularSpace | PolygonalSpace} Space\n */\n\nexport const SPACE_TYPE = \"space\"\n\n/**\n * @returns {Space}\n */\nexport const createSpace = ({points, startX, startY, endX, endY}) => {\n    if (points) {\n        return {\n            ...createDungeonObject(SPACE_TYPE),\n            points\n        }\n    }\n    else {\n        return {\n            ...createDungeonObject(SPACE_TYPE),\n            position: {\n                x: startX,\n                y: startY\n            },\n            size: {\n                width: endX - startX,\n                height: endY - startY\n            }\n        }\n    }\n}\n\nexport class SpaceOperations extends BaseDungeonObjectOperations {\n    get dungeonObjectType() { return SPACE_TYPE; }\n\n    translate(object, x, y) {\n        if (object.position) {\n            object.position.x += x;\n            object.position.y += y;\n        }\n        else {\n            object.points.forEach(point => {\n                point.x += x;\n                point.y += y;\n            });\n        }\n    }\n\n    /**\n     * @param {Space} space\n     */\n    position(space) {\n        if (space.position) {\n            return space.position;\n        }\n        else {\n            return {\n                x: Math.min(...space.points.map(point => point.x)),\n                y: Math.min(...space.points.map(point => point.y))\n            }\n        }\n    }\n\n    renderObject(graphics, space, objectIsSelected) {\n        graphics.clear();\n        graphics.beginFill(0xd6d5d5);\n        if (space.position && space.size) {\n            graphics.drawRect(\n                space.position.x * GRID_TILE_SIZE,\n                space.position.y * GRID_TILE_SIZE,\n                space.size.width * GRID_TILE_SIZE,\n                space.size.height * GRID_TILE_SIZE);\n            graphics.endFill();\n        }\n        else {\n            let firstPoint = space.points[0];\n            graphics.moveTo(firstPoint.x * GRID_TILE_SIZE, firstPoint.y * GRID_TILE_SIZE);\n            for (let index = 0; index < space.points.length; index++) {\n                const point = space.points[index];\n                graphics.lineTo(point.x * GRID_TILE_SIZE, point.y * GRID_TILE_SIZE);\n            }\n            graphics.endFill();\n        }\n\n        if (objectIsSelected) {\n            graphics.tint = 0xffffcc;\n        }\n        else {\n            graphics.tint = 0xffffff;\n        }\n    }\n}\n","import * as PIXI from 'pixi.js'\nimport { GRID_TILE_SIZE } from '../utils/constants';\nimport { BaseDungeonObjectOperations, createDungeonObject } from './BaseDungeonObjectOperations';\n\n/**\n * @typedef {{\n *  textureUrl: string,\n *  position: {x: number, y: number},\n *  size: {width: number, height: number}\n *  angle: number\n * } & import('./BaseDungeonObjectOperations').BaseDungeonObject} Token\n */\n\nexport const TOKEN_TYPE = \"token\"\n\n/**\n * @returns {Token}\n */\nexport const createToken = (textureUrl, x, y, width, height, angle) => {\n    return {\n        ...createDungeonObject(TOKEN_TYPE),\n        textureUrl,\n        position: {\n            x,\n            y\n        },\n        size: {\n            width,\n            height\n        },\n        angle\n    };\n}\n\nexport class TokenOperations extends BaseDungeonObjectOperations {\n    get dungeonObjectType(){ return TOKEN_TYPE; }\n\n    translate(object, x, y) {\n        object.position.x += x;\n        object.position.y += y;\n    }\n\n    createRenderObject() {\n        return new PIXI.Sprite();\n    }\n\n    position(token) {\n        return token.position;\n    }\n\n    renderObject(sprite, token, objectIsSelected) {\n        sprite.zIndex = 4;\n        sprite.texture = PIXI.Texture.from(process.env.PUBLIC_URL + token.textureUrl);\n        sprite.x = token.position.x * GRID_TILE_SIZE;\n        sprite.y = token.position.y * GRID_TILE_SIZE;\n        sprite.width = token.size.width * GRID_TILE_SIZE;\n        sprite.height = token.size.height * GRID_TILE_SIZE;\n        sprite.angle = token.angle;\n\n        if (objectIsSelected) {\n            let objectSelectionGraphics;\n            if (sprite.children.length === 0) {\n                objectSelectionGraphics = new PIXI.Graphics();\n                sprite.addChild(objectSelectionGraphics);\n            } else {\n                objectSelectionGraphics = sprite.getChildAt(0);\n            }\n            objectSelectionGraphics.clear();\n            objectSelectionGraphics.lineStyle(5, 0xfffd00);\n            objectSelectionGraphics.drawShape(sprite.getLocalBounds());\n        }\n        else {\n            if (sprite.children.length > 0) {\n                sprite.removeChildAt(0);\n            }\n        }\n    }\n}\n","import { DoorOperations } from \"./DoorOperations\";\nimport { LabelOperations } from \"./LabelOperations\";\nimport { WallOperations } from \"./WallOperations\";\nimport { SpaceOperations } from \"./SpaceOperations\";\nimport { TokenOperations } from \"./TokenOperations\";\n\n/**\n * @typedef { import(\"./DoorOperations\").Door\n * | import(\"./LabelOperations\").Label\n * | import(\"./WallOperations\").Wall\n * | import(\"./SpaceOperations\").Space\n * | import(\"./TokenOperations\").Token} DungeonObject\n */\n\nconst objectOperations = [\n    new DoorOperations(),\n    new LabelOperations(),\n    new WallOperations(),\n    new SpaceOperations(),\n    new TokenOperations()\n]\n\nexport const renderObject = (graphics, dungeonObject, objectIsSelected) =>\n    objectOperations.filter(operation => operation.dungeonObjectType === dungeonObject.type).map(operation => operation.renderObject(graphics, dungeonObject, objectIsSelected))\n\nexport const createRenderObject = (dungeonObject) => {\n    return objectOperations.filter(operation => operation.dungeonObjectType === dungeonObject.type).map(operation => operation.createRenderObject())[0]\n}\n\nexport const translate = (dungeonObject, x, y) =>\n    objectOperations.filter(operation => operation.dungeonObjectType === dungeonObject.type).map(operation => operation.translate(dungeonObject, x, y))\n\nexport const position = (dungeonObject) =>\n    objectOperations.filter(operation => operation.dungeonObjectType === dungeonObject.type).map(operation => operation.position(dungeonObject))[0]\n","const EDITOR_ACTION_TYPE = {\n    PNG_EXPORTED: 'PNG_EXPORTED',\n    EXPORT_TO_PNG_CLICKED: 'EXPORT_TO_PNG_CLICKED',\n    CLEAR_ONGOING_SPACE_POLYGON: 'CLEAR_ONGOING_SPACE_POLYGON',\n    ADD_ONGOING_SPACE_POLYGON: 'ADD_ONGOING_SPACE_POLYGON',\n    MOVE_VIEWPORT: 'MOVE_VIEWPORT',\n    SET_CURRENT_MOUSE_POSITION: 'SET_CURRENT_MOUSE_POSITION',\n    SCROLL_EVENT: 'SCROLL_EVENT',\n    MOUSE_DOWN: 'MOUSE_DOWN',\n    MOUSE_UP: 'MOUSE_UP',\n    SET_SCROLL_MOVES_VIEWPORT: 'SET_SCROLL_MOVES_VIEWPORT',\n    SELECT_TOOL: 'SELECT_TOOL',\n    SELECT_OBJECT: 'SELECT_OBJECT',\n    SELECT_OBJECTS: 'SELECT_OBJECTS',\n    KEY_PRESSED: 'KEY_PRESSED',\n    KEY_RELEASED: 'KEY_RELEASED',\n    COPY_OBJECTS: 'COPY_OBJECTS'\n}\n\nexport default EDITOR_ACTION_TYPE;\n","import EDITOR_ACTION_TYPE from \"./editorActionType\"\n\nexport const keyPressed = (key) => ({\n    type: EDITOR_ACTION_TYPE.KEY_PRESSED,\n    key\n})\n\nexport const keyReleased = (key) => ({\n    type: EDITOR_ACTION_TYPE.KEY_RELEASED,\n    key\n})\n\nexport const mouseDown = () => ({\n    type: EDITOR_ACTION_TYPE.MOUSE_DOWN\n})\n\nexport const mouseUp = () => ({\n    type: EDITOR_ACTION_TYPE.MOUSE_UP\n})\n\nexport const pngExported = () => ({\n    type: EDITOR_ACTION_TYPE.PNG_EXPORTED\n})\n\nexport const exportToPngClicked = () => ({\n    type: EDITOR_ACTION_TYPE.EXPORT_TO_PNG_CLICKED\n})\n\nexport const addObjectsToClipboard = (objects) => ({\n    type: EDITOR_ACTION_TYPE.COPY_OBJECTS,\n    objects: objects\n})\n\nexport const clearOngoingSpacePolygonPoint = () => ({\n    type: EDITOR_ACTION_TYPE.CLEAR_ONGOING_SPACE_POLYGON\n})\n\nexport const addOngoingSpacePolygonPoint = (x, y) => ({\n    type: EDITOR_ACTION_TYPE.ADD_ONGOING_SPACE_POLYGON,\n    position: {\n        x: x,\n        y: y\n    }\n})\n\nexport const scroll = (deltaX, deltaY, holdingCtrl) => ({\n    type: EDITOR_ACTION_TYPE.SCROLL_EVENT,\n    scrollX: deltaX,\n    scrollY: deltaY,\n    holdingCtrl: holdingCtrl\n})\n\nexport const moveViewport = (deltaX, deltaY) => ({\n    type: EDITOR_ACTION_TYPE.MOVE_VIEWPORT,\n    deltaX: deltaX,\n    deltaY: deltaY\n})\n\nexport const selectTool = (toolName) => ({\n    type: EDITOR_ACTION_TYPE.SELECT_TOOL,\n    selectedTool: toolName\n})\n\nexport const selectObject = (objectId, shouldMultiSelect) => ({\n    type: EDITOR_ACTION_TYPE.SELECT_OBJECT,\n    objectId,\n    shouldMultiSelect\n})\n\nexport const selectObjects = (objectIds, shouldMultiSelect) => ({\n    type: EDITOR_ACTION_TYPE.SELECT_OBJECTS,\n    objectIds,\n    shouldMultiSelect\n})\n\nexport const setScrollMovesViewport = (scrollMovesViewport) => ({\n    type: EDITOR_ACTION_TYPE.SET_SCROLL_MOVES_VIEWPORT,\n    scrollMovesViewport: scrollMovesViewport\n})\n\nexport const setCurrentMousePosition = (x, y) => ({\n    type: EDITOR_ACTION_TYPE.SET_CURRENT_MOUSE_POSITION,\n    x: x,\n    y: y\n})\n","export const createArrayWithUpdatedObject = (array, id, update) => {\n    return createArrayWithUpdatedObjects(array, [id], update);\n}\n\n/**\n * @param {import(\"../dungeonObjects/DungeonObject\").BaseDungeonObject[]} array\n * @param {string[]} ids\n * @param {function(object: import(\"../dungeonObjects/DungeonObject\").BaseDungeonObject) : void} update\n */\nexport const createArrayWithUpdatedObjects = (array, ids, update) => {\n    return array.map(object => {\n        if (ids.includes(object.id)) {\n            let objectCopy = {...object};\n            update(objectCopy);\n            return objectCopy;\n        }\n        else {\n            return object;\n        }\n    })\n}\n","const DUNGEON_ACTION_TYPE = {\n    NEW_DUNGEON: 'NEW_DUNGEON',\n    SET_DUNGEON_SIZE: 'SET_DUNGEON_SIZE',\n    MOVE_SELECTED_OBJECT: 'MOVE_SELECTED_OBJECT',\n    SET_SELECTED_OBJECT_TEXTURE_PATH: 'SET_SELECTED_OBJECT_TEXTURE_PATH',\n    SET_SELECTED_OBJECT_ANGLE: 'SET_SELECTED_OBJECT_ANGLE',\n    SET_SELECTED_OBJECT_LABEL: 'SET_SELECTED_OBJECT_LABEL',\n    SET_SELECTED_OBJECT_POSITION: 'SET_SELECTED_OBJECT_POSITION',\n    SET_SELECTED_OBJECT_SIZE: 'SET_SELECTED_OBJECT_SIZE',\n    SET_SELECTED_OBJECT_START: 'SET_SELECTED_OBJECT_START',\n    SET_SELECTED_OBJECT_END: 'SET_SELECTED_OBJECT_END',\n    ADD_OBJECTS: 'ADD_OBJECTS',\n    DELETE_OBJECTS: 'DELETE_OBJECTS',\n    SET_DUNGEON_NAME: 'SET_DUNGEON_NAME'\n}\n\nexport default DUNGEON_ACTION_TYPE;\n","import { translate } from '../dungeonObjects/DungeonObjectOperations';\nimport { createSpace } from '../dungeonObjects/SpaceOperations';\nimport { createToken } from '../dungeonObjects/TokenOperations';\nimport { createWall } from '../dungeonObjects/WallOperations';\nimport { createArrayWithUpdatedObject, createArrayWithUpdatedObjects } from '../utils/createArrayWithUpdatedObject'\nimport DUNGEON_ACTION_TYPE from './dungeonActionType'\n/**\n * @typedef {defaultDungeonState} DungeonState\n */\nconst defaultDungeonState = {\n    name: \"Dungeon\",\n    size: {\n        width: 28,\n        height: 32\n    },\n    /** @type {import('../dungeonObjects/DungeonObjectOperations').DungeonObject[]} */\n    objects: [\n        createToken(\"/assets/stairs.png\", 2, 4, 1, 2, 0),\n        createSpace({startX: 1, startY: 1, endX: 6, endY: 6}),\n        createSpace({startX: 6, startY: 4, endX: 13, endY: 13}),\n        createSpace({startX: 15, startY: 15, endX: 21, endY: 22}),\n        createSpace({startX: 21, startY: 19, endX: 25, endY: 28}),\n        createWall(1, 1, 1, 6),\n        createWall(6, 6, 1, 6),\n        createWall(6, 13, 6, 6),\n        createWall(13, 13, 6, 13),\n        createWall(13, 4, 13, 13),\n        createWall(6, 4, 13, 4),\n        createWall(6, 1, 6, 4),\n        createWall(1, 1, 6, 1),\n        createWall(15, 15, 15, 22),\n        createWall(21, 22, 15, 22),\n        createWall(21, 15, 15, 15),\n        createWall(21, 19, 21, 15),\n        createWall(25, 19, 21, 19),\n        createWall(21, 22, 21, 28),\n        createWall(21, 28, 25, 28),\n        createWall(25, 19, 25, 28)\n    ]\n  }\n\nexport const dungeonReducer = (state = defaultDungeonState, action) => {\n    switch (action.type) {\n        case DUNGEON_ACTION_TYPE.NEW_DUNGEON: {\n            return {\n                name: \"Untitled Dungeon\",\n                size: {\n                    width: 24,\n                    height: 32\n                },\n                objects: []\n            }\n        }\n        case DUNGEON_ACTION_TYPE.SET_DUNGEON_NAME: {\n            return {\n                ...state,\n                name: action.name\n            }\n        }\n        case DUNGEON_ACTION_TYPE.SET_DUNGEON_SIZE: {\n            return {\n                ...state,\n                size: {\n                    width: action.width,\n                    height: action.height\n                }\n            }\n        }\n        case DUNGEON_ACTION_TYPE.MOVE_SELECTED_OBJECT: {\n            let arrayWithUpdatedObject = createArrayWithUpdatedObjects(\n                state.objects,\n                action.selectedObjectIds,\n                (object) => translate(object, action.deltaX, action.deltaY));\n            return {\n                ...state,\n                objects: arrayWithUpdatedObject\n            };\n        }\n        case DUNGEON_ACTION_TYPE.SET_SELECTED_OBJECT_TEXTURE_PATH: {\n            let arrayWithUpdatedObject = createArrayWithUpdatedObject(\n                state.objects,\n                action.selectedObject,\n                (object) => object.textureUrl = action.texturePath);\n            return {\n                ...state,\n                objects: arrayWithUpdatedObject\n            };\n        }\n        case DUNGEON_ACTION_TYPE.SET_SELECTED_OBJECT_ANGLE: {\n            let arrayWithUpdatedObject = createArrayWithUpdatedObject(\n                state.objects,\n                action.selectedObject,\n                (object) => object.angle = action.angle);\n            return {\n                ...state,\n                objects: arrayWithUpdatedObject\n            };\n        }\n        case DUNGEON_ACTION_TYPE.SET_SELECTED_OBJECT_LABEL: {\n            let arrayWithUpdatedObject = createArrayWithUpdatedObject(\n                state.objects,\n                action.selectedObject,\n                (object) => object.label = action.label);\n            return {\n                ...state,\n                objects: arrayWithUpdatedObject\n            };\n        }\n        case DUNGEON_ACTION_TYPE.SET_SELECTED_OBJECT_POSITION: {\n            let arrayWithUpdatedObject = createArrayWithUpdatedObject(\n                state.objects,\n                action.selectedObject,\n                (object) => object.position = {\n                    x: action.x,\n                    y: action.y\n                });\n            return {\n                ...state,\n                objects: arrayWithUpdatedObject\n            };\n        }\n        case DUNGEON_ACTION_TYPE.SET_SELECTED_OBJECT_SIZE: {\n            let arrayWithUpdatedObject = createArrayWithUpdatedObject(\n                state.objects,\n                action.selectedObject,\n                (object) => object.size = {\n                    width: action.width,\n                    height: action.height\n                });\n            return {\n                ...state,\n                objects: arrayWithUpdatedObject\n            };\n        }\n        case DUNGEON_ACTION_TYPE.SET_SELECTED_OBJECT_START: {\n            let arrayWithUpdatedObject = createArrayWithUpdatedObject(\n                state.objects,\n                action.selectedObject,\n                (object) => object.start = {\n                    x: action.x,\n                    y: action.y\n                });\n            return {\n                ...state,\n                objects: arrayWithUpdatedObject\n            };\n        }\n        case DUNGEON_ACTION_TYPE.SET_SELECTED_OBJECT_END: {\n            let arrayWithUpdatedObject = createArrayWithUpdatedObject(\n                state.objects,\n                action.selectedObject,\n                (object) => object.end = {\n                    x: action.x,\n                    y: action.y\n                });\n            return {\n                ...state,\n                objects: arrayWithUpdatedObject,\n            };\n\n        }\n        case DUNGEON_ACTION_TYPE.ADD_OBJECTS: {\n            let objectArray = state.objects.slice();\n            objectArray = [...objectArray, ...action.newObjects];\n            return {\n                ...state,\n                objects: objectArray\n            };\n        }\n        case DUNGEON_ACTION_TYPE.DELETE_OBJECTS: {\n            let objectIds = action.objectIds;\n            if (objectIds) {\n                let newObjectArray = state.objects\n                    .filter(object => !objectIds.includes(object.id));\n                return {\n                    ...state,\n                    objects: newObjectArray\n                }\n            }\n            else {\n                return state;\n            }\n        }\n        default:\n            return state\n    }\n};\n\nexport default dungeonReducer\n","const TOOL_TYPE = {\n    SELECT: \"select\",\n    NEW_WALL: \"new_wall\",\n    NEW_SPACE_RECTANGLE: \"new_space_rectangle\",\n    NEW_SPACE_POLYGON: \"new_space_polygon\",\n    NEW_DOOR: \"new_door\",\n    NEW_LABEL: \"new_label\",\n    NEW_TOKEN: \"new_token\"\n};\n\nexport default TOOL_TYPE;\n","const copyObject = (object) => JSON.parse(JSON.stringify(object));\n\nexport default copyObject;\n","import TOOL_TYPE from \"../tools/toolType\";\nimport copyObject from \"../utils/copyObject\";\nimport DUNGEON_ACTION_TYPE from \"./dungeonActionType\";\nimport EDITOR_ACTION_TYPE from \"./editorActionType\";\n\n/**\n * @typedef {defaultEditorState} EditorState\n */\nexport const defaultEditorState = {\n    scrollMovesViewport: false,\n    selectedTool: TOOL_TYPE.NEW_SPACE_RECTANGLE,\n    scale: 100,\n    position: {\n        x: 0,\n        y: 0\n    },\n    mouse: {\n        mouseDown: false,\n        startPosition: {\n            x: 0,\n            y: 0\n        },\n        currentPosition: {\n            x: 0,\n            y: 0\n        }\n    },\n    keyboard: {\n        heldKeys: {}\n    },\n    /** @type {string[]} */\n    selectedObjectIds: [],\n    /** @type {import(\"../dungeonObjects/DungeonObjectOperations\").DungeonObject[]} */\n    clipboard: []\n};\n\n/**\n * @returns {EditorState}\n */\nexport const editorReducer = (state = defaultEditorState, action) => {\n    switch (action.type) {\n        case EDITOR_ACTION_TYPE.KEY_PRESSED: {\n            let newHeldKeys = {...state.keyboard.heldKeys};\n            newHeldKeys[action.key] = true;\n            return {\n                ...state,\n                keyboard: {\n                    ...state.keyboard,\n                    heldKeys: newHeldKeys\n                }\n            }\n        }\n        case EDITOR_ACTION_TYPE.KEY_RELEASED: {\n            let newHeldKeys = {...state.keyboard.heldKeys};\n            delete newHeldKeys[action.key];\n            return {\n                ...state,\n                keyboard: {\n                    ...state.keyboard,\n                    heldKeys: newHeldKeys\n                }\n            }\n        }\n        case EDITOR_ACTION_TYPE.PNG_EXPORTED: {\n            return {\n                ...state,\n                exportToPngClicked: null\n            }\n        }\n        case EDITOR_ACTION_TYPE.EXPORT_TO_PNG_CLICKED: {\n            return {\n                ...state,\n                exportToPngClicked: true\n            }\n        }\n        case EDITOR_ACTION_TYPE.COPY_OBJECTS: {\n            return {\n                ...state,\n                clipboard: action.objects.map(copyObject)\n            }\n        }\n        case EDITOR_ACTION_TYPE.CLEAR_ONGOING_SPACE_POLYGON: {\n            return {\n                ...state,\n                ongoingSpacePolygon: null\n            }\n        }\n        case EDITOR_ACTION_TYPE.ADD_ONGOING_SPACE_POLYGON: {\n            let newPolygonArray = [...(state.ongoingSpacePolygon ?? []), action.position]\n            return {\n                ...state,\n                ongoingSpacePolygon: newPolygonArray\n            }\n        }\n        case EDITOR_ACTION_TYPE.MOVE_VIEWPORT: {\n            return {\n                ...state,\n                position: {\n                    x: state.position.x + action.deltaX,\n                    y: state.position.y + action.deltaY\n                }\n            }\n        }\n        case EDITOR_ACTION_TYPE.SET_CURRENT_MOUSE_POSITION: {\n            return {\n                ...state,\n                mouse: {\n                    ...state.mouse,\n                    currentPosition: {\n                        x: action.x,\n                        y: action.y\n                    }\n                }\n            }\n        }\n        case EDITOR_ACTION_TYPE.SCROLL_EVENT: {\n            if (!state.scrollMovesViewport || action.holdingCtrl) {\n                let scaleDelta = 10\n                if (action.scrollY > 0) {\n                    scaleDelta *= -1\n                }\n                let minimumScale = 10;\n                let maximumScale = 200;\n                let newScale = Math.min(Math.max(state.scale + scaleDelta, minimumScale), maximumScale)\n                if (state.scale !== newScale) {\n                    return {\n                        ...state,\n                        scale: newScale,\n                        position: {\n                            x: state.position.x - (state.mouse.currentPosition.x * (scaleDelta / 100)),\n                            y: state.position.y - (state.mouse.currentPosition.y * (scaleDelta / 100)),\n                        }\n                    };\n                }\n                else {\n                    return state;\n                }\n            }\n            else {\n                let scaleDelta = 0.5;\n                return {\n                    ...state,\n                    position: {\n                        x: state.position.x - action.scrollX * scaleDelta,\n                        y: state.position.y - action.scrollY * scaleDelta\n                    }\n                };\n            }\n        }\n        case EDITOR_ACTION_TYPE.MOUSE_DOWN: {\n            return {\n                ...state,\n                mouse: {\n                    ...state.mouse,\n                    mouseDown: true,\n                    startPosition: {\n                      x: state.mouse.currentPosition.x,\n                      y: state.mouse.currentPosition.y\n                    }\n                }\n            };\n        }\n        case EDITOR_ACTION_TYPE.MOUSE_UP: {\n            return {\n                ...state,\n                mouse: {\n                    ...state.mouse,\n                    mouseDown: false\n                }\n            };\n        }\n        case EDITOR_ACTION_TYPE.SET_SCROLL_MOVES_VIEWPORT: {\n            return {\n                ...state,\n                scrollMovesViewport: action.scrollMovesViewport\n            }\n        }\n        case EDITOR_ACTION_TYPE.SELECT_TOOL: {\n            let newSelectedObjectIds = state.selectedObjectIds;\n            if (action.selectedTool !== TOOL_TYPE.SELECT) {\n                newSelectedObjectIds = [];\n            }\n            return {\n                ...state,\n                selectedTool: action.selectedTool,\n                selectedObjectIds: newSelectedObjectIds\n            };\n        }\n        case EDITOR_ACTION_TYPE.SELECT_OBJECT: {\n            let newSelectedObjectIds;\n            if (action.shouldMultiSelect && state.selectedObjectIds.includes(action.objectId)) {\n                newSelectedObjectIds = state.selectedObjectIds.filter(objectId => objectId !== action.objectId);\n            }\n            else if (action.shouldMultiSelect) {\n                newSelectedObjectIds = [...state.selectedObjectIds, action.objectId];\n            }\n            else {\n                newSelectedObjectIds = [action.objectId];\n            }\n            return {\n                ...state,\n                selectedObjectIds: newSelectedObjectIds\n            }\n        }\n        case EDITOR_ACTION_TYPE.SELECT_OBJECTS: {\n            let newSelectedObjectIds;\n            if (action.shouldMultiSelect) {\n                newSelectedObjectIds = [...new Set([...state.selectedObjectIds, ...action.objectIds])];\n            }\n            else {\n                newSelectedObjectIds = action.objectIds;\n            }\n            return {\n                ...state,\n                selectedObjectIds: newSelectedObjectIds\n            };\n        }\n        case DUNGEON_ACTION_TYPE.DELETE_OBJECTS: {\n            return {\n                ...state,\n                selectedObjectIds: []\n            }\n        }\n        case DUNGEON_ACTION_TYPE.ADD_OBJECTS: {\n            return {\n                ...state,\n                selectedObjectIds: action.newObjects.map(object => object.id)\n            }\n        }\n        default: {\n            return {\n                ...state\n            }\n        }\n    }\n}\n","import { combineReducers } from 'redux'\nimport dungeonReducer from './dungeonReducer'\nimport { editorReducer } from './editorReducer'\n\n/**\n * @typedef {{\n *  editor: import('./editorReducer').EditorState,\n *  dungeon: import('./dungeonReducer').DungeonState\n * }} State\n */\n\nexport default combineReducers({\n    editor: editorReducer,\n    dungeon: dungeonReducer\n})\n","import { createStore } from 'redux';\nimport reducer from './reducers/index'\n\nconst store = createStore(reducer,\n  {},\n  typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nexport default store;\n","import DUNGEON_ACTION_TYPE from \"./dungeonActionType\";\n\nexport const clearDungeon = () => ({\n    type: DUNGEON_ACTION_TYPE.NEW_DUNGEON\n})\n\nexport const setDungeonName = (dungeonName) => ({\n    type: DUNGEON_ACTION_TYPE.SET_DUNGEON_NAME,\n    name: dungeonName\n})\n\nexport const addObjects = (objects) => ({\n    type: DUNGEON_ACTION_TYPE.ADD_OBJECTS,\n    newObjects: objects\n})\n\n/**\n * @param {import('../dungeonObjects/DungeonObjectOperations').DungeonObject} object\n */\nexport const addObject = (object) => addObjects([object])\n\nexport const deleteObjects = (objectIds) => ({\n    type: DUNGEON_ACTION_TYPE.DELETE_OBJECTS,\n    objectIds\n})\n\nexport const moveObjects = (selectedObjectIds, deltaX, deltaY) => ({\n    type: DUNGEON_ACTION_TYPE.MOVE_SELECTED_OBJECT,\n    selectedObjectIds,\n    deltaX: deltaX,\n    deltaY: deltaY\n})\n\nexport const setSelectedObjectTextureUrl = (selectedObject, texturePath) => ({\n    type: DUNGEON_ACTION_TYPE.SET_SELECTED_OBJECT_TEXTURE_PATH,\n    selectedObject,\n    texturePath: texturePath\n})\n\nexport const setSelectedObjectLabel = (selectedObject, label) => ({\n    type: DUNGEON_ACTION_TYPE.SET_SELECTED_OBJECT_LABEL,\n    selectedObject,\n    label: label\n})\n\nexport const setSelectedObjectPosition = (selectedObject, x, y) => ({\n    type: DUNGEON_ACTION_TYPE.SET_SELECTED_OBJECT_POSITION,\n    selectedObject,\n    x: x,\n    y: y\n})\n\nexport const setSelectedObjectSize = (selectedObject, width, height) => ({\n    type: DUNGEON_ACTION_TYPE.SET_SELECTED_OBJECT_SIZE,\n    selectedObject,\n    width: width,\n    height: height\n})\n\nexport const setSelectedObjectStart = (selectedObject, x, y) => ({\n    type: DUNGEON_ACTION_TYPE.SET_SELECTED_OBJECT_START,\n    selectedObject,\n    x: x,\n    y: y\n})\n\nexport const setSelectedObjectEnd = (selectedObject, x, y) => ({\n    type: DUNGEON_ACTION_TYPE.SET_SELECTED_OBJECT_END,\n    selectedObject,\n    x: x,\n    y: y\n})\n\nexport const setSelectedObjectAngle = (selectedObject, angle) => ({\n    type: DUNGEON_ACTION_TYPE.SET_SELECTED_OBJECT_ANGLE,\n    selectedObject,\n    angle: angle\n})\n\nexport const setDungeonSize = (width, height) => ({\n    type: DUNGEON_ACTION_TYPE.SET_DUNGEON_SIZE,\n    width: width,\n    height: height\n})\n","const square = (x) => x * x;\n\nexport const lineLength = (v, w) => Math.sqrt(square(v.x - w.x) + square(v.y - w.y));\n\nexport const getClosestPointOnLine = (p, a, b) => {\n\n    var atob = { x: b.x - a.x, y: b.y - a.y };\n    var atop = { x: p.x - a.x, y: p.y - a.y };\n    var len = atob.x * atob.x + atob.y * atob.y;\n    var dot = atop.x * atob.x + atop.y * atob.y;\n    var t = Math.min( 1, Math.max( 0, dot / len ) );\n    return {\n        x: a.x + atob.x * t,\n        y: a.y + atob.y * t\n    };\n}\n\n/**\n * @typedef {{x: number, y: number, width: number, height: number}} Rectangle\n * @param {Rectangle} rect1\n * @param {Rectangle} rect2\n */\nexport const doRectanglesIntersect = (rect1, rect2) => {\n    let x = Math.max(rect1.x, rect2.x);\n    let num1 = Math.min(rect1.x + rect1.width, rect2.x + rect2.width);\n    let y = Math.max(rect1.y, rect2.y);\n    let num2 = Math.min(rect1.y + rect1.height, rect2.y + rect2.height);\n    if (num1 >= x && num2 >= y)\n      return true;\n    else\n      return false;\n}\n","import * as PIXI from 'pixi.js';\nimport { createDoor } from \"../dungeonObjects/DoorOperations\";\nimport { WALL_TYPE } from \"../dungeonObjects/WallOperations\";\nimport { addObject } from \"../reducers/dungeonActions\";\nimport { GRID_TILE_SIZE } from \"../utils/constants\";\nimport { getClosestPointOnLine, lineLength } from \"../utils/geometry\";\n\nexport default class AddDoorTool {\n    onMouseUp(store) {\n        let state = store.getState();\n        let mousePoint = state.editor.mouse.currentPosition;\n        let minDistance = 25;\n        let snapPoint = null;\n        let minWallId = null;\n        state.dungeon.objects\n            .filter(object => object.type === WALL_TYPE)\n            .forEach(wall =>{\n                // try each point and get the shortest distance\n                let scaledStart = {\n                    x: wall.start.x * GRID_TILE_SIZE,\n                    y: wall.start.y * GRID_TILE_SIZE\n                };\n                let scaledEnd = {\n                    x: wall.end.x * GRID_TILE_SIZE,\n                    y: wall.end.y * GRID_TILE_SIZE\n                }\n                let closestPoint = getClosestPointOnLine({\n                        x: state.editor.mouse.startPosition.x,\n                        y: state.editor.mouse.startPosition.y\n                    }, scaledStart, scaledEnd);\n                // if the shortest distance of one is < snapping threshold, snap to it\n                let distance = lineLength(closestPoint, {\n                    x: state.editor.mouse.startPosition.x,\n                    y: state.editor.mouse.startPosition.y\n                });\n                if (!minDistance || distance < minDistance) {\n                    minDistance = distance;\n                    snapPoint = closestPoint;\n                    minWallId = wall.id;\n                }\n            });\n\n        let doorWall = state.dungeon.objects.find(wall => wall.id === minWallId);\n\n        if (!doorWall) {\n            return;\n        }\n\n        let scaledStart = {\n            x: doorWall.start.x * GRID_TILE_SIZE,\n            y: doorWall.start.y * GRID_TILE_SIZE\n        };\n        let scaledEnd = {\n            x: doorWall.end.x * GRID_TILE_SIZE,\n            y: doorWall.end.y * GRID_TILE_SIZE\n        }\n        let endPoint = getClosestPointOnLine(mousePoint, scaledStart, scaledEnd);\n        store.dispatch(addObject(createDoor(\n            snapPoint.x / GRID_TILE_SIZE,\n            snapPoint.y / GRID_TILE_SIZE,\n            endPoint.x / GRID_TILE_SIZE,\n            endPoint.y / GRID_TILE_SIZE)));\n    }\n\n    renderTool(state, graphics) {\n        let mousePoint = state.editor.mouse.currentPosition;\n        if (!state.editor.mouse.mouseDown) {\n            // try to snap to the nearest line:\n            // for each line, get the nearest point on the line\n            let minDistance = 25;\n            let snapPoint = null;\n            state.dungeon.objects\n                .filter(object => object.type === WALL_TYPE)\n                .forEach(wall => {\n                    // try each point and get the shortest distance\n                    let scaledStart = {\n                        x: wall.start.x * GRID_TILE_SIZE,\n                        y: wall.start.y * GRID_TILE_SIZE\n                    };\n                    let scaledEnd = {\n                        x: wall.end.x * GRID_TILE_SIZE,\n                        y: wall.end.y * GRID_TILE_SIZE\n                    }\n                    let closestPoint = getClosestPointOnLine(mousePoint, scaledStart, scaledEnd);\n                    // if the shortest distance of one is < snapping threshold, snap to it\n                    let distance = lineLength(closestPoint, mousePoint);\n                    if (!minDistance || distance < minDistance) {\n                        minDistance = distance;\n                        snapPoint = closestPoint;\n                    }\n                });\n            if (snapPoint) {\n                graphics.lineStyle();\n                graphics.beginFill(0xfffd00);\n                graphics.drawCircle(snapPoint.x, snapPoint.y, 2.5);\n                graphics.endFill();\n            }\n        }\n        else {\n            let minDistance = 25;\n            let snapPoint = null;\n            let minWallId = null;\n            state.dungeon.objects\n                .filter(object => object.type === WALL_TYPE)\n                .forEach(wall => {\n                    // try each point and get the shortest distance\n                    let scaledStart = {\n                        x: wall.start.x * GRID_TILE_SIZE,\n                        y: wall.start.y * GRID_TILE_SIZE\n                    };\n                    let scaledEnd = {\n                        x: wall.end.x * GRID_TILE_SIZE,\n                        y: wall.end.y * GRID_TILE_SIZE\n                    }\n                    let closestPoint = getClosestPointOnLine({\n                            x: state.editor.mouse.startPosition.x,\n                            y: state.editor.mouse.startPosition.y\n                        }, scaledStart, scaledEnd);\n                    // if the shortest distance of one is < snapping threshold, snap to it\n                    let distance = lineLength(closestPoint, {\n                        x: state.editor.mouse.startPosition.x,\n                        y: state.editor.mouse.startPosition.y\n                    });\n                    if (!minDistance || distance < minDistance) {\n                        minDistance = distance;\n                        snapPoint = closestPoint;\n                        minWallId = wall.id;\n                    }\n                });\n            // draw a line from the start point\n            if (!snapPoint) {\n                return;\n            }\n\n            let startX = snapPoint.x;\n            let startY = snapPoint.y;\n\n            let doorWall = state.dungeon.objects.find(wall => wall.id === minWallId);\n            let scaledStart = {\n                x: doorWall.start.x * GRID_TILE_SIZE,\n                y: doorWall.start.y * GRID_TILE_SIZE\n            };\n            let scaledEnd = {\n                x: doorWall.end.x * GRID_TILE_SIZE,\n                y: doorWall.end.y * GRID_TILE_SIZE\n            }\n            let endPoint = getClosestPointOnLine(mousePoint, scaledStart, scaledEnd);\n\n            let endX = endPoint.x;\n            let endY = endPoint.y;\n\n            graphics.lineStyle(5, 0xfffd00);\n            graphics.line.cap = PIXI.LINE_CAP.ROUND;\n            graphics.moveTo(startX, startY);\n            graphics.lineTo(endX, endY);\n            graphics.lineStyle();\n        }\n    }\n}\n","import { GRID_TILE_SIZE } from \"../utils/constants\";\nimport { addObject } from \"../reducers/dungeonActions\";\nimport { createLabel } from \"../dungeonObjects/LabelOperations\";\n\nexport default class AddLabelTool {\n    onMouseUp(store) {\n        let state = store.getState();\n        let mousePoint = state.editor.mouse.currentPosition;\n        let dungeonSpaceX = mousePoint.x / GRID_TILE_SIZE;\n        let dungeonSpaceY = mousePoint.y / GRID_TILE_SIZE;\n        store.dispatch(addObject(createLabel(dungeonSpaceX, dungeonSpaceY, \"Text Label\")));\n    }\n\n    renderTool(state, graphics) {\n    }\n}\n","import { GRID_TILE_SIZE } from \"../utils/constants\";\nimport { addObject } from \"../reducers/dungeonActions\";\nimport { addOngoingSpacePolygonPoint, clearOngoingSpacePolygonPoint } from '../reducers/editorActions'\nimport { createSpace } from \"../dungeonObjects/SpaceOperations\";\n\nexport default class AddSpacePolygonTool {\n\n    onMouseUp(store) {\n        let state = store.getState();\n        let mousePoint = state.editor.mouse.currentPosition;\n        let x = Math.round(mousePoint.x / GRID_TILE_SIZE);\n        let y = Math.round(mousePoint.y / GRID_TILE_SIZE);\n\n        let firstPoint = state.editor.ongoingSpacePolygon?.[0];\n        if (firstPoint && firstPoint.x === x && firstPoint.y === y ) {\n            // close it out\n            let pointArray = state.editor.ongoingSpacePolygon;\n            store.dispatch(clearOngoingSpacePolygonPoint());\n            store.dispatch(addObject(createSpace({points: pointArray})));\n        }\n        else {\n            store.dispatch(addOngoingSpacePolygonPoint(x, y));\n        }\n    }\n\n    renderTool(state, graphics) {\n        // if there's no ongoing polygon, just snap to a corner\n        let mousePoint = state.editor.mouse.currentPosition;\n        // get nearest center point\n        let hoverX = Math.round(mousePoint.x / GRID_TILE_SIZE) * GRID_TILE_SIZE;\n        let hoverY = Math.round(mousePoint.y / GRID_TILE_SIZE) * GRID_TILE_SIZE;\n\n        if (!state.editor.ongoingSpacePolygon) {\n            graphics.lineStyle();\n            graphics.beginFill(0xfffd00);\n            graphics.drawCircle(hoverX, hoverY, 2.5);\n            graphics.endFill();\n        }\n        else {\n            graphics.lineStyle(2, 0xfffd00);\n            let firstPoint = state.editor.ongoingSpacePolygon[0];\n            graphics.moveTo(\n                firstPoint.x * GRID_TILE_SIZE,\n                firstPoint.y * GRID_TILE_SIZE);\n            for (let index = 1; index < state.editor.ongoingSpacePolygon.length; index++) {\n                const point = state.editor.ongoingSpacePolygon[index];\n                graphics.lineTo(point.x * GRID_TILE_SIZE, point.y * GRID_TILE_SIZE);\n            }\n            graphics.lineTo(hoverX, hoverY);\n            // then draw to where mouse is hovering over\n            graphics.lineStyle();\n        }\n    }\n}\n","import { GRID_TILE_SIZE } from \"../utils/constants\";\nimport { addObject } from \"../reducers/dungeonActions\";\nimport { createSpace } from \"../dungeonObjects/SpaceOperations\";\n\nexport default class AddSpaceRectangleTool {\n\n    onMouseUp(store) {\n        let state = store.getState();\n        let mousePoint = state.editor.mouse.currentPosition;\n        let startX = Math.floor(Math.min(state.editor.mouse.startPosition.x, mousePoint.x) / GRID_TILE_SIZE);\n        let startY = Math.floor(Math.min(state.editor.mouse.startPosition.y, mousePoint.y) / GRID_TILE_SIZE);\n        let endX = Math.ceil(Math.max(state.editor.mouse.startPosition.x, mousePoint.x) / GRID_TILE_SIZE);\n        let endY = Math.ceil(Math.max(state.editor.mouse.startPosition.y, mousePoint.y) / GRID_TILE_SIZE);\n        store.dispatch(addObject(createSpace({ startX, startY, endX, endY})));\n    }\n\n    renderTool(state, graphics) {\n        let mousePoint = state.editor.mouse.currentPosition;\n        let snappedX, snappedY, width, height;\n        if (state.editor.mouse.mouseDown) {\n            let startX = Math.min(state.editor.mouse.startPosition.x, mousePoint.x);\n            let startY = Math.min(state.editor.mouse.startPosition.y, mousePoint.y);\n            let endX = Math.max(state.editor.mouse.startPosition.x, mousePoint.x);\n            let endY = Math.max(state.editor.mouse.startPosition.y, mousePoint.y);\n            snappedX = Math.floor(startX / GRID_TILE_SIZE) * GRID_TILE_SIZE;\n            snappedY = Math.floor(startY / GRID_TILE_SIZE) * GRID_TILE_SIZE;\n            endX = Math.floor(endX / GRID_TILE_SIZE) * GRID_TILE_SIZE + GRID_TILE_SIZE;\n            endY = Math.floor(endY / GRID_TILE_SIZE) * GRID_TILE_SIZE + GRID_TILE_SIZE;\n            width = endX - snappedX;\n            height = endY - snappedY;\n        }\n        else {\n            // snap to nearest grid point\n            // for now for simplicity let's say top left\n            snappedX = Math.floor(mousePoint.x / GRID_TILE_SIZE) * GRID_TILE_SIZE;\n            snappedY = Math.floor(mousePoint.y / GRID_TILE_SIZE) * GRID_TILE_SIZE;\n            width = GRID_TILE_SIZE;\n            height = GRID_TILE_SIZE;\n        }\n        // draw a hover rect\n        graphics.beginFill(0, 0);\n        graphics.lineStyle(1, 0xfffd00);\n        graphics.drawRect(snappedX, snappedY, width, height);\n        graphics.endFill();\n    }\n}\n","import { GRID_TILE_SIZE } from '../utils/constants';\nimport { addObject } from '../reducers/dungeonActions';\nimport { createToken } from '../dungeonObjects/TokenOperations';\n\nexport default class AddTokenTool {\n    // TODO: Make this configurable based on the currently selected token or something along those lines\n    tokenTextureUrl = '/assets/stairs.png';\n    height = 2;\n    width = 1;\n\n    onMouseUp(store) {\n        let state = store.getState();\n        let mousePoint = state.editor.mouse.currentPosition;\n        let snappedX, snappedY;\n\n        // snap to nearest grid point\n        // for now for simplicity let's say top left\n        snappedX = Math.floor(mousePoint.x / GRID_TILE_SIZE);\n        snappedY = Math.floor(mousePoint.y / GRID_TILE_SIZE);\n\n        store.dispatch(addObject(createToken(\n            this.tokenTextureUrl,\n            snappedX,\n            snappedY,\n            this.width,\n            this.height,\n            0\n        )));\n    }\n\n    renderTool(state, graphics) {\n        // preview the sprite in the current location\n        let mousePoint = state.editor.mouse.currentPosition;\n        let snappedX, snappedY;\n\n        // snap to nearest grid point\n        // for now for simplicity let's say top left\n        snappedX = Math.floor(mousePoint.x / GRID_TILE_SIZE) * GRID_TILE_SIZE;\n        snappedY = Math.floor(mousePoint.y / GRID_TILE_SIZE) * GRID_TILE_SIZE;\n\n        // draw a hover rect\n        graphics.beginFill(0, 0);\n        graphics.lineStyle(1, 0xfffd00);\n        graphics.drawRect(snappedX, snappedY, this.width * GRID_TILE_SIZE, this.height * GRID_TILE_SIZE);\n        graphics.endFill();\n    }\n}\n","import * as PIXI from 'pixi.js';\nimport { createWall } from \"../dungeonObjects/WallOperations\";\nimport { addObject } from \"../reducers/dungeonActions\";\nimport { GRID_TILE_SIZE } from \"../utils/constants\";\n\nexport default class AddWallTool {\n    onMouseUp(store) {\n        let state = store.getState();\n        let mousePoint = state.editor.mouse.currentPosition;\n        let startX = Math.round(state.editor.mouse.startPosition.x / GRID_TILE_SIZE);\n        let startY = Math.round(state.editor.mouse.startPosition.y / GRID_TILE_SIZE);\n        let endX = Math.round(mousePoint.x / GRID_TILE_SIZE);\n        let endY = Math.round(mousePoint.y / GRID_TILE_SIZE);\n        store.dispatch(addObject(createWall(startX, startY, endX, endY)));\n    }\n\n    renderTool(state, graphics) {\n        let mousePoint = state.editor.mouse.currentPosition;\n        if (state.editor.mouse.mouseDown) {\n            let startX = Math.round(state.editor.mouse.startPosition.x / GRID_TILE_SIZE) * GRID_TILE_SIZE;\n            let startY = Math.round(state.editor.mouse.startPosition.y / GRID_TILE_SIZE) * GRID_TILE_SIZE;\n            let endX = Math.round(mousePoint.x / GRID_TILE_SIZE) * GRID_TILE_SIZE;\n            let endY = Math.round(mousePoint.y / GRID_TILE_SIZE) * GRID_TILE_SIZE;\n            graphics.lineStyle(5, 0xfffd00);\n            graphics.line.cap = PIXI.LINE_CAP.ROUND;\n            graphics.moveTo(startX, startY);\n            graphics.lineTo(endX, endY);\n            graphics.lineStyle();\n            graphics.endFill();\n        }\n        else {\n            // get nearest center point\n            let hoverX = Math.round(mousePoint.x / GRID_TILE_SIZE) * GRID_TILE_SIZE;\n            let hoverY = Math.round(mousePoint.y / GRID_TILE_SIZE) * GRID_TILE_SIZE;\n\n            graphics.lineStyle();\n            graphics.beginFill(0xfffd00);\n            graphics.drawCircle(hoverX, hoverY, 2.5);\n            graphics.endFill();\n        }\n    }\n}\n","import * as PIXI from 'pixi.js';\nimport { createRenderObject, renderObject, translate } from '../dungeonObjects/DungeonObjectOperations';\nimport { moveObjects } from '../reducers/dungeonActions';\nimport { selectObject, selectObjects } from \"../reducers/editorActions\";\nimport { GRID_TILE_SIZE } from \"../utils/constants\";\nimport copyObject from '../utils/copyObject';\nimport { doRectanglesIntersect } from '../utils/geometry';\n\nconst DRAG_THRESHOLD = 5;\n\nconst pastDragThreshold = (startPosition, endPosition) => {\n    return Math.abs(endPosition.x - startPosition.x) > DRAG_THRESHOLD ||\n        Math.abs(endPosition.y - startPosition.y) > DRAG_THRESHOLD;\n}\n\nconst getTranslation = (endPosition, startPosition) => ({\n    deltaX: Math.round((endPosition.x - startPosition.x) / GRID_TILE_SIZE),\n    deltaY: Math.round((endPosition.y - startPosition.y) / GRID_TILE_SIZE)\n})\n\nconst createRectangle = (startPosition, endPosition) => ({\n    x: Math.min(startPosition.x, endPosition.x),\n    y: Math.min(startPosition.y, endPosition.y),\n    width: Math.abs(endPosition.x - startPosition.x),\n    height: Math.abs(endPosition.y - startPosition.y)\n})\n\nlet startedMove = false;\n\n/**\n * Possible states to be in. Values correspond to powers of 2,\n * since in some cases it is possible to be in multiple states.\n */\nconst STATES = {\n    SELECTING_IN_BOUNDING_BOX: 1,\n    POSSIBLY_DRAGGING_TO_MOVE: 2,\n    POSSIBLY_SELECTING_LAST_HIT_OBJECT: 4,\n    POSSIBLY_DESELECTING_LAST_HIT_OBJECT: 8\n};\n\nexport default class SelectTool {\n    /**\n     * @private\n     */\n    initializeGraphicsForMoving(graphics, state) {\n        this.graphics = graphics;\n        this.graphics.zIndex = 9;\n        this.graphics.alpha = 0.5;\n        state.dungeon.objects\n            .filter(dungeonObject => state.editor.selectedObjectIds.includes(dungeonObject.id))\n            .forEach(dungeonObject => {\n                let dungeonRenderObject = createRenderObject(dungeonObject);\n                dungeonRenderObject.id = dungeonObject.id;\n                this.graphics.addChild(dungeonRenderObject);\n            });\n    }\n\n    /**\n     * @private\n     */\n    resetGraphicsAfterMoving() {\n        this.graphics.removeChildren(0, this.graphics.children.length);\n        this.graphics.zIndex = Number.MAX_SAFE_INTEGER;\n        this.graphics.alpha = 1;\n        this.graphics = null;\n        startedMove = false;\n    }\n\n    // TODO: Consider injecting `app` via ctor instead of function\n    onMouseDown(store, app) {\n        /** @type {import(\"../reducers\").State} */\n        let state = store.getState();\n\n        const currentPosition = state.editor.mouse.currentPosition;\n        const shouldAddToSelection = state.editor.keyboard.heldKeys[\"Shift\"];\n\n        let mousePoint = new PIXI.Point(\n            currentPosition.x,\n            currentPosition.y);\n        let mousePointInGlobalCoordinates = app.stage.worldTransform.apply(mousePoint);\n\n        let hitObject = app.renderer.plugins.interaction.hitTest(\n            mousePointInGlobalCoordinates);\n        let hitObjectIsAlreadySelected = hitObject && state.editor.selectedObjectIds.includes(hitObject.id);\n\n        if (!hitObject && !shouldAddToSelection) {\n            store.dispatch(selectObjects([], false));\n            this.currentStates = STATES.SELECTING_IN_BOUNDING_BOX;\n        }\n        else if (!hitObject && shouldAddToSelection) {\n            this.currentStates = STATES.SELECTING_IN_BOUNDING_BOX;\n        }\n        else if (hitObject && shouldAddToSelection && hitObjectIsAlreadySelected) {\n            this.currentStates = STATES.POSSIBLY_DRAGGING_TO_MOVE | STATES.POSSIBLY_DESELECTING_LAST_HIT_OBJECT;\n            this.lastHitId = hitObject.id;\n        }\n        else if (hitObject && shouldAddToSelection && !hitObjectIsAlreadySelected) {\n            store.dispatch(selectObject(hitObject.id, shouldAddToSelection));\n            this.currentStates = STATES.POSSIBLY_DRAGGING_TO_MOVE;\n        }\n        else if (hitObject && !shouldAddToSelection) {\n            if (!hitObjectIsAlreadySelected) {\n                store.dispatch(selectObject(hitObject.id, shouldAddToSelection));\n            }\n            this.currentStates = STATES.POSSIBLY_DRAGGING_TO_MOVE | STATES.POSSIBLY_SELECTING_LAST_HIT_OBJECT;\n            this.lastHitId = hitObject.id\n        }\n    }\n\n    onMouseUp(store, app) {\n        /** @type {import(\"../reducers\").State} */\n        let state = store.getState();\n\n        const startPosition = state.editor.mouse.startPosition;\n        const endPosition = state.editor.mouse.currentPosition;\n        const shouldAddToSelection = state.editor.keyboard.heldKeys[\"Shift\"];\n        const isDragging = pastDragThreshold(startPosition, endPosition);\n\n        if (this.currentStates === STATES.SELECTING_IN_BOUNDING_BOX && isDragging) {\n            let boundingRectangle = createRectangle(startPosition, endPosition);\n\n            let objectIdsToSelect = [];\n            app.stage.children.forEach(child => {\n                if (doRectanglesIntersect(child.getLocalBounds(), boundingRectangle) && child.id) {\n                    objectIdsToSelect.push(child.id);\n                }\n            });\n            store.dispatch(selectObjects(objectIdsToSelect, shouldAddToSelection));\n\n        }\n        else if ((this.currentStates & STATES.POSSIBLY_DESELECTING_LAST_HIT_OBJECT) && !isDragging) {\n            store.dispatch(selectObject(this.lastHitId, true));\n        }\n        else if ((this.currentStates & STATES.POSSIBLY_SELECTING_LAST_HIT_OBJECT) && !isDragging) {\n            store.dispatch(selectObject(this.lastHitId, false));\n        }\n        else if ((this.currentStates & STATES.POSSIBLY_DRAGGING_TO_MOVE) && isDragging) {\n            let {deltaX, deltaY} = getTranslation(\n                state.editor.mouse.currentPosition,\n                state.editor.mouse.startPosition);\n\n            if (deltaX !== 0 || deltaY !== 0) {\n                store.dispatch(moveObjects(\n                    state.editor.selectedObjectIds,\n                    deltaX,\n                    deltaY));\n            }\n\n            this.resetGraphicsAfterMoving();\n        }\n\n        delete this.currentStates;\n        delete this.lastHitId;\n    }\n\n    /**\n     * @param {import(\"../reducers\").State} state\n     * @param {PIXI.Graphics} graphics\n     */\n    renderTool(state, graphics) {\n        const startPosition = state.editor.mouse.startPosition;\n        const endPosition = state.editor.mouse.currentPosition;\n        const isDragging = pastDragThreshold(startPosition, endPosition);\n\n        if (this.currentStates === STATES.SELECTING_IN_BOUNDING_BOX && isDragging) {\n            let boundingRectangle = createRectangle(startPosition, endPosition);\n            graphics.lineStyle(1, 0xfffd00)\n                .drawRect(boundingRectangle.x, boundingRectangle.y, boundingRectangle.width, boundingRectangle.height)\n                .lineStyle();\n        }\n        else if ((this.currentStates & STATES.POSSIBLY_DRAGGING_TO_MOVE) && isDragging) {\n            if (!this.graphics) {\n                this.initializeGraphicsForMoving(graphics, state);\n            }\n\n            let {deltaX, deltaY} = getTranslation(\n                state.editor.mouse.currentPosition,\n                state.editor.mouse.startPosition\n            );\n\n            if (!startedMove && (Math.abs(deltaX) > 0 || Math.abs(deltaY) > 0)) {\n                startedMove = true;\n            }\n\n            if (startedMove) {\n                state.dungeon.objects\n                    .filter(dungeonObject => state.editor.selectedObjectIds.includes(dungeonObject.id))\n                    .forEach(dungeonObject => {\n                        let objectCopy = copyObject(dungeonObject);\n                        translate(objectCopy, deltaX, deltaY);\n                        let renderObjectCopy = this.graphics.children.filter(child => child.id === objectCopy.id)[0];\n                        renderObject(renderObjectCopy, objectCopy, false);\n                    });\n            }\n        }\n    }\n}\n","import AddDoorTool from \"./AddDoorTool\";\nimport AddLabelTool from \"./AddLabelTool\";\nimport AddSpacePolygonTool from \"./AddSpacePolygonTool\";\nimport AddSpaceRectangleTool from \"./AddSpaceRectangleTool\";\nimport AddTokenTool from \"./AddTokenTool\";\nimport AddWallTool from \"./AddWallTool\";\nimport SelectTool from \"./SelectTool\";\nimport TOOL_TYPE from \"./toolType\";\n\nconst toolMap = {\n    [TOOL_TYPE.NEW_DOOR]: new AddDoorTool(),\n    [TOOL_TYPE.NEW_SPACE_RECTANGLE]: new AddSpaceRectangleTool(),\n    [TOOL_TYPE.NEW_SPACE_POLYGON]: new AddSpacePolygonTool(),\n    [TOOL_TYPE.NEW_WALL]: new AddWallTool(),\n    [TOOL_TYPE.SELECT]: new SelectTool(),\n    [TOOL_TYPE.NEW_LABEL]: new AddLabelTool(),\n    [TOOL_TYPE.NEW_TOKEN]: new AddTokenTool()\n}\n\nexport const onMouseDown = (store, app) => {\n    let state = store.getState();\n    toolMap[state.editor.selectedTool].onMouseDown?.(store, app);\n}\n\nexport const onMouseUp = (store, app) => {\n    /** @type {import(\"../reducers\").State} */\n    let state = store.getState();\n    toolMap[state.editor.selectedTool].onMouseUp(store, app);\n}\n\nexport const renderTool = (state, graphics) => {\n    toolMap[state.editor.selectedTool].renderTool(state, graphics);\n}\n","let download = (data, filename) => {\n    let downloadLink = document.createElement(\"a\");\n    downloadLink.href = data;\n    downloadLink.download = filename;\n    downloadLink.target = \"_blank\"\n    downloadLink.click();\n}\n\nexport default download;\n","import * as PIXI from 'pixi.js';\nimport * as DungeonObjectOperations from '../dungeonObjects/DungeonObjectOperations';\nimport { pngExported, setCurrentMousePosition } from \"../reducers/editorActions\";\nimport store from '../store.js';\nimport * as ToolRouter from '../tools/ToolRouter';\nimport TOOL_TYPE from '../tools/toolType';\nimport download from \"../utils/download\";\n\n/**\n * @param {PIXI.Application} app\n * @param {PIXI.Graphics} graphics\n * @param {GridRenderer} gridRenderer\n */\nexport const render = (app, graphics, gridRenderer) => {\n    /**\n     * @type {import(\"../reducers\").State}\n     */\n    let state = store.getState();\n\n    handlePanning(app, state);\n    handleScaling(state, app);\n\n    drawDungeonObjects(app.stage, state);\n    gridRenderer.renderGrid(state.dungeon.size.width, state.dungeon.size.height);\n\n    handleExporting(state, app);\n\n    if (app.renderer.plugins.interaction.mouseOverRenderer) {\n        graphics.clear();\n        ToolRouter.renderTool(state, graphics);\n\n        let mousePosition = app.renderer.plugins.interaction.mouse.getLocalPosition(app.stage);\n        store.dispatch(setCurrentMousePosition(mousePosition.x, mousePosition.y));\n    }\n    else {\n        store.dispatch(setCurrentMousePosition(null, null));\n    }\n}\nexport default render;\n\nconst drawDungeonObjects = (container, state) => {\n    let objectIdMap = state.dungeon.objects.reduce((map, object) => {\n        map[object.id] = object;\n        return map;\n    }, {});\n\n    let containerObjectIds = new Set(container.children.map(child => child.id));\n    let stateObjectIds = Object.keys(objectIdMap);\n    stateObjectIds.forEach(objectId => {\n        if (!containerObjectIds.has(objectId)) {\n            let newChildGraphics = DungeonObjectOperations.createRenderObject(objectIdMap[objectId]);\n            newChildGraphics.id = objectId;\n            newChildGraphics.interactive = true;\n            container.addChild(newChildGraphics);\n        }\n    });\n\n    // Sync all child graphics with state\n    container.children.forEach(graphics => {\n        if (graphics.id) {\n            let object = objectIdMap[graphics.id];\n            if (object) {\n                if (state.editor.selectedTool === TOOL_TYPE.SELECT) {\n                    graphics.cursor = \"move\";\n                }\n                else {\n                    graphics.cursor = \"default\";\n                }\n                DungeonObjectOperations.renderObject(graphics, object, state.editor.selectedObjectIds.includes(graphics.id))\n            }\n            else {\n                container.removeChild(graphics);\n            }\n        }\n    });\n}\n\nfunction handleExporting(state, app) {\n    if (state.editor.exportToPngClicked) {\n        exportImage(app, state);\n    }\n}\n\nfunction handleScaling(state, app) {\n    let fractionalScale = state.editor.scale / 100;\n    if (app.stage.scale.x !== fractionalScale) {\n        app.stage.scale.set(fractionalScale);\n    }\n}\n\nfunction handlePanning(app, state) {\n    app.stage.position.set(state.editor.position.x, state.editor.position.y);\n}\n\nfunction exportImage(app, state) {\n    let exportTexture = app.renderer.generateTexture(app.stage,\n        null,\n        1.0 / app.stage.scale.x,\n        new PIXI.Rectangle(\n            app.stage.position.x - 1,\n            app.stage.position.y - 1,\n            app.stage.width,\n            app.stage.height\n        ));\n    let normalizedDungeonName = state.dungeon.name.toLowerCase().replace(/\\s/g, '_');\n    let filename = `${normalizedDungeonName}_${state.dungeon.size.width}x${state.dungeon.size.height}.png`;\n    download(app.renderer.extract.base64(exportTexture), filename);\n    store.dispatch(pngExported());\n}\n","import * as PIXI from 'pixi.js'\nimport { GRID_TILE_SIZE } from '../utils/constants';\n\nexport class GridRenderer {\n    createRenderObject() {\n        this.graphics = new PIXI.Graphics();\n        this.graphics.zIndex = 10;\n        return this.graphics;\n    }\n\n    renderGrid(gridWidth, gridHeight) {\n        this.graphics.clear();\n        this.graphics.lineStyle(1, 0x444444, 1, 0.5);\n        for (let i = 0; i <= gridWidth; i++) {\n            this.graphics.moveTo(i * GRID_TILE_SIZE, 0);\n            this.graphics.lineTo(i * GRID_TILE_SIZE, gridHeight * GRID_TILE_SIZE);\n        }\n\n        for (let j = 0; j <= gridHeight; j++) {\n            this.graphics.moveTo(0, j * GRID_TILE_SIZE);\n            this.graphics.lineTo(gridWidth * GRID_TILE_SIZE, j * GRID_TILE_SIZE);\n        }\n        this.graphics.lineStyle();\n    }\n}\n","import { v4 as uuid } from \"uuid\";\nimport { position, translate } from \"../dungeonObjects/DungeonObjectOperations\";\nimport { addObjects } from \"../reducers/dungeonActions\";\nimport { addObjectsToClipboard } from \"../reducers/editorActions\";\nimport { GRID_TILE_SIZE } from \"./constants\";\nimport copyObject from \"./copyObject\";\n\nexport const pasteFromClipboard = (state, store) => {\n    let copiedObjects = state.editor.clipboard.map(object => {\n        object.id = uuid();\n        return copyObject(object);\n    });\n\n    let mousePosition = {\n        x: Math.floor(state.editor.mouse.currentPosition.x / GRID_TILE_SIZE),\n        y: Math.floor(state.editor.mouse.currentPosition.y / GRID_TILE_SIZE)\n    };\n    let firstPositionOfSelection = position(state.editor.clipboard[0]);\n    let clipboardTranslation = {\n        x: mousePosition.x - firstPositionOfSelection.x,\n        y: mousePosition.y - firstPositionOfSelection.y\n    };\n\n    copiedObjects.forEach(object => {\n        translate(object, clipboardTranslation.x, clipboardTranslation.y);\n    });\n    store.dispatch(addObjects(copiedObjects));\n}\n\nexport const copyToClipboard = (store, state) => {\n    store.dispatch(addObjectsToClipboard(\n        state.dungeon.objects\n            .filter(object => state.editor.selectedObjectIds.includes(object.id))\n            .map(copyObject)));\n}\n","import { deleteObjects, moveObjects } from \"../reducers/dungeonActions\";\nimport { keyPressed, keyReleased, selectObjects } from \"../reducers/editorActions\";\nimport TOOL_TYPE from \"../tools/toolType\";\nimport { copyToClipboard, pasteFromClipboard } from \"./clipboard\";\n\n/**\n * @param {KeyboardEvent} keyboardEvent\n * @param {import(\"redux\").Store} store\n */\nexport const handleKeyPressed = (keyboardEvent, store) => {\n    if (!keyboardEvent.repeat) {\n        store.dispatch(keyPressed(keyboardEvent.key));\n    }\n    /**\n     * @type {import(\"../reducers\").State}\n     */\n    let state = store.getState();\n    switch (keyboardEvent.key) {\n        case 'Delete':\n            return store.dispatch(deleteObjects(state.editor.selectedObjectIds));\n        case 'ArrowLeft':\n            return store.dispatch(moveObjects(state.editor.selectedObjectIds, -1, 0));\n        case 'ArrowRight':\n            return store.dispatch(moveObjects(state.editor.selectedObjectIds, 1, 0));\n        case 'ArrowDown':\n            return store.dispatch(moveObjects(state.editor.selectedObjectIds, 0, 1));\n        case 'ArrowUp':\n            return store.dispatch(moveObjects(state.editor.selectedObjectIds, 0, -1));\n        case 'a':\n            keyboardEvent.preventDefault();\n            if (state.editor.selectedTool === TOOL_TYPE.SELECT && keyboardEvent.ctrlKey) {\n                store.dispatch(selectObjects(state.dungeon.objects.map(object => object.id)))\n            }\n            return;\n        case 'c':\n            keyboardEvent.preventDefault();\n            if (keyboardEvent.ctrlKey) {\n                copyToClipboard(store, state);\n            }\n            return;\n        case 'v':\n            if (keyboardEvent.ctrlKey && state.editor.clipboard.length) {\n                pasteFromClipboard(state, store);\n            }\n            return;\n        default:\n            return;\n    }\n}\n\n/**\n * @param {KeyboardEvent} keyboardEvent\n * @param {import(\"redux\").Store} store\n */\nexport const handleKeyReleased = (keyboardEvent, store) => {\n    store.dispatch(keyReleased(keyboardEvent.key));\n}\n","import { mouseDown, mouseUp, moveViewport, scroll } from \"../reducers/editorActions\";\nimport * as ToolRouter from '../tools/ToolRouter';\n\nexport const handleMouseDown = (mouseEvent, store, app) => {\n    if (mouseEvent.buttons === 1) {\n        store.dispatch(mouseDown());\n        ToolRouter.onMouseDown(store, app);\n    }\n}\n\nexport const handleMouseUp = (mouseEvent, store, app) => {\n    let state = store.getState();\n    if (state.editor.mouse.mouseDown) {\n        store.dispatch(mouseUp());\n        ToolRouter.onMouseUp(store, app);\n    }\n}\n\nexport const handleMouseMove = (mouseEvent, store) => {\n    if (mouseEvent.buttons === 2) {\n        let mouseMovementScaledByDisplayScaling = {\n            movementX: mouseEvent.movementX / window.devicePixelRatio,\n            movementY: mouseEvent.movementY / window.devicePixelRatio\n        }\n        store.dispatch(moveViewport(\n            mouseMovementScaledByDisplayScaling.movementX,\n            mouseMovementScaledByDisplayScaling.movementY));\n    }\n}\n\nexport const handleWheelEvent = (wheelEvent, store) => {\n    store.dispatch(scroll(\n        wheelEvent.deltaX,\n        wheelEvent.deltaY,\n        wheelEvent.getModifierState('Control')));\n}\n","import * as PIXI from 'pixi.js';\nimport React from 'react';\nimport { render as renderDungeon } from '../rendering/DungeonRenderer';\nimport { GridRenderer } from '../rendering/GridRenderer';\nimport store from '../store.js';\nimport { handleKeyPressed, handleKeyReleased } from '../utils/keyboardEventHandlers.js';\nimport * as MouseEventHandler from '../utils/mouseEventHandlers.js';\n\nexport default class DungeonEditor extends React.Component {\n    render() {\n        return <div\n            style={{ height: \"85vh\" }}\n            tabIndex={-1}\n            ref={(element) => this.canvasDiv = element}>\n        </div>\n    }\n\n    componentDidMount() {\n        const app = new PIXI.Application({\n            backgroundColor: 0x5f5f5f,\n            sharedLoader: true,\n            sharedTicker: true,\n            antialias: true\n        });\n        this.app = app;\n        this.canvasDiv.appendChild(app.view);\n        this.app.resizeTo = this.canvasDiv;\n        this.app.resize();\n\n        let graphics = new PIXI.Graphics();\n        graphics.zIndex = Number.MAX_SAFE_INTEGER;\n        app.stage.sortableChildren = true;\n        app.stage.addChild(graphics);\n\n        this.setupInteractions(app)\n\n        let gridRenderer = new GridRenderer();\n        app.stage.addChild(gridRenderer.createRenderObject());\n\n        app.ticker.add(() => {\n            renderDungeon(app, graphics, gridRenderer);\n        });\n    }\n\n    setupInteractions(app) {\n        this.canvasDiv.addEventListener(\"wheel\", (wheelEvent) => {\n            MouseEventHandler.handleWheelEvent(wheelEvent, store);\n            wheelEvent.preventDefault();\n        });\n        this.canvasDiv.addEventListener('contextmenu', (event) => {\n            event.preventDefault();\n        });\n        this.canvasDiv.addEventListener('pointerdown', (event) => {\n            MouseEventHandler.handleMouseDown(event, store, app);\n        });\n        this.canvasDiv.addEventListener('pointerup', (event) => {\n            MouseEventHandler.handleMouseUp(event, store, app);\n        });\n        this.canvasDiv.addEventListener('pointermove', (pointerEvent) => {\n            MouseEventHandler.handleMouseMove(pointerEvent, store);\n        });\n        this.canvasDiv.addEventListener('keydown', (event) => {\n            handleKeyPressed(event, store);\n        });\n        this.canvasDiv.addEventListener('keyup', (event) => {\n            handleKeyReleased(event, store);\n        })\n    }\n}\n","import React from 'react'\n\nconst StateEditorCard = ({title, children}) =>\n    <div className=\"card bg-dark text-light border-secondary mb-3\">\n        <div className=\"card-header border-secondary\">\n            <h5>{title}</h5>\n        </div>\n        <div className=\"card-body\">\n            <div className=\"form-group\">\n                {children}\n            </div>\n        </div>\n    </div>\n\nexport default StateEditorCard\n","import React from 'react'\nimport StateEditorCard from './StateEditorCard'\n\nconst PositionEditor = ({ title, x, y, onUpdate }) =>\n    <StateEditorCard title={title ?? 'Position'}>\n        <label>\n            X:\n            <input\n                className=\"form-control bg-secondary text-light\"\n                type=\"number\"\n                value={x}\n                onChange={(changeEvent) => onUpdate(\n                    parseInt(changeEvent.target.value),\n                    y\n                )}>\n            </input>\n        </label>\n        <label>\n            Y:\n            <input\n                className=\"form-control bg-secondary text-light\"\n                type=\"number\"\n                value={y}\n                onChange={(changeEvent) => onUpdate(\n                    x,\n                    parseInt(changeEvent.target.value)\n                )}>\n            </input>\n        </label>\n    </StateEditorCard>\n\nexport default PositionEditor","import React from 'react'\nimport StateEditorCard from './StateEditorCard'\n\nconst SizeEditor = ({ title, width, height, onUpdate }) =>\n    <StateEditorCard title={title ?? 'Size'}>\n        <label>\n            Width:\n            <input\n                className=\"form-control bg-secondary text-light\"\n                type=\"number\"\n                value={width}\n                onChange={(changeEvent) => onUpdate(\n                    parseInt(changeEvent.target.value),\n                    height\n                )}>\n            </input>\n        </label>\n        <label>\n            Height:\n            <input\n                className=\"form-control bg-secondary text-light\"\n                type=\"number\"\n                value={height}\n                onChange={(changeEvent) => onUpdate(\n                    width,\n                    parseInt(changeEvent.target.value)\n                )}>\n            </input>\n        </label>\n    </StateEditorCard>\n\nexport default SizeEditor","import React from \"react\"\nimport { connect } from 'react-redux'\nimport * as DungeonActions from '../reducers/dungeonActions'\nimport * as EditorActions from '../reducers/editorActions'\nimport PositionEditor from \"./PositionEditor\"\nimport SizeEditor from \"./SizeEditor\"\nimport StateEditorCard from \"./StateEditorCard\"\n\nlet StateEditor = ({ dispatch, selectedObjectId, selectedObject, dungeonName, dungeonSize, scrollPansViewport }) => {\n    if (selectedObjectId) {\n        return <React.Fragment>\n            {selectedObject.label !== undefined &&\n                <StateEditorCard title='Label'>\n                    <label>\n                        Label:\n                        <input\n                            className=\"form-control bg-secondary text-light\"\n                            type=\"text\"\n                            value={selectedObject.label}\n                            onChange={(changeEvent) => dispatch(DungeonActions.setSelectedObjectLabel(selectedObjectId, changeEvent.target.value))}>\n                        </input>\n                    </label>\n                </StateEditorCard>}\n            {selectedObject.textureUrl !== undefined &&\n                <StateEditorCard title=\"Texture Path\">\n                    <label>\n                        Path:\n                        <input\n                            className=\"form-control bg-secondary text-light\"\n                            value={selectedObject.textureUrl}\n                            onChange={(changeEvent) => {dispatch(DungeonActions.setSelectedObjectTextureUrl(selectedObjectId, changeEvent.target.value))}}></input>\n                    </label>\n                </StateEditorCard>\n            }\n            {selectedObject.position &&\n                <PositionEditor\n                    x={selectedObject.position.x}\n                    y={selectedObject.position.y}\n                    onUpdate={(x, y) => dispatch(DungeonActions.setSelectedObjectPosition(selectedObjectId, x, y))} />\n            }\n            {selectedObject.size &&\n                <SizeEditor\n                    width={selectedObject.size.width}\n                    height={selectedObject.size.height}\n                    onUpdate={(width, height) => dispatch(DungeonActions.setSelectedObjectSize(selectedObjectId, width, height))} />\n            }\n            {selectedObject.start &&\n                <PositionEditor\n                    title=\"Start\"\n                    x={selectedObject.start.x}\n                    y={selectedObject.start.y}\n                    onUpdate={(x,y) => dispatch(DungeonActions.setSelectedObjectStart(selectedObjectId, x, y))} />\n            }\n            {selectedObject.end &&\n                <PositionEditor\n                    title=\"End\"\n                    x={selectedObject.end.x}\n                    y={selectedObject.end.y}\n                    onUpdate={(x,y) => dispatch(DungeonActions.setSelectedObjectEnd(selectedObjectId, x, y))} />\n            }\n            {selectedObject.angle !== undefined &&\n                <StateEditorCard title=\"Angle\">\n                    <label>\n                        Angle:\n                        <input\n                            className=\"form-control bg-secondary text-light\"\n                            type=\"number\"\n                            step=\"45\"\n                            min=\"-360\"\n                            max=\"360\"\n                            value={selectedObject.angle}\n                            onChange={(changeEvent) => {dispatch(DungeonActions.setSelectedObjectAngle(selectedObjectId, changeEvent.target.value))}}></input>\n                        <input\n                            className=\"form-control bg-secondary text-light\"\n                            type=\"range\"\n                            step=\"45\"\n                            min=\"-360\"\n                            max=\"360\"\n                            style={{direction: \"rtl\"}}\n                            value={selectedObject.angle}\n                            onChange={(changeEvent) => {dispatch(DungeonActions.setSelectedObjectAngle(selectedObjectId, changeEvent.target.value))}}></input>\n                    </label>\n                </StateEditorCard>\n            }\n            {selectedObjectId &&\n                <StateEditorCard title=\"Actions\">\n                    <button\n                        className=\"btn btn-outline-danger\"\n                        onClick={() => dispatch(DungeonActions.deleteObjects([selectedObjectId]))}>\n                            Delete Object\n                    </button>\n                </StateEditorCard>\n            }\n        </React.Fragment>\n    }\n    else {\n        return <React.Fragment>\n            <StateEditorCard title=\"Instructions\">\n                <p><i>Right click</i> to pan the view.</p>\n                <p><i>Scroll</i> to zoom in and out.</p>\n                <p><i>Left click and drag</i> to create new spaces with the New Space tool.</p>\n                <p><i>Left click</i> to select spaces with the Select tool.</p>\n                <p><i>Arrow keys</i> will move the currently selected space.</p>\n                <p><i>Delete</i> will delete the currently selected space.</p>\n            </StateEditorCard>\n            <StateEditorCard title=\"Actions\">\n                <button\n                    className=\"btn btn-primary form-control mb-2\"\n                    onClick={() => dispatch(EditorActions.exportToPngClicked())}>\n                        Download Dungeon as PNG\n                </button>\n                <button\n                    className=\"btn btn-outline-danger form-control mb-2\"\n                    onClick={() => dispatch(DungeonActions.clearDungeon())}>\n                        New Dungeon\n                </button>\n            </StateEditorCard>\n            <StateEditorCard title=\"Dungeon Properties\">\n                <label>\n                    Dungeon Name:\n                    <input\n                        className=\"form-control bg-secondary text-light\"\n                        value={dungeonName}\n                        onChange={(changeEvent) => dispatch(DungeonActions.setDungeonName(changeEvent.target.value)) } />\n                </label>\n            </StateEditorCard>\n            <SizeEditor\n                title=\"Dungeon Size\"\n                width={dungeonSize.width}\n                height={dungeonSize.height}\n                onUpdate={(width, height) => dispatch(DungeonActions.setDungeonSize(width, height))} />\n            <StateEditorCard title=\"Editor Options\">\n                <div className=\"form-check\">\n                    <label className=\"form-check-label\">\n                        <input\n                            className=\"form-check-input\"\n                            type='checkbox'\n                            value={scrollPansViewport}\n                            onChange={(event) => dispatch(EditorActions.setScrollMovesViewport(event.target.checked))} />\n                        Scroll to pan\n                    </label>\n                </div>\n            </StateEditorCard>\n        </React.Fragment>\n    }\n}\n\nconst mapStateToProps = state => {\n    let selectedObjectId = state.editor.selectedObjectIds.length === 1 ? state.editor.selectedObjectIds[0] : null;\n    let selectedObject = selectedObjectId ? state.dungeon.objects.find(object => object.id === selectedObjectId) : null;\n    return {\n        selectedObjectId: selectedObjectId,\n        selectedObject: selectedObject,\n        dungeonName: state.dungeon.name,\n        dungeonSize: state.dungeon.size,\n        scrollMovesViewport: state.editor.scrollMovesViewport\n    }\n}\n\nStateEditor = connect(mapStateToProps)(StateEditor)\n\nexport default StateEditor\n","import React from \"react\"\n\nconst ToolbarButton = ({toolName, toolId, selectedTool, onClick}) =>\n    <button\n        className={\"btn btn-secondary\" +\n            (selectedTool === toolId ? ' active' : '')}\n        onClick={() => onClick(toolId)}>\n            {toolName}\n    </button>\n\nexport default ToolbarButton;","import React from \"react\"\nimport { connect } from 'react-redux'\nimport { selectTool } from '../reducers/editorActions'\nimport ToolbarButton from \"./ToolbarButton\"\nimport TOOL_TYPE from \"../tools/toolType\"\n\nlet Toolbar = ({ dispatch, selectedTool }) => {\n    const dispatchSelectedTool = (toolId) => dispatch(selectTool(toolId))\n\n    return (\n        <div className=\"btn-group\" role=\"group\">\n            <ToolbarButton\n                toolName='Select'\n                toolId={TOOL_TYPE.SELECT}\n                selectedTool={selectedTool}\n                onClick={dispatchSelectedTool} />\n            <ToolbarButton\n                toolName='New Rectangular Space'\n                toolId={TOOL_TYPE.NEW_SPACE_RECTANGLE}\n                selectedTool={selectedTool}\n                onClick={dispatchSelectedTool} />\n            <ToolbarButton\n                toolName='New Polygonal Space'\n                toolId={TOOL_TYPE.NEW_SPACE_POLYGON}\n                selectedTool={selectedTool}\n                onClick={dispatchSelectedTool} />\n            <ToolbarButton\n                toolName='New Wall'\n                toolId={TOOL_TYPE.NEW_WALL}\n                selectedTool={selectedTool}\n                onClick={dispatchSelectedTool} />\n            <ToolbarButton\n                toolName='New Door'\n                toolId={TOOL_TYPE.NEW_DOOR}\n                selectedTool={selectedTool}\n                onClick={dispatchSelectedTool} />\n            <ToolbarButton\n                toolName='New Label'\n                toolId={TOOL_TYPE.NEW_LABEL}\n                selectedTool={selectedTool}\n                onClick={dispatchSelectedTool} />\n            <ToolbarButton\n                toolName='New Token'\n                toolId={TOOL_TYPE.NEW_TOKEN}\n                selectedTool={selectedTool}\n                onClick={dispatchSelectedTool} />\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    selectedTool: state.editor.selectedTool\n})\n\nToolbar = connect(mapStateToProps)(Toolbar)\n\nexport default Toolbar\n","import React from 'react';\nimport DungeonEditor from \"./components/DungeonEditor.js\";\nimport StateEditor from './components/StateEditor';\nimport Toolbar from './components/Toolbar';\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <nav className=\"navbar navbar-dark bg-secondary\">\n        <span className=\"navbar-brand\">\n          Pungeon\n        </span>\n      </nav>\n      <div className=\"px-5\">\n        <div className=\"py-2\">\n          <Toolbar />\n        </div>\n        <div className=\"row\">\n          <div className=\"col-md-9\">\n            <DungeonEditor />\n          </div>\n          <div className=\"col-md-3\">\n            <StateEditor />\n          </div>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app/App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './app/store.js'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}